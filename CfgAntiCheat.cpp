/*──────────────────────────────────────────────────────┐
│   Author: Connor                                      │
│   Steam:  https://steamcommunity.com/id/_connor       │
│   Github: https://github.com/ConnorAU                 │
│                                                       │
│   Please do not modify or remove this comment block   │
└──────────────────────────────────────────────────────*/

// You cant use 'allVariables' for these namespaces in MP, however you can access their state at mission start using __EVAL to set a config property
CAU_AC_UIV = __EVAL(allvariables uiNameSpace);
CAU_AC_PROFV = __EVAL(allvariables profileNameSpace);

// Most of this config is generated with export scripts, so dont think for a second I wrote all this out by hand.
class CfgAntiCheat {
    //modParams['@JSRS SOUNDMOD',['name']] select 0
    JSRS_Version="JSRS Soundmod - 6.19.0127";

    //modParams['@Discord Rich Presence',['name']] select 0
    DiscordRichPresence_Version="Discord Rich Presence v1.3.1";

// Bad variables scan
	BV[]={"life_cash","life_bank","life_atmcash","life_atmbank","life_vehicles","life_coplevel","life_mediclevel","life_donator","life_adminlevel","life_paycheck","life_licenses","BIS_fnc_dbg_reminder_value","BIS_fnc_dbg_reminder","BIS_MENU_GroupCommunication","BIS_fnc_addCommMenuItem_menu","rscspectator","rscspectator_hints","rscspectator_display","rscspectator_playericon","rscspectator_view","rscspectator_map","rscspectator_vision","rscspectator_keys","rscspectator_interface","myplayeruid","hhahaaaaar","CharlieSheenkeybinds","KickOFF","yolo","runonce","notakeybind","action1","Supa_Licenses","autokick","wallaisseikun","MainMenu","anArray","GEFClose","GEFWhite","GEFRed","GEFGreen","GEFCyan","FirstHint","new_queued","fn_Exec","FND_fnc_select","fnx3","ANTIHACKKICK","tele","dmap","GOLDENS_GLOBAL_SHIT_YEAH","GLASS911_Run","gearDialog_create","lystoKeypress","ThirtySix","LY_SwaggerLikeUs","Jkeyszz","n2","boxofmagic","MainScripts","DMC_fnc_4danews","INFISTARBYPASS","EXEC_TEXT","vehicle_dblclick","init_main","ESP_Count","Nute_Dat_Bomber","s_cash100k","XposPlayer","ly_re_onetime","SKAR_checkA","MainScriptsV4","ViewDistance","check_load","already_load","meins","f1","Dummy","Plane_Jump","c_player","MouseClickEH","distp","nec2","Menu_I_Run_Color_LP","GLASSv1nce_BindHandler","thecar","FastAnimes","GetinPassenger","iaimon","DMC_Re_onetime","func_execOnServer","fnc_serverKickNice","Kick_Admins","DASMOKEON","hovering","r_kelly_be_flying","SLX_XEH_BWC_INIT_COMPILE","VinceLOL_ALTISLIFE","life_fnc_byassSkaroAH","AH_fnc_MP","jayRE","fn_newsbanner","Hack_News","TrollFuncs","Fanatic_InfiPass","keybindings_xxx","AndysClosed","UserFuncs","AltisFuncs","RemExe","BB_nofatigue","bis_fnc_diagkey_var_code","First_PAGE","Get_in_D","i_t_s__m_e_o","Whippy_ESP","TargetFuncs2","life_fnc_antiFreeeeze","LY_keyForward","TY_re_onetime","life_fnc_XaAxAA","GodDamnVehiclesXD","Mystic_FNC_ESP_distance","Esp_Id_setter","DummyMen","whipbut","KrohdoFreedom","selectedPlayer","Lmenu1","ggplayer","throx_menu_item","lvl1","Init_Menu_Slew","D_B_R_T_Y_Slew","V6_GEF","xasfjisisafudmmyx","kekse","UPDATED_RE_36","first","second","Paradox_s3tc4sh","checkChatLoop","bringmeup","JxMxE_hide","JME_Keybinds","JME_has_yet_to_fuck_this_shit","JME_deleteC","JME_Tele","JME_ANAL_PLOW","JME_M_E_N_U_initMenu","JME_M_E_N_U_hax_toggled","W_O_O_K_I_E_FUD_Pro_RE","W_O_O_K_I_E_FUD_Car_RE","JxMxE_Veh_M","JxMxE_LifeCash500k","W_O_O_K_I_E_FUD_FuckUp_GunStore","W_O_O_K_I_E_FUD_M_E_N_U_initMenu","W_O_O_K_I_E_FuckUp_GunStore_a","JME_KillCursor","JME_OPTIONS","JME_M_E_N_U_fill_TROLLmenu","ASSPLUNGE","FOXBYPASS","POLICE_IN_HELICOPTA","JxMxE_EBRP","W_O_O_K_I_E_M_E_N_U_funcs_inited","Menu_Init_Lol","E_X_T_A_S_Y_Atm","W_O_O_K_I_E_Pro_RE","W_O_O_K_I_E_Debug_Mon","W_O_O_K_I_E_Debug_1337","Veh_S_P_A_W_N_Shitt","sfsefse","tw4etinitMenu","tw4etgetControl","JxMxEsp","JxMxE_GOD","JxMxE_Heal","efr4243234","sdfwesrfwesf233","sdgff4535hfgvcxghn","adadawer24_1337","lkjhgfuyhgfd","E_X_T_A_S_Y_M_E_N_U_funcs_inited","dayz_serverObjectMonitor","fsfgdggdzgfd","fsdddInfectLOL","Wookie_List","JxMxE_TP","Wookie_Pro_RE","Wookie_Car_RE","Wookie_Debug_Mon","faze_funcs_inited","advertising_banner_infiSTAR","atext_star_xa","Monky_hax_dbclick","qopfkqpofqk","debug_star_colorful","AntiAntiAntiAntiHax","antiantiantiantih4x","JxMxE_Infect","hub","scrollinit","gfYJV","Lystic_LMAOOOOOOOOOOOOOOOOOOO","Lystic_Re","Lysto_Lyst","E_X_T_A_S_Y_Keybinds","Menulocations","Lystic_Init","scroll_m_init_star","exstr1","pathtoscrdir3","Monky_funcs_inited","JxMxE_secret","Monky_initMenu","player_zombieCheck","E_X_T_A_S_Y_Recoil","godlol","playericons","abcdefGEH","wierdo","go_invisible_infiSTAR","serverObjectMonitor","enamearr","initarr3","locdb","sCode","infAmmoIndex","nukeDONEstar","FUCKTONIC","E_X_T_A_S_Y_FuckUp_GunStore_a","E_X_T_A_S_Y_Cash_1k_t","E_X_T_A_S_Y_Cash_a","E_X_T_A_S_Y_LicenseDrive","E_X_T_A_S_Y_Menu_LOOOOOOOOOL","Metallica_vehicleg0dv3_infiSTAR","JJJJ_MMMM___EEEEEEE_INIT_MENU","JJJJ_MMMM___EEEEEEE_GAPER","JJJJ_MMMM___EEEEEEE_SMOKExWEEDxEVERYDAY_BUM_RAPE","JJJJ_MMMM___EEEEEEE_OPTIONS","JJJJ_MMMM___EEEEEEE_M_E_N_U_fill_Target","E3p","Jesus_MODE","ESP","MissileStrike","AL_Liscenses","NoIllegal","NoWeight","m0nkyaatp_sadksadxa","m0nkyaatp_RANDSTR","myvar23","player_adminlevel","TNK","I_like_turtles","BIGM","Does_Tonic_Like_to_take_Turtle_penis_in_the_ass_LODESTARS","Does_Tonic_Like_to_take_Turtle_penis_in_the_ass_LODESTAR1","GMod","No_No_No_Tonic_likes_A_Big_Fat_Sheep_Cock_Right_in_the_bum_G0d_Mode","Sload","T3le","Tonic_has_a_gaping_vagina","my_anus_hurtz","aKFerm","aKMMenu","aKTitans","aKLikeaG0d","riasgremory_G0d_Mode","aKCarG0d","riasgremory_Car_Jesus","aKE5p","riasgremory_isseilol","aKPMark","riasgremory_Noobs","riasgremory_Bitches","riasgremory_Map_Markers","aKUnMmo","jenesuispasuncheateur_unamo","aKVoit","Loljesaispasquoiecriremdr","isseigremory","gremorysama","aKTaCu","aKCardetroy","aKGetKey","aKKillcursor","aKNoEscort","aKEscort","aKtroll","aKTPall","aKUnrestrain","aKNoEscortMe","aKNoTaze","aKJailplayer","aKLisense","riasgremory_titans_shit_reold","Tonic_merde","jaimepaslepoisin_HLEAL","TTTT_IIII___TTTTTTT_RAP_FR","TTTT_IIII___TTTTTTT_REPGA","TTTT_IIII___TTTTTTT_REPGAs","RGB_ESP_LOOP","Root_Main4","Root_Pistol4","Root_Rifle4","Root_Machinegun4","Root_Sniper4","Root_Launcher4","Root_Attachement4","Jay_vehicle_list","bpbpbp_walls","life_no_injection","fwwfww","FawfwaP","daPlyrMrkrs","ExileClientPlayerLastCombatAt","weaponList","FawfwaP_Veh","bpbpwc_Wep","NSS_AC_adminVarName","NSS_AC_camActive","NSS_AC_camTarget","NSS_AC_Curator_Server","NSS_AC_curatorAllowed","NSS_AC_curatorCurrentlySaving","NSS_AC_curatorInitDone","NSS_AC_curatorModules","NSS_AC_curatorSavedCreations","NSS_AC_Group_Server","NSS_AC_Init","NSS_AC_loggedIn","NSS_AC_observeredCount","NSS_AC_Player_Captive","NSS_AC_Player_godMode","NSS_AC_Player_mapTeleport","NSS_AC_savedCode","NSS_AC_savedInterval","NSS_AC_savedVariables","NSS_AC_spectatorPlayers","NSS_AC_tempVar","NSS_AC_toClipboardFailMessage","NSS_AC_variableMonitorIDC","NSS_AC_variableMonitorRunning","NSS_AC_variablesString","NOTIFICATIONS","BUTTONS","hotkeyHandler","AdminGod","AdminVGod","AdminESP","AdminAiESP","AdminBoost","AdminAutoRevive","AdminTP","AdminDeadMarkers","AdminInfAmmo","AdminRapidFire","AdminRecoil","AdminSway","AdminFatigue","AdminMarkers","AdminFly","AdminSpeed","AdminNoGrass","AdminGiveAmmo","AdminRainbow","AdminReviveNear","viewKeybinds","filterSpawnMenu","fillSpawnMenu","fillPlayerList","copyPlayerLoadout","handleLoadoutSelection","getLoadout","fillLoadoutSubMenu","fillLoadouts","filterPlayerList","handleAdminSpawn","handleAdminFuncs","handlePlayerActions","handlePlayerSelection","createBg","showAdminMenu","trimString","AdminHasPerm","addToAdminList","AdminGodToggle","AdminVGodToggle","AdminEspToggle","AdminAiEspToggle","AdminBoostToggle","lastSpeedAdded","AdminReviveToggle","AdminTpToggle","AdminDeadMarkersToggle","AdminInfAmmoToggle","AdminRapidFireToggle","AdminRecoilToggle","AdminSwayToggle","AdminFatigueToggle","AdminMarkersToggle","AdminFlyToggle","AdminSpeedToggle","AdminGrassToggle","currentTarget","toggleFuncs","AH_TimeStr","AllWeapons","AllVehicles","TargetObject","sortByName","AdminListAis","firstRun","shit","execcode","MAINNN2","gg3gear","dididididee","appppppeeeeexxcoppp","apppppppeeeelllliiiifffee","gigigigigigi","lllllifffeeee","eeeelite","casssssshhhhh111","misissisisiisssss","smissles","HIIDDDEEMEEENNAAAA","RABBITTTTTSSSSS","escorrttttthiisssguyyyyy","sdjnasjdnasjpsjkdnasd","otherrrrajdwdaiwawd","unnnnrreeesstariannn","gettttkeyyysss","asdafsdfsdfsd","asdasdsdafgah5rteagre","sadasdasdasdasdasdasdsa","asdasdasdasdasdasdasder","ounsioamwefjbdyuu","o0lolol04583477b","unnnnliimiitteddd","maptppp","ESSSPPPP","MAPPPESSSPPP","CARRRGODDDD","OMGGODDWOWWWWWWW","FLYYYVEHICLLEEEE","NxIrecommendMain","TrollMenue","missle1","MainMenue","TargetMenue","TargetAllMenue","IreeecOMMMaAndDnd_AL_NoTaze","IreeecOMMMaAndDndEDasd_AL_Liscenses","NuuuuRdalkjda_AL_Impound","LoudoutIrecommend_PDWP","LoudoutIrecommend_LRRP","LoudoutIrecommend_DMRP","LoudoutIrecommend_HEAVYP","LoudoutIrecommend_EBRP","LoudoutIrecommend_MXMP","LoudoutIrecommend_TRGP","LoudoutIrecommend_UNDERWATERP","LoudoutIrecommend_ALTISP","SpawwwnnnIrecommmmEnDndNd_JetBus","IrEeEeEeComMMMenNEnd_IrEeEeEeComMMMenNEnd_aE5Pj","IreCoMMmeNEnNDNdnNDEASD_JesuseMode_a","IreCoMMmeNEnNDNdnNDEASD_JesuseModeOff_a","IreCoMMmeNEnNDNdnNDEASD_TimeD","IreCoMMmeNEnNDNdnNDEASD_TimeN","IreCoMMmeNEnNDNdnNDEASD_TPAll_a","Ddasdaw_AL_NoIllegal","DafuqDukleinerfischkopf_AL_NoWeight","INukeReaper_Invisable","ILuisReaper_heal_t","MoIOoOonster_FuckUp_t","WasdFasd_Target_Loadout","Spyglassistschlecht_Cash_1mill_t","Spyglassistschlecht_Cash_1mill","Spyglassistschlecht_Cash_5mill","DurkSintax_Pro_RE","mein1","AltisMenue","SpawnMariu","SpawnSpike","SpawnMenue","LoadoutMenue","LizenzM","Irecommend_LicenseDrive","Irecommend_LicenseBoat","Irecommend_LicensePilot","Irecommend_LicenseTruck","Irecommend_LicenseCivGun","Irecommend_LicenseSalt","Irecommend_LicenseWeed","Irecommend_LicenseDiamond","Irecommend_LicenseIron","Irecommend_LicenseCopper","Irecommend_LicenseDiving","Irecommend_LicenseCoke","Irecommend_LicenseCiment","Irecommend_LicenseHeroin","Irecommend_LicenseRebel","Irecommend_LicenseSand","DurkSintax_GodMode_t","SpyglassFakeTrigger","U_N_L_I_ME","FuckTonicInTheAssHole_VehM","HealMePlease_NOT","GodModePlease_NOT","fnc_usec_damageHandler","fnc_usec_unconscious","SpawnOffroad","SpawnHatchback","SpawnTruck1","SpawnHeli","DurkSintax_UnrestrainMyself","DurkSintax_UnrestrainTarget","DurkSintax_RestrainTarget","DurkSintax_StopEscortMyself","DurkSintax_EscortPlayer","DurkSintax_StopEscortPlayer","DurkSintax_GetTargetKey","DurkSintax_JailEscape","DurkSintax_JailTarget","CrazyMotherFuckerDurkkkk_SpawnCrate","CrazyMotherFuckerDurkkkk_DelCrate","IrEeEeEeComMMMenNEnd_aE5Pjfnc ","Irecommend_MegaDesync","IrEcOCMmeNEnd_God_MODE","fnc_usec_damageHandler","fnc_usec_unconscious","IrEcOCMmeNEnd_so_fly"};
	BV2[]={"main_re","_fnc_decrypt","_fn_decrypt"};

// addAction text & code scan
	AAT[]={"==","--","**","##","~~","menu","close"};
	AAC[]={"life_cash","life_bank","life_atmcash","life_atmbank","life_vehicles","life_coplevel","life_mediclevel","life_donator","life_adminlevel","life_paycheck","life_licenses","life_hunger","life_thirst","BIS_fnc_arsenal","BIS_fnc_MP","_Decrypt","life_fnc_MP","createUnit","ctrlCreate","createAgent"};

// SCALAR ProfNS Vars
	SCP[]={"gui_bcg_rgb_a","gui_bcg_rgb_b","gui_bcg_rgb_g","gui_bcg_rgb_r","gui_grid_center_h","gui_grid_center_w","gui_grid_center_x","gui_grid_center_y","gui_grid_h","gui_grid_w","gui_grid_x","gui_grid_y","gui_titletext_rgb_a","gui_titletext_rgb_b","gui_titletext_rgb_g","gui_titletext_rgb_r","igui_bcg_rgb_a","igui_bcg_rgb_b","igui_bcg_rgb_g","igui_bcg_rgb_r","igui_error_rgb_a","igui_error_rgb_b","igui_error_rgb_g","igui_error_rgb_r","igui_grid_ace_displaytext_x","igui_grid_ace_displaytext_y","igui_grid_avcamera_h","igui_grid_avcamera_w","igui_grid_avcamera_x","igui_grid_avcamera_y","igui_grid_bar_h","igui_grid_bar_w","igui_grid_bar_x","igui_grid_bar_y","igui_grid_chat_h","igui_grid_chat_w","igui_grid_chat_x","igui_grid_chat_y","igui_grid_comm_h","igui_grid_comm_w","igui_grid_comm_x","igui_grid_comm_y","igui_grid_custominfoleft_h","igui_grid_custominfoleft_w","igui_grid_custominfoleft_x","igui_grid_custominfoleft_y","igui_grid_custominforight_h","igui_grid_custominforight_w","igui_grid_custominforight_x","igui_grid_custominforight_y","igui_grid_gaugealt_h","igui_grid_gaugealt_w","igui_grid_gaugealt_x","igui_grid_gaugealt_y","igui_grid_gaugecompass_h","igui_grid_gaugecompass_w","igui_grid_gaugecompass_x","igui_grid_gaugecompass_y","igui_grid_gaugehorizon_h","igui_grid_gaugehorizon_w","igui_grid_gaugehorizon_x","igui_grid_gaugehorizon_y","igui_grid_gaugespeed_h","igui_grid_gaugespeed_w","igui_grid_gaugespeed_x","igui_grid_gaugespeed_y","igui_grid_gaugestability_h","igui_grid_gaugestability_w","igui_grid_gaugestability_x","igui_grid_gaugestability_y","igui_grid_gps_h","igui_grid_gps_w","igui_grid_gps_x","igui_grid_gps_y","igui_grid_hint_h","igui_grid_hint_w","igui_grid_hint_x","igui_grid_hint_y","igui_grid_menu_h","igui_grid_menu_w","igui_grid_menu_x","igui_grid_menu_y","igui_grid_mission_h","igui_grid_mission_w","igui_grid_mission_x","igui_grid_mission_y","igui_grid_notification_h","igui_grid_notification_w","igui_grid_notification_x","igui_grid_notification_y","igui_grid_radar_x","igui_grid_radar_y","igui_grid_slingloadassistant_h","igui_grid_slingloadassistant_w","igui_grid_slingloadassistant_x","igui_grid_slingloadassistant_y","igui_grid_stamina_h","igui_grid_stamina_w","igui_grid_stamina_x","igui_grid_stamina_y","igui_grid_stance_h","igui_grid_stance_w","igui_grid_stance_x","igui_grid_stance_y","igui_grid_vehicle_h","igui_grid_vehicle_w","igui_grid_vehicle_x","igui_grid_vehicle_y","igui_grid_weapon_h","igui_grid_weapon_w","igui_grid_weapon_x","igui_grid_weapon_y","igui_text_rgb_a","igui_text_rgb_b","igui_text_rgb_g","igui_text_rgb_r","igui_warning_rgb_a","igui_warning_rgb_b","igui_warning_rgb_g","igui_warning_rgb_r"};
	//_a = allVariables profilenamespace select {['gui_',_x] call bis_fnc_instring && {(profilenamespace getvariable _x) isequaltype 0}};_a sort true;copytoclipboard str _a;_a

//Display event handlers
    class DEV {
        class RscMiniMap {
            onLoad="[""onLoad"",_this,""RscMiniMap"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscMiniMap"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscMiniMapSmall {
            onLoad="[""onLoad"",_this,""RscMiniMap"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscMiniMap"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscMsgBox {
            onLoad="[""onLoad"",_this,""RscMsgBox"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscMsgBox"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscMsgBox3 {
            onLoad="[""onLoad"",_this,""RscMsgBox3"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscMsgBox3"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayFileSelect {
            onLoad="[""onLoad"",_this,""RscDisplayFileSelect"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayFileSelect"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayFileSelectImage {
            onLoad="[""onLoad"",_this,""RscDisplayFileSelectImage"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayFileSelectImage"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayScriptingHelp {
            onLoad="[""onLoad"",_this,""RscDisplayScriptingHelp"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayScriptingHelp"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayInterruptEditorPreview {
            onLoad="private ['_dummy']; _dummy = ['Init', _this] execVM '\A3\ui_f\scripts\pauseLoadinit.sqf';";
            onUnload="private ['_dummy']; _dummy = ['Unload', _this] execVM '\A3\ui_f\scripts\pauseOnUnload.sqf';";
        };
        class RscDisplayInsertMarker {
            onLoad="[""onLoad"",_this,""RscDisplayInsertMarker"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayInsertMarker"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayDebug {
            onLoad="[""onLoad"",_this,""RscDisplayDebug"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayDebug"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class G_Expression {
                    class Controls {
                        class SearchButtonExpression {
                            onButtonClick="		_display = ctrlparent (_this select 0);		_ctrlSearch = _display displayctrl 645;		_ctrlSearch ctrlsettext '';		ctrlsetfocus _ctrlSearch;	";
                        };
                    };
                };
                class B_Camera {
                    onButtonClick="(ctrlParent (_this select 0)) closeDisplay 2";
                };
                class B_CameraNew {
                    onButtonClick="(ctrlParent (_this select 0)) closeDisplay 2";
                };
                class G_Design {
                    class controls {
                        class DebugFlow {
                            onButtonClick="diag_debugfsm bis_fnc_missionFlow_fsm";
                        };
                        class DebugCapture {
                            onButtonClick="(ctrlParent (_this select 0)) closeDisplay 2";
                        };
                        class DebugGUI {
                            onButtonClick="(ctrlParent (_this select 0)) closeDisplay 2";
                        };
                        class DebugAnim {
                            onButtonClick="[] call (uinamespace getvariable 'bis_fnc_animVIewer'); (ctrlParent (_this select 0)) closeDisplay 2";
                        };
                        class DebugConfig {
                            onButtonClick="(ctrlParent (_this select 0)) closeDisplay 2";
                        };
                        class DebugFunctions {
                            onButtonClick="(ctrlParent (_this select 0)) closeDisplay 2";
                        };
                    };
                };
            };
        };
        class RscInGameUI {
            class RscUnitInfo {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoSoldier {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoTank {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoAir {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscStanceInfo {
                onLoad="[""onLoad"",_this,""RscStanceInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscStanceInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class UnitInfoSoldier {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class UnitInfoTank {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class UnitInfoCar {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class UnitInfoShip {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class UnitInfoAirplane {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class UnitInfoHelicopter {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscStaminaBar {
                onLoad="[""onLoad"",_this,""RscStaminaBar"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscStaminaBar"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoArtillery {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoAirNoWeapon {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoAirPlaneNoWeapon {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoAirPlane {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoMortar {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoSubmarine {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoShip {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoNoWeapon {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoStatic {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoStaticNoWeapon {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Rangefinder {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_crows {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscWeaponZeroing {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscWeaponRangeZeroing {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_sos {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_nightstalker {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_tws {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_cows {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoParachute {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_tws_sniper {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_tws_mg {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_SDV_driver {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Offroad_01 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Heli_Attack_02_gunner {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Heli_Attack_01_pilot {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Heli_Attack_01_gunner {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Heli_Attack_02_pilot {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_VTOL_01_gunner {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_VTOL_01_copilot {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_VTOL_02_gunner {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOpticsRangeFinderNLAW {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_AV_pilot {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_AV_airplane_pilot {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_AV_driverNoWeapon {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_AV_driver {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_UAV_gunner {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_UGV_gunner {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_CAS_Pilot {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_CAS_01_TGP {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_APC_Tracked_01_gunner {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_APC_Tracked_03_gunner {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_APC_Wheeled_01_gunner {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_APC_Wheeled_03_commander {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_APC_Wheeled_03_gunner {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_MBT_01_driver {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_MBT_01_commander {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_MBT_01_commander_RCWS {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_MBT_01_gunner {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_MBT_02_commander {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_MBT_02_gunner {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_MBT_03_gunner {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_SAM_02 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_SAM_01 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Radar_02 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Radar_01 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_ShipGun_01 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_VLS_01 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoAirRTDBasic {
                onload="uinamespace setvariable ['RscUnitInfoAir',_this select 0];";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoAirRTDFullNoWeapon {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoAirRTDFull {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoAirRTDFullDigitalNoWeapon {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitInfoAirRTDFullDigital {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Gunner_AAA_01 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Gunner_APC_01 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Gunner_APC_02 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Gunner_APC_03 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Gunner_MBT_01 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Gunner_MBT_02 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Gunner_MBT_03 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Commander_01 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Commander_02 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_Commander_03 {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_UAV_06 {
                onLoad="bis_fnc_uav_06_optics = compileFinal preprocessFileLineNumbers 'a3\UI_F_Orange\scripts\uav_06_optic.sqf';((_This select 0) displayctrl 6001) ctrladdeventhandler ['draw',{_this call bis_fnc_uav_06_optics}]";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOptics_UAV_06_TGP {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOpticsRangeFinderMRAWS {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscOpticsRangeFinderVorona {
                onLoad="[""onLoad"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscUnitInfo"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
        };
        class RscTitles {
            class RscTime {
                onload="uinamespace setvariable ['BIS_InfoTime',_this select 0]";
                onunload="uinamespace setvariable ['BIS_InfoTime',nil]";
            };
            class RscUnitInfoUAV {
                onload="uinamespace setvariable ['BIS_UAV_DISPLAY',_this select 0]";
                onunload="uinamespace setvariable ['BIS_UAV_DISPLAY',nil]";
            };
            class RscAAN {
                onLoad="uinamespace setvariable ['BIS_AAN',_this select 0]";
                onUnLoad="uinamespace setvariable ['BIS_AAN',nil]";
            };
            class RscAANnews {
                onLoad="uinamespace setvariable ['BIS_AAN_news',_this select 0]";
                onUnLoad="uinamespace setvariable ['BIS_AAN_news',nil]";
            };
            class RscInfoText {
                onLoad="uinamespace setvariable ['BIS_InfoText',_this select 0]";
                onUnLoad="uinamespace setvariable ['BIS_InfoText',nil]";
            };
            class RscDynamicText {
                onload="uinamespace setvariable ['BIS_dynamicText',_this select 0];";
            };
            class RscCinemaBorder {
                onload="uinamespace setvariable ['RscCinemaBorder',_this select 0];";
            };
            class RscMissionScreen {
                onload="uinamespace setvariable ['BIS_RscMissionScreen',_this select 0];";
            };
            class RscCommonBackground {
                onload="uinamespace setvariable ['RscCommonBackground',_this select 0]";
            };
            class RscClouds {
                onLoad="uinamespace setvariable ['hsim_RscClouds',_this select 0]";
            };
            class RscTitleCommon {
                onload="uinamespace setvariable ['Hsim_RscTitleCommon',_this select 0];";
                onunload="uinamespace setvariable ['Hsim_RscTitleCommon',nil];";
            };
            class RscE3_US_CORE_P2_01 {
                onload="uinamespace setvariable ['RscE3',_this select 0]";
            };
            class RscE3_E3_PiP {
                onload="uinamespace setvariable ['RscE3',_this select 0]";
            };
            class RscE3_E3_Slingload {
                onload="uinamespace setvariable ['RscE3',_this select 0]";
            };
            class RscTitleStructuredText {
                onload="uinamespace setvariable ['RscTitleStructuredText',_this select 0];";
            };
            class RscPIP {
                onLoad="uinamespace setvariable ['RscPIP',_this select 0];";
                onUnload="uinamespace setvariable ['RscPIP',nil];";
            };
            class RscGroupIndicator {
                onLoad="['Init',_this] call (uinamespace getvariable 'bis_fnc_groupIndicator')";
                onUnload="['Exit',_this] call (uinamespace getvariable 'bis_fnc_groupIndicator')";
            };
            class RscFunctionError {
                onload="uinamespace setvariable ['RscFunctionError',_this select 0]";
            };
            class RscHealthTextures {
                onload="uinamespace setvariable ['RscHealthTextures',_this select 0]";
            };
            class RscTilesGroup {
                onLoad="[""onLoad"",_this,""RscTilesGroup"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscTilesGroup"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscEstablishingShot {
                onLoad="[""onLoad"",_this,""RscEstablishingShot"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscEstablishingShot"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscSpectator {
                onLoad="[""onLoad"",_this,""RscSpectator"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscSpectator"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscStatic {
                onLoad="[""onLoad"",_this,""RscStatic"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscStatic"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscNoise {
                onLoad="[""onLoad"",_this,""RscNoise"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscNoise"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscMissionEnd {
                onLoad="[""onLoad"",_this,""RscDisplayDebriefing"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscDisplayDebriefing"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscNotification {
                onLoad="[""onLoad"",_this,""RscNotification"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscNotification"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscCommMenuItems {
                onLoad="[""onLoad"",_this,""RscCommMenuItems"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscCommMenuItems"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscRespawnCounter {
                onLoad="[""onLoad"",_this,""RscRespawnCounter"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscRespawnCounter"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscFiringDrillTime {
                onLoad="[""onLoad"",_this,""RscFiringDrillTime"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscFiringDrillTime"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscFiringDrillCheckpoint {
                onLoad="[""onLoad"",_this,""RscFiringDrillCheckpoint"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscFiringDrillCheckpoint"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscAdvancedHint {
                onLoad="[""onLoad"",_this,""RscAdvancedHint"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscAdvancedHint"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscMPProgress {
                onLoad="[""onLoad"",_this,""RscMissionStatus"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscMissionStatus"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscUnitPlay {
                onload="uinamespace setvariable ['RscUnitPlay',_this select 0];";
            };
            class RscProcedureVisualization {
                onLoad="[""onLoad"",_this,""RscProcedureVisualization"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscProcedureVisualization"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscRevive {
                onLoad="[""onLoad"",_this,""RscRevive"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscRevive"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscHvtPhase {
                onLoad="[""onLoad"",_this,""RscHvtPhase"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscHvtPhase"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscPhaseRules {
                onLoad="[""onLoad"",_this,""RscPhaseRules"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscPhaseRules"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscEGProgress {
                onLoad="[""onLoad"",_this,""RscEGProgress"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscEGProgress"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscDisplayMainMenuBackground {
                onLoad="[""onLoad"",_this,""RscDisplayMainMenuBackground"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscDisplayMainMenuBackground"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscTitleDisplayEmpty {
                onLoad="uiNamespace setVariable ['RscTitleDisplayEmpty',_this select 0]";
            };
            class RscCameraPIP {
                onLoad="uinamespace setvariable ['RscCameraPIP', _this select 0];";
                onUnload="uinamespace setvariable ['RscCameraPIP', nil];";
            };
            class RscCuratorPing {
                onLoad="[""onLoad"",_this,""RscCuratorPing"",'CuratorTitles'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscCuratorPing"",'CuratorTitles'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscCuratorVisionModes {
                onLoad="[""onLoad"",_this,""RscCuratorVisionModes"",'CuratorTitles'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscCuratorVisionModes"",'CuratorTitles'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscMissionText {
                onLoad="[""onLoad"",_this,""RscMissionText"",'BootcampTitles'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscMissionText"",'BootcampTitles'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscRecruitStatus {
                onLoad="[""onLoad"",_this,""RscRecruitStatus"",'BootcampTitles'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscRecruitStatus"",'BootcampTitles'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscVRMeta {
                onLoad="[""onLoad"",_this,""RscVRMeta"",'BootcampTitles'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscVRMeta"",'BootcampTitles'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscPhoneCall {
                onLoad="[""onLoad"",_this,""RscPhoneCall"",'OrangeTitles'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""RscPhoneCall"",'OrangeTitles'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class SplashArma3Orange {
                onLoad="[""onLoad"",_this,""SplashArma3Orange"",'OrangeTitles'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                onUnload="[""onUnload"",_this,""SplashArma3Orange"",'OrangeTitles'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            };
            class RscAnimatedScreen {
                onLoad="uiNamespace setVariable ['bis_animatedScreen_displayMain',_this select 0];";
            };
            class RscAnimatedScreenOverlay {
                onLoad="uiNamespace setVariable ['bis_animatedScreen_displayOverlay',_this select 0];";
            };
        };
        class RscDisplayLoading {
            onLoad="[""onLoad"",_this,""RscDisplayLoading"",'3DENDisplaysTemp'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayLoading"",'3DENDisplaysTemp'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Variants {
                class Loading {
                    onLoad="[""onLoad"",_this,""RscDisplayLoading"",'3DENDisplaysTemp'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                    onUnload="[""onUnload"",_this,""RscDisplayLoading"",'3DENDisplaysTemp'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                };
            };
        };
        class RscDisplayLoadMission {
            onLoad="[""onLoad"",_this,""RscDisplayLoading"",'3DENDisplaysTemp'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayLoading"",'3DENDisplaysTemp'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class LoadingStart {
                    class controls {
                        class Logo {
                            onLoad="if (395180 in getDLCs 1) then {(_this select 0) ctrlsettext '\a3\Ui_f\Data\Logos\arma3apex_white_ca.paa';};";
                        };
                    };
                };
                class Logo3DEN {
                    onLoad="if !(isnull (finddisplay 313)) then {(_this select 0) ctrlshow true;};";
                };
            };
        };
        class RscDisplayNotFreeze {
            onLoad="[""onLoad"",_this,""RscDisplayLoading"",'3DENDisplaysTemp'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayLoading"",'3DENDisplaysTemp'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class LoadingStart {
                    class controls {
                        class Logo {
                            onLoad="if (395180 in getDLCs 1) then {(_this select 0) ctrlsettext '\a3\Ui_f\Data\Logos\arma3apex_white_ca.paa';};";
                        };
                    };
                };
                class Logo3DEN {
                    onLoad="if !(isnull (finddisplay 313)) then {(_this select 0) ctrlshow true;};";
                };
            };
        };
        class RscDisplayNotFreezeBig {
            class controls {
                class CA_Text {
                    onLoad="[missionNamespace, ""OnSaveGame""] call (missionNamespace getVariable ""BIS_fnc_callScriptedEventHandler"");";
                };
            };
        };
        class RscDisplayStart {
            onLoad="[2] call compile preprocessfilelinenumbers gettext (configfile >> 'CfgFunctions' >> 'init'); ['onLoad',_this,'RscDisplayLoading','Loading'] call (uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayLoading"",'3DENDisplaysTemp'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class LoadingStart {
                    class controls {
                        class Logo {
                            onLoad="if (395180 in getDLCs 1) then {(_this select 0) ctrlsettext '\a3\Ui_f\Data\Logos\arma3apex_white_ca.paa';};";
                        };
                    };
                };
            };
        };
        class RscDisplayDiary {
            onKeyDown="if ((_this select 1) == 22) then {closeDialog 129; true} else {false}";
            onLoad="[""onLoad"",_this,""RscDiary"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDiary"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class TopRight {
                    class controls {
                        class ButtonPlayer {
                            onbuttonclick="with uinamespace do {['ButtonPlayer',_this,''] call RscDiary_script};";
                        };
                        class ButtonTextures {
                            onbuttonclick="with uinamespace do {['ButtonTextures',_this,''] call RscDiary_script};";
                        };
                    };
                };
            };
        };
        class RscDisplayMainMap {
            onLoad="[""onLoad"",_this,""RscDiary"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDiary"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class TopRight {
                    class controls {
                        class ButtonPlayer {
                            onbuttonclick="with uinamespace do {['ButtonPlayer',_this,''] call RscDiary_script};";
                        };
                        class ButtonTextures {
                            onbuttonclick="with uinamespace do {['ButtonTextures',_this,''] call RscDiary_script};";
                        };
                    };
                };
                class RespawnControlsGroup {
                    onLoad="(_this select 0) ctrlEnable false;_this execVM 'a3\ui_f\scripts\gui\RscRespawnControls.sqf'";
                };
                class RespawnDetailsControlsGroup {
                    onLoad="(_this select 0) ctrlEnable false";
                };
            };
        };
        class RscDisplayMain {
            onLoad="[""onLoad"",_this,""RscDisplayMain"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayMain"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class Button3DEditor {
                    onButtonClick="!cheatsenabled";
                };
                class Spotlight1 {
                    class Controls {
                        class GroupHover {
                            class Controls {
                                class LineTop {
                                    onLoad="(_this select 0) ctrlsettext toupper ctrltext (_this select 0);";
                                };
                                class LineBottom {
                                    onLoad="(_this select 0) ctrlsettext toupper ctrltext (_this select 0);";
                                };
                            };
                        };
                    };
                };
                class Spotlight3 {
                    class Controls {
                        class GroupHover {
                            class Controls {
                                class LineTop {
                                    onLoad="(_this select 0) ctrlsettext toupper ctrltext (_this select 0);";
                                };
                                class LineBottom {
                                    onLoad="(_this select 0) ctrlsettext toupper ctrltext (_this select 0);";
                                };
                            };
                        };
                    };
                };
                class Logo {
                    onButtonClick="if (scriptdone (missionnamespace getvariable ['RscDisplayMain_credits',scriptnull])) then {RscDisplayMain_credits = _this spawn (uinamespace getvariable 'bis_fnc_credits');};";
                    onSetFocus="(_this select 0) ctrlsettextcolor [1,1,1,1];";
                    onKillFocus="(_this select 0) ctrlsettextcolor [0.9,0.9,0.9,1];";
                    onLoad="(_this select 0) ctrlshow !(395180 in getDLCs 1)";
                };
                class LogoApex {
                    onLoad="(_this select 0) ctrlshow (395180 in getDLCs 1)";
                    onButtonClick="if (scriptdone (missionnamespace getvariable ['RscDisplayMain_credits',scriptnull])) then {RscDisplayMain_credits = _this spawn (uinamespace getvariable 'bis_fnc_credits');};";
                    onSetFocus="(_this select 0) ctrlsettextcolor [1,1,1,1];";
                    onKillFocus="(_this select 0) ctrlsettextcolor [0.9,0.9,0.9,1];";
                };
                class TitleIconSingleplayer {
                    onMouseEnter="(_this select 0) ctrlsettextcolor [0,0,0,1];";
                    onSetFocus="(_this select 0) ctrlsettextcolor [0,0,0,1];";
                    onMouseExit="(_this select 0) ctrlsettextcolor [1,1,1,1];";
                    onKillFocus="(_this select 0) ctrlsettextcolor [1,1,1,1];";
                };
                class GroupSingleplayer {
                    class Controls {
                        class Campaigns {
                            onbuttonclick="uinamespace setvariable ['RscDisplayCampaignLoad_title', toUpper (localize 'STR_A3_RSCDISPLAYMAIN_BUTTONCAMPAIGN')];";
                        };
                        class Showcases {
                            onbuttonclick="uinamespace setvariable ['RscDisplaySingleMission_title', toUpper (localize 'STR_A3_RSCDISPLAYMAIN_BUTTONSHOWCASES')];";
                        };
                        class Challenges {
                            onbuttonclick="uinamespace setvariable ['RscDisplaySingleMission_title', toUpper (localize 'STR_A3_RSCDISPLAYMAIN_BUTTONCHALLENGES')];";
                        };
                        class Scenarios {
                            onbuttonclick="uinamespace setvariable ['RscDisplaySingleMission_title', toUpper (localize 'STR_A3_RSCDISPLAYMAIN_BUTTONSCENARIOS')];";
                        };
                    };
                };
                class TitleIconMultiplayer {
                    onMouseEnter="(_this select 0) ctrlsettextcolor [0,0,0,1];";
                    onSetFocus="(_this select 0) ctrlsettextcolor [0,0,0,1];";
                    onMouseExit="(_this select 0) ctrlsettextcolor [1,1,1,1];";
                    onKillFocus="(_this select 0) ctrlsettextcolor [1,1,1,1];";
                };
                class GroupMultiplayer {
                    class Controls {
                        class ApexProtocol {
                            onbuttonclick="(finddisplay 0) createMPCampaignDisplay 'Apex';";
                            Onload="(_this select 0) ctrlshow isclass (configfile >> 'cfgmissions' >> 'mpmissions' >> 'apex')";
                        };
                    };
                };
                class TitleIconTutorials {
                    onMouseEnter="(_this select 0) ctrlsettextcolor [0,0,0,1];";
                    onSetFocus="(_this select 0) ctrlsettextcolor [0,0,0,1];";
                    onMouseExit="(_this select 0) ctrlsettextcolor [1,1,1,1];";
                    onKillFocus="(_this select 0) ctrlsettextcolor [1,1,1,1];";
                };
                class GroupTutorials {
                    class Controls {
                        class Bootcamp {
                            onbuttonclick="uinamespace setvariable ['RscDisplayCampaignLoad_title', toUpper (localize 'STR_A3_RSCDISPLAYMAIN_BUTTONBOOTCAMP')];";
                        };
                        class Arsenal {
                            onbuttonclick="playMission['','\A3\Missions_F_Bootcamp\Scenarios\Arsenal.VR']";
                        };
                        class CommunityGuides {
                            onbuttonclick="(ctrlparent (_this select 0)) createDisplay 'RscDisplayCommunityGuide'";
                        };
                    };
                };
                class TitleIconOptions {
                    onMouseEnter="(_this select 0) ctrlsettextcolor [0,0,0,1];";
                    onSetFocus="(_this select 0) ctrlsettextcolor [0,0,0,1];";
                    onMouseExit="(_this select 0) ctrlsettextcolor [1,1,1,1];";
                    onKillFocus="(_this select 0) ctrlsettextcolor [1,1,1,1];";
                };
                class TitleSession {
                    onMouseEnter="(_this select 0) ctrlsettextcolor [0,0,0,1];";
                    onSetFocus="(_this select 0) ctrlsettextcolor [0,0,0,1];";
                    onMouseExit="(_this select 0) ctrlsettextcolor [1,1,1,0.5];";
                    onKillFocus="(_this select 0) ctrlsettextcolor [1,1,1,0.5];";
                };
                class GroupSession {
                    class Controls {
                        class Unit {
                            onMouseEnter="(_this select 0) ctrlsettextcolor [1,1,1,1];";
                            onSetFocus="(_this select 0) ctrlsettextcolor [1,1,1,1];";
                            onMouseExit="(_this select 0) ctrlsettextcolor [1,1,1,1];";
                            onKillFocus="(_this select 0) ctrlsettextcolor [1,1,1,1];";
                        };
                    };
                };
                class Exit {
                    onMouseEnter="(_this select 0) ctrlsettextcolor [1,1,1,1];";
                    onSetFocus="(_this select 0) ctrlsettextcolor [1,1,1,1];";
                    onMouseExit="(_this select 0) ctrlsettextcolor [1,1,1,0.5];";
                    onKillFocus="(_this select 0) ctrlsettextcolor [1,1,1,0.5];";
                };
                class InfoDLCsOwned {
                    class Controls {
                        class Button {
                            onButtonClick="(ctrlparent (_this select 0)) createdisplay 'RscDisplayDLCContentBrowser';";
                        };
                    };
                };
                class InfoDLCs {
                    class Controls {
                        class Button {
                            onButtonClick="(ctrlparent (_this select 0)) createdisplay 'RscDisplayDLCContentBrowser';";
                        };
                    };
                };
                class InfoNews {
                    class Controls {
                        class News {
                            onLoad="(_this select 0) ctrlenable false;";
                        };
                    };
                };
                class InfoVersion {
                    class Controls {
                        class Version {
                            onLoad="(_this select 0) ctrlenable false;";
                        };
                        class VersionDev {
                            onLoad="(_this select 0) ctrlenable false;";
                        };
                    };
                };
                class ProofsOfConcept {
                    onbuttonclick="				uinamespace setvariable ['RscDisplaySingleMission_title','INTERNAL CONCEPTS'];				(ctrlparent (_this select 0)) createMissionDisplay ['','Concepts'];			";
                    onLoad="if (cheatsenabled && {count (configfile >> 'CfgMissions' >> 'Concepts') > 0}) then {(_this select 0) ctrlshow true;};";
                };
            };
        };
        class RscDisplaySingleMission {
            onLoad="[""onLoad"",_this,""RscDisplaySingleMission"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplaySingleMission"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onChildDestroyed="		_nextMission = uinamespace getvariable ['RscDisplaySingleMission_nextMission',''];_nextMission call bis_fnc_log;		if (ctrlidd (_this select 1) == 50 && _nextMission != '') then {(_this select 0) closedisplay 2; playMission['',_nextMission];};	";
            class controls {
                class SearchButton {
                    onButtonClick="		_display = ctrlparent (_this select 0);		_ctrlSearch = _display displayctrl 645;		_ctrlSearch ctrlsettext '';		ctrlsetfocus _ctrlSearch;	";
                };
            };
        };
        class RscDisplayCampaignLoad {
            onLoad="[""onLoad"",_this,""RscDisplayCampaignLoad"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayCampaignLoad"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class SearchButton {
                    onButtonClick="		_display = ctrlparent (_this select 0);		_ctrlSearch = _display displayctrl 645;		_ctrlSearch ctrlsettext '';		ctrlsetfocus _ctrlSearch;	";
                };
            };
        };
        class RscDisplayGetReady {
            onLoad="[""onLoad"",_this,""RscDiary"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDiary"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class TopRight {
                    class controls {
                        class ButtonPlayer {
                            onbuttonclick="with uinamespace do {['ButtonPlayer',_this,''] call RscDiary_script};";
                        };
                        class ButtonTextures {
                            onbuttonclick="with uinamespace do {['ButtonTextures',_this,''] call RscDiary_script};";
                        };
                    };
                };
            };
        };
        class RscDisplayGear {
            onLoad="if (isNil('IGUI_GEAR_activeFilter')) then { IGUI_GEAR_activeFilter = 0;}; private ['_dummy']; _dummy = [_this,'initDialog'] call compile preprocessFile	'\A3\ui_f\scripts\handleGear.sqf'; _dummy = [_this,'onLoad'] execVM	'\A3\ui_f\scripts\handleGear.sqf'; _dummy;";
            class controls {
                class ListboxArrows {
                    class Controls {
                        class CA_B_Add {
                            onSetFocus="private [""_dummy""]; _dummy = [_this,""onFocus""] execVM	""\A3\ui_f\scripts\handleGear.sqf""; _dummy;";
                            onButtonClick="private [""_dummy""]; _dummy = [_this,""onLBListSelChanged""] execVM ""\A3\ui_f\scripts\handleGear.sqf""; _dummy;";
                        };
                        class Available_items {
                            onKeyDown="private [""_dummy""]; _dummy = [_this,""onKeyDown"",0,107,0,107] execVM	""\A3\ui_f\scripts\handleGear.sqf""; _dummy;";
                            onLBSelChanged="private [""_dummy""]; _dummy = [_this,""onLBSelChanged""] execVM ""\A3\ui_f\scripts\handleGear.sqf""; _dummy;";
                            onLBListSelChanged="private [""_dummy""]; _dummy = [_this,""onLBListSelChanged""] execVM ""\A3\ui_f\scripts\handleGear.sqf""; _dummy;";
                            onKillFocus="private [""_dummy""]; _dummy = [_this,""onKillFocus""] execVM	""\A3\ui_f\scripts\handleGear.sqf""; _dummy;";
                        };
                        class CA_B_Remove {
                            onSetFocus="private [""_dummy""]; _dummy = [_this,""onFocus""] execVM ""\A3\ui_f\scripts\handleGear.sqf""; _dummy;";
                            onButtonClick="private [""_dummy""]; _dummy = [_this,""onLBListSelChanged""] execVM ""\A3\ui_f\scripts\handleGear.sqf""; _dummy;";
                        };
                    };
                };
            };
        };
        class RscDisplayMission {
            onLoad="[""onLoad"",_this,""RscDisplayMission"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayMission"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayMissionEnd {
            onLoad="[""onLoad"",_this,""RscDisplayMissionEnd"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayMissionEnd"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class ButtonReturnToHub {
                    onButtonClick="endmission 'A';";
                };
            };
            class controlsBackground {
                class TileGroup {
                    onLoad="[ctrlParent (_this select 0), ""RscDisplayMissionEnd""] call (uiNamespace getVariable 'BIS_fnc_guiEffectTiles')";
                };
            };
        };
        class RscDisplayTeamSwitch {
            onLoad="[""onLoad"",_this,""RscDisplayTeamSwitch"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayTeamSwitch"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class CA_TSRoles {
                    onLBSelChanged="_dummy = [_this, ""CA_TS_UnitSelected""] execVM ""\A3\ui_f\scripts\TeamSwitch.sqf"";";
                    onLBDblClick="_dummy = [_this, ""CA_TS_ListDoubleClick""] execVM ""\A3\ui_f\scripts\TeamSwitch.sqf"";";
                };
                class CA_TSMap {
                    onMouseButtonClick="_dummy = [_this, ""CA_TS_MapClick""] execVM ""\A3\ui_f\scripts\TeamSwitch.sqf"";";
                    onMouseButtonDblClick="_dummy = [_this, ""CA_TS_ListDoubleClick""] execVM ""\A3\ui_f\scripts\TeamSwitch.sqf"";";
                };
                class CA_ButtonViewUnit {
                    onButtonClick="_dummy = [_this, ""CA_TS_ViewUnit""] execVM ""\A3\ui_f\scripts\TeamSwitch.sqf"";";
                };
            };
        };
        class RscDisplayInterrupt {
            onLoad="[""onLoad"",_this,""RscDisplayInterrupt"",'3DENDisplaysTemp'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayInterrupt"",'3DENDisplaysTemp'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class ButtonReturnToHub {
                    onButtonClick="endmission 'A';";
                };
                class ButtonSkip {
                    onButtonClick="private ['_dummy']; _dummy = [_this,'skip'] call compile preprocessFile '\A3\ui_f\scripts\pauseCutScene.sqf';";
                };
                class ButtonAgain {
                    onButtonClick="private ['_dummy']; _dummy = [_this,'again'] call compile preprocessFile '\A3\ui_f\scripts\pauseCutScene.sqf';";
                };
            };
            class controlsBackground {
                class TileGroup {
                    onLoad="[ctrlParent (_this select 0), ""RscDisplayInterrupt""] call (uiNamespace getVariable 'BIS_fnc_guiEffectTiles')";
                };
            };
        };
        class RscDisplayInterruptRevert {
            onLoad="[""onLoad"",_this,""RscDisplayInterruptRevert"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayInterruptRevert"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controlsBackground {
                class TileGroup {
                    onLoad="[ctrlParent (_this select 0), ""RscDisplayInterruptRevert""] call (uiNamespace getVariable 'BIS_fnc_guiEffectTiles')";
                };
            };
        };
        class RscDisplaySelectSave {
            onLoad="[""onLoad"",_this,""RscDisplaySelectSave"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplaySelectSave"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayMPInterrupt {
            onLoad="[""onLoad"",_this,""RscDisplayMPInterrupt"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayMPInterrupt"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controlsBackground {
                class TileGroup {
                    onLoad="[ctrlParent (_this select 0), ""RscDisplayMPInterrupt""] call (uiNamespace getVariable 'BIS_fnc_guiEffectTiles')";
                };
            };
        };
        class RscDisplayDebriefing {
            onLoad="[""onLoad"",_this,""RscDisplayDebriefing"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayDebriefing"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayMissionFail {
            onLoad="[""onLoad"",_this,""RscDisplayMissionFail"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayMissionFail"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayLogin {
            onLoad="[""onLoad"",_this,""RscDisplayLogin"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayLogin"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayModLauncher {
            onLoad="[""onLoad"",_this,""RscDisplayModLauncher"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayModLauncher"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayOptions {
            onLoad="[""onLoad"",_this,""RscDisplayOptions"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayOptions"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayOptionsVideo {
            onLoad="[""onLoad"",_this,""RscDisplayOptionsVideo"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayOptionsVideo"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayOptionsAudio {
            onLoad="[""onLoad"",_this,""RscDisplayOptionsAudio"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayOptionsAudio"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controlsBackground {
                class Vignette {
                    onLoad="(_this select 0) ctrlshow !is3DEN;";
                };
                class TileGroup {
                    onLoad="(_this select 0) ctrlshow !is3DEN;";
                };
                class BackgroundDisable {
                    onLoad="(_this select 0) ctrlshow is3DEN;";
                };
                class BackgroundDisableTiles {
                    onLoad="(_this select 0) ctrlshow is3DEN;";
                };
            };
        };
        class RscDisplayMicSensitivityOptions {
            onLoad="[""onLoad"",_this,""RscDisplayMicSensitivityOptions"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayMicSensitivityOptions"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayGameOptions {
            onLoad="[""onLoad"",_this,""RscDisplayGameOptions"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayGameOptions"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controlsBackground {
                class Vignette {
                    onLoad="(_this select 0) ctrlshow !is3DEN;";
                };
                class TileGroup {
                    onLoad="(_this select 0) ctrlshow !is3DEN;";
                };
                class BackgroundDisable {
                    onLoad="(_this select 0) ctrlshow is3DEN;";
                };
                class BackgroundDisableTiles {
                    onLoad="(_this select 0) ctrlshow is3DEN;";
                };
            };
        };
        class RscDisplayControlSchemes {
            onLoad="[""onLoad"",_this,""RscDisplayControlSchemes"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayControlSchemes"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayConfigure {
            onLoad="[""onLoad"",_this,""RscDisplayConfigure"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayConfigure"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controlsBackground {
                class Vignette {
                    onLoad="(_this select 0) ctrlshow !is3DEN;";
                };
                class TileGroup {
                    onLoad="(_this select 0) ctrlshow !is3DEN;";
                };
                class BackgroundDisable {
                    onLoad="(_this select 0) ctrlshow is3DEN;";
                };
                class BackgroundDisableTiles {
                    onLoad="(_this select 0) ctrlshow is3DEN;";
                };
            };
        };
        class RscDisplayConfigureAction {
            onLoad="[""onLoad"",_this,""RscDisplayConfigureAction"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayConfigureAction"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class ControlsBackground {
                class Vignette {
                    onLoad="(_this select 0) ctrlshow !is3DEN;";
                };
                class TileGroup {
                    onLoad="(_this select 0) ctrlshow !is3DEN;";
                };
                class BackgroundDisable {
                    onLoad="(_this select 0) ctrlshow is3DEN;";
                };
                class BackgroundDisableTiles {
                    onLoad="(_this select 0) ctrlshow is3DEN;";
                };
            };
        };
        class RscDisplayConfigureControllers {
            onLoad="[""onLoad"",_this,""RscDisplayConfigureControllers"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayConfigureControllers"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controlsBackground {
                class Vignette {
                    onLoad="(_this select 0) ctrlshow !is3DEN;";
                };
                class TileGroup {
                    onLoad="(_this select 0) ctrlshow !is3DEN;";
                };
                class BackgroundDisable {
                    onLoad="(_this select 0) ctrlshow is3DEN;";
                };
                class BackgroundDisableTiles {
                    onLoad="(_this select 0) ctrlshow is3DEN;";
                };
            };
        };
        class RscDisplayCustomizeController {
            onLoad="[""onLoad"",_this,""RscDisplayCustomizeController"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayCustomizeController"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayJoystickSchemes {
            onLoad="[""onLoad"",_this,""RscDisplayJoystickSchemes"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayJoystickSchemes"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayFieldManual {
            onLoad="[""onLoad"",_this,""RscDisplayFieldManual"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayFieldManual"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplaySelectIsland {
            onLoad="[""onLoad"",_this,""RscDisplaySelectIsland"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplaySelectIsland"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class IslandsBox {
                    onLoad=" 				params [""_ctrl""]; 				lbSort _ctrl; 				for ""_i"" from 0 to lbSize _ctrl - 1 do 				{ 					if (_ctrl lbData _i == worldName) exitWith 					{ 						_ctrl lbSetCurSel _i; 					}; 				}; 			";
                };
                class IslandGroup {
                    onload="(_this select 0) ctrlenable false;";
                };
            };
        };
        class RscDisplayCustomArcade {
            onLoad="[""onLoad"",_this,""RscDisplayCustomArcade"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayCustomArcade"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayArcadeMap {
            onLoad="[""onLoad"",_this,""RscDisplayArcadeMap"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayArcadeMap"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class ButtonsGroup {
                    class controls {
                        class Clear {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Load {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Save {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class SaveAs {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Merge {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Intel {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Debug {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Functions {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Config {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Layout {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class PublishMission {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Textures {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class IDs {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                    };
                };
            };
        };
        class RscDisplayArcadeUnit {
            onLoad="[""onLoad"",_this,""RscDisplayArcadeUnit"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayArcadeUnit"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayArcadeModules {
            onLoad="[""onLoad"",_this,""RscDisplayArcadeModules"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayArcadeModules"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayArcadeGroup {
            onLoad="[""onLoad"",_this,""RscDisplayArcadeGroup"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayArcadeGroup"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class CA_Azimut {
                    onMouseButtonUp="private [""_display"", ""_control""]; _display = ctrlParent (_this select 0); _control = _display displayctrl 104; ctrlSetFocus _control;";
                };
            };
        };
        class RscDisplayArcadeWaypoint {
            onLoad="[""onLoad"",_this,""RscDisplayArcadeWaypoint"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayArcadeWaypoint"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayArcadeMarker {
            onLoad="[""onLoad"",_this,""RscDisplayArcadeMarker"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayArcadeMarker"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayArcadeSensor {
            onLoad="[""onLoad"",_this,""RscDisplayArcadeSensor"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayArcadeSensor"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayArcadeEffects {
            onLoad="[""onLoad"",_this,""RscDisplayArcadeEffects"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayArcadeEffects"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayTemplateSave {
            onLoad="[""onLoad"",_this,""RscDisplayTemplateSave"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayTemplateSave"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayPublishMission {
            onLoad="[""onLoad"",_this,""RscDisplayPublishMission"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayPublishMission"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayPublishMissionSelectTags {
            onLoad="[""onLoad"",_this,""RscDisplayPublishMissionSelectTags"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayPublishMissionSelectTags"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayTemplateLoad {
            onLoad="[""onLoad"",_this,""RscDisplayTemplateLoad"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayTemplateLoad"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayIntel {
            onLoad="[""onLoad"",_this,""RscDisplayIntel"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayIntel"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayMultiplayer {
            onLoad="[""onLoad"",_this,""RscDisplayMultiplayer"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayMultiplayer"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class TabQuickPlay {
                    onButtonClick="(findDisplay 8) createDisplay 'RscDisplayQuickPlay'";
                };
            };
        };
        class RscDisplayHostSettings {
            onLoad="[""onLoad"",_this,""RscDisplayHostSettings"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayHostSettings"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayRemoteMissions {
            onLoad="[""onLoad"",_this,""RscDisplayRemoteMissions"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayRemoteMissions"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayRemoteMissionVoted {
            onLoad="[""onLoad"",_this,""RscDisplayRemoteMissionVoted"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayRemoteMissionVoted"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayServer {
            onLoad="[""onLoad"",_this,""RscDisplayRemoteMissions"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayRemoteMissions"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayClient {
            onLoad="[""onLoad"",_this,""RscDisplayLoading"",'Loading'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayLoading"",'Loading'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayMultiplayerSetup {
            onLoad="[""onLoad"",_this,""RscDisplayMultiplayerSetup"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayMultiplayerSetup"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayMultiplayerSetupParams {
            onLoad="[""onLoad"",_this,""RscDisplayMultiplayerSetupParams"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayMultiplayerSetupParams"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayMultiplayerSetupParameter {
            onLoad="[""onLoad"",_this,""RscDisplayMultiplayerSetupParameter"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayMultiplayerSetupParameter"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayPassword {
            onLoad="[""onLoad"",_this,""RscDisplayPassword"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayPassword"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayIPAddress {
            onLoad="[""onLoad"",_this,""RscDisplayIPAddress"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayIPAddress"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayFilter {
            onLoad="[""onLoad"",_this,""RscDisplayFilter"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayFilter"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayMPPlayers {
            class controls {
                class CA_ValuePlayers {
                    onLBSelChanged="_this call compile preprocessfile ""\A3\ui_f\scripts\lbColor.sqf"";";
                };
            };
        };
        class RscDisplayClientWait {
            class Cancel {
                onMouseEnter="_display = ctrlParent (_this select 0); _ctrl031 = _display displayCtrl 031; _ctrl032 = _display displayCtrl 032; _ctrl031 ctrlSetTextColor [0.84,1,0.55,1]; _ctrl032 ctrlSetTextColor [0, 0, 0, 1]";
                onMouseExit="_display = ctrlParent (_this select 0); _ctrl031 = _display displayCtrl 031; _ctrl032 = _display displayCtrl 032; _ctrl031 ctrlSetTextColor [1,1,1,0.9]; _ctrl032 ctrlSetTextColor [0, 0, 0, 0.9]";
                onSetFocus="_display = ctrlParent (_this select 0); _ctrl031 = _display displayCtrl 031; _ctrl032 = _display displayCtrl 032; _ctrl031 ctrlSetTextColor [0.84,1,0.55,1]; _ctrl032 ctrlSetTextColor [0, 0, 0, 1]";
                onKillFocus="_display = ctrlParent (_this select 0); _ctrl031 = _display displayCtrl 031; _ctrl032 = _display displayCtrl 032; _ctrl031 ctrlSetTextColor [1,1,1,0.9]; _ctrl032 ctrlSetTextColor [0, 0, 0, 0.9]";
            };
        };
        class RscDisplayServerGetReady {
            onLoad="[""onLoad"",_this,""RscDiary"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDiary"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class TopRight {
                    class controls {
                        class ButtonPlayer {
                            onbuttonclick="with uinamespace do {['ButtonPlayer',_this,''] call RscDiary_script};";
                        };
                        class ButtonTextures {
                            onbuttonclick="with uinamespace do {['ButtonTextures',_this,''] call RscDiary_script};";
                        };
                    };
                };
            };
        };
        class RscDisplayClientGetReady {
            onLoad="[""onLoad"",_this,""RscDiary"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDiary"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class TopRight {
                    class controls {
                        class ButtonPlayer {
                            onbuttonclick="with uinamespace do {['ButtonPlayer',_this,''] call RscDiary_script};";
                        };
                        class ButtonTextures {
                            onbuttonclick="with uinamespace do {['ButtonTextures',_this,''] call RscDiary_script};";
                        };
                    };
                };
            };
        };
        class Cfg3DEN {
            class Attributes {
                class ObjectTypeFilterWithCounter {
                    class Controls {
                        class Value {
                            class Controls {
                                class Text1 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Text2 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Text3 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Text4 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                            };
                        };
                    };
                };
                class ObjectState {
                    class Controls {
                        class Value {
                            class Controls {
                                class Checkbox1 {
                                    onCheckedChanged="['objectState_onCheckedChanged',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Checkbox2 {
                                    onCheckedChanged="['objectState_onCheckedChanged',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Checkbox3 {
                                    onCheckedChanged="['objectState_onCheckedChanged',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Checkbox4 {
                                    onCheckedChanged="['objectState_onCheckedChanged',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Checkbox5 {
                                    onCheckedChanged="['objectState_onCheckedChanged',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Checkbox6 {
                                    onCheckedChanged="['objectState_onCheckedChanged',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                            };
                        };
                    };
                };
                class DoorStatesModule {
                    class Controls {
                        class Value {
                            class Controls {
                                class CheckboxBackground1 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox1 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text1 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground2 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox2 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text2 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground3 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox3 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text3 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground4 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox4 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text4 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground5 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox5 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text5 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground6 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox6 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text6 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground7 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox7 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text7 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground8 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox8 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text8 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground9 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox9 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text9 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground10 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox10 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text10 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground11 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox11 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text11 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground12 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox12 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text12 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground13 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox13 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text13 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground14 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox14 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text14 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground15 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox15 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text15 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground16 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox16 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text16 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground17 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox17 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text17 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground18 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox18 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text18 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground19 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox19 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text19 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground20 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox20 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text20 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground21 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox21 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text21 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground22 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox22 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text22 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground23 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox23 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text23 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground24 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox24 {
                                    onMouseButtonDown="['objectDoors_onMouseButtonUp',[get3DENSelected 'logic' select 0,_this]] call bis_fnc_moduleEditTerrainObject";
                                };
                                class Text24 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                            };
                        };
                    };
                };
                class Combo {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class ComboPreview {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                        class Preview {
                            onMouseButtonClick="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlButton = _this select 0;				_ctrlGroup = ctrlParentControlsGroup _ctrlButton;				_ctrlCombo = _ctrlGroup controlsgroupctrl 100;				_path = [configfile,campaignconfigfile,missionconfigfile] select ((_ctrlCombo lbvalue lbcursel _ctrlCombo) max 0);				_cfg = configfile >> 'cfg3den' >> 'attributes' >> ctrlclassname _ctrlGroup >> 'Controls' >> ctrlclassname _ctrlCombo >> 'ItemsConfig';				{_path = _path >> _x;} foreach getarray (_cfg >> 'path');				_data = _ctrlCombo lbdata lbcursel _ctrlCombo;				switch (tolower configname _path) do {					case 'cfgmusic': {						playmusic _data;					};					case 'cfgsound': {						playsound _data;					};					case 'cfgvoice': {						_protocol = gettext (_path >> _data >> 'protocol');						_directory = getarray (_path >> _data >> 'directories') param [0,''];						if (_directory != '') then {							_word = selectrandom ['AwaitingOrders','IAmReady','ReadyForOrders','StandingBy','Waiting'];							_wordPath = getarray (configfile >> _protocol >> 'Words' >> _word) param [0,''];							if (_wordPath != '') then {								_path = _directory + _wordPath;								if (_path select [0,1] == '\') then {_path = _path select [1];};								playsound3d [_path,get3dencamera];							};						};					};					default {						_item = _path >> _data;						if (isclass _item) then {							_soundArray = getarray (_item >> 'sounds');							if (count _soundArray > 0) then {								_soundArray = getarray (_item >> (_soundArray select 0));							} else {								_soundArray = getarray (_item >> 'sound');							};							if (count _soundArray > 0) then {								playsound3d [_soundArray select 0,get3dencamera];								playsound3d [(_soundArray select 0) + '.wss',get3dencamera];							};						};					};				};			";
                        };
                    };
                };
                class CheckboxState {
                    class Controls {
                        class Value {
                            onCheckedChanged="					_ctrlCheckbox = _this select 0;					_state = [false,true] select (cbChecked _ctrlCheckbox);					_fade = [0.75,0] select _state;					_ctrlGroup = ctrlParentControlsGroup ctrlParentControlsGroup _ctrlCheckbox;					{						if (ctrlParentControlsGroup _x == _ctrlGroup) then {							_x ctrlenable _state;							_x ctrlsetfade _fade;							_x ctrlcommit 0;						};					} foreach (allcontrols (ctrlparent _ctrlCheckbox) - [ctrlParentControlsGroup _ctrlCheckbox]);			";
                            onLoad="				_this spawn {					disableserialization;					_ctrlCheckbox = _this select 0;					_state = [false,true] select (cbChecked _ctrlCheckbox);					_fade = [0.75,0] select _state;					_ctrlGroup = ctrlParentControlsGroup ctrlParentControlsGroup _ctrlCheckbox;					{						if (ctrlParentControlsGroup _x == _ctrlGroup) then {							_x ctrlenable _state;							_x ctrlsetfade _fade;							_x ctrlcommit 0;						};					} foreach (allcontrols (ctrlparent _ctrlCheckbox) - [ctrlParentControlsGroup _ctrlCheckbox]);				};			";
                        };
                    };
                };
                class EditXY {
                    onLoad="			((_this select 0) controlsGroupCtrl 103) ctrlSetFade 1;			((_this select 0) controlsGroupCtrl 103) ctrlCommit 0;			((_this select 0) controlsGroupCtrl 203) ctrlSetFade 1;			((_this select 0) controlsGroupCtrl 203) ctrlCommit 0;	";
                };
                class Slider {
                    onLoad="		comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 100,_ctrlGroup controlsgroupctrl 101] call bis_fnc_initSliderValue;	";
                };
                class SliderDistance {
                    onLoad="		comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 100,_ctrlGroup controlsgroupctrl 101,'m'] call bis_fnc_initSliderValue;	";
                };
                class SliderMultiplier {
                    onLoad="		comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 100,_ctrlGroup controlsgroupctrl 101,'x'] call bis_fnc_initSliderValue;	";
                };
                class SliderTime {
                    class Controls {
                        class Value {
                            onSliderPosChanged="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlSlider = _this select 0;				_value = (_this select 1) * (sliderspeed _ctrlSlider select 1);				_valueHour = floor (_value / 3600);				_valueMinute = floor ((_value / 60) % 60);				_valueSecond = floor (_value % 60);				_textHour = if (_valueHour < 10) then {'0' + str _valueHour} else {str _valueHour};				_textMinute = if (_valueMinute < 10) then {'0' + str _valueMinute} else {str _valueMinute};				_textSecond = if (_valueSecond < 10) then {'0' + str _valueSecond} else {str _valueSecond};				_ctrlGroup = ctrlParentControlsGroup _ctrlSlider;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_ctrlHour ctrlsettext _textHour;				_ctrlMinute ctrlsettext _textMinute;				_ctrlSecond ctrlsettext _textSecond;				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				_code = gettext (_ctrlCfg >> 'onValueChanged');				if (_code != '') then {[_ctrlGroup,_value] call compile _code;};			";
                        };
                        class Hour {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                        class Minute {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                        class Second {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                    };
                };
                class SliderTimeDay {
                    class Controls {
                        class Preview {
                            onLoad="uinamespace setvariable ['AttributeSliderTimeDay_group',_this select 0];";
                        };
                        class Value {
                            onSliderPosChanged="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlSlider = _this select 0;				_value = (_this select 1) * (sliderspeed _ctrlSlider select 1);				_valueHour = floor (_value / 3600);				_valueMinute = floor ((_value / 60) % 60);				_valueSecond = floor (_value % 60);				_textHour = if (_valueHour < 10) then {'0' + str _valueHour} else {str _valueHour};				_textMinute = if (_valueMinute < 10) then {'0' + str _valueMinute} else {str _valueMinute};				_textSecond = if (_valueSecond < 10) then {'0' + str _valueSecond} else {str _valueSecond};				_ctrlGroup = ctrlParentControlsGroup _ctrlSlider;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_ctrlHour ctrlsettext _textHour;				_ctrlMinute ctrlsettext _textMinute;				_ctrlSecond ctrlsettext _textSecond;				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				_code = gettext (_ctrlCfg >> 'onValueChanged');				if (_code != '') then {[_ctrlGroup,_value] call compile _code;};			";
                        };
                        class Hour {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                        class Minute {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                        class Second {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                    };
                };
                class SliderTimeForecast {
                    class Controls {
                        class Value {
                            onSliderPosChanged="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlSlider = _this select 0;				_value = (_this select 1) * (sliderspeed _ctrlSlider select 1);				_valueHour = floor (_value / 3600);				_valueMinute = floor ((_value / 60) % 60);				_valueSecond = floor (_value % 60);				_textHour = if (_valueHour < 10) then {'0' + str _valueHour} else {str _valueHour};				_textMinute = if (_valueMinute < 10) then {'0' + str _valueMinute} else {str _valueMinute};				_textSecond = if (_valueSecond < 10) then {'0' + str _valueSecond} else {str _valueSecond};				_ctrlGroup = ctrlParentControlsGroup _ctrlSlider;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_ctrlHour ctrlsettext _textHour;				_ctrlMinute ctrlsettext _textMinute;				_ctrlSecond ctrlsettext _textSecond;				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				_code = gettext (_ctrlCfg >> 'onValueChanged');				if (_code != '') then {[_ctrlGroup,_value] call compile _code;};			";
                        };
                        class Hour {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                        class Minute {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                        class Second {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                    };
                };
                class SliderTimeRespawn {
                    class Controls {
                        class Value {
                            onSliderPosChanged="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlSlider = _this select 0;				_value = (_this select 1) * (sliderspeed _ctrlSlider select 1);				_valueHour = floor (_value / 3600);				_valueMinute = floor ((_value / 60) % 60);				_valueSecond = floor (_value % 60);				_textHour = if (_valueHour < 10) then {'0' + str _valueHour} else {str _valueHour};				_textMinute = if (_valueMinute < 10) then {'0' + str _valueMinute} else {str _valueMinute};				_textSecond = if (_valueSecond < 10) then {'0' + str _valueSecond} else {str _valueSecond};				_ctrlGroup = ctrlParentControlsGroup _ctrlSlider;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_ctrlHour ctrlsettext _textHour;				_ctrlMinute ctrlsettext _textMinute;				_ctrlSecond ctrlsettext _textSecond;				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				_code = gettext (_ctrlCfg >> 'onValueChanged');				if (_code != '') then {[_ctrlGroup,_value] call compile _code;};			";
                        };
                        class Hour {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                        class Minute {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                        class Second {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                    };
                };
                class ControlSP {
                    class Controls {
                        class Value {
                            onCheckedChanged="					_ctrlCheckbox = _this select 0;					_state = [true,false] select (cbChecked _ctrlCheckbox);					_fade = [0.75,0] select _state;					_ctrlGroup = ctrlParentControlsGroup ctrlParentControlsGroup _ctrlCheckbox;					{						if (ctrlclassname _x == 'ControlMP') then {							_x ctrlenable _state;							_x ctrlsetfade _fade;							_x ctrlcommit 0;							_ctrlCheckbox = _x controlsGroupCtrl 100;							_ctrlCheckbox ctrlshow _state;							_ctrlCheckboxDisabled = _x controlsGroupCtrl 101;							_ctrlCheckboxDisabled ctrlshow !_state;						};					} foreach (allcontrols (ctrlparent _ctrlCheckbox) - [ctrlParentControlsGroup _ctrlCheckbox]);			";
                            onLoad="				_this spawn {					disableserialization;					_ctrlCheckbox = _this select 0;					_state = [true,false] select (cbChecked _ctrlCheckbox);					_fade = [0.75,0] select _state;					_ctrlGroup = ctrlParentControlsGroup ctrlParentControlsGroup _ctrlCheckbox;					{						if (ctrlclassname _x == 'ControlMP') then {							_x ctrlenable _state;							_x ctrlsetfade _fade;							_x ctrlcommit 0;							_ctrlCheckbox = _x controlsGroupCtrl 100;							_ctrlCheckbox ctrlshow _state;							_ctrlCheckboxDisabled = _x controlsGroupCtrl 101;							_ctrlCheckboxDisabled ctrlshow !_state;						};					} foreach (allcontrols (ctrlparent _ctrlCheckbox) - [ctrlParentControlsGroup _ctrlCheckbox]);				};			";
                        };
                    };
                };
                class FormationGroup {
                    class Controls {
                        class Value {
                            onToolboxSelChanged="missionnamespace setvariable ['FormationGroup_value',_this select 1];";
                        };
                    };
                };
                class FormationWaypoint {
                    class Controls {
                        class Value {
                            onToolboxSelChanged="missionnamespace setvariable ['FormationWaypoint_value',_this select 1];";
                        };
                    };
                };
                class SpeedModeGroup {
                    class Controls {
                        class Value {
                            onToolboxSelChanged="missionnamespace setvariable ['SpeedModeGroup_value',_this select 1];";
                        };
                    };
                };
                class SpeedModeWaypoint {
                    class Controls {
                        class Value {
                            onToolboxSelChanged="missionnamespace setvariable ['SpeedModeWaypoint_value',_this select 1];";
                        };
                    };
                };
                class Rank {
                    class Controls {
                        class Value {
                            onToolboxSelChanged="missionnamespace setvariable ['Rank_value',_this select 1];";
                        };
                    };
                };
                class UnitPos {
                    class Controls {
                        class Value {
                            onToolboxSelChanged="missionnamespace setvariable ['Stance_value',_this select 1];";
                        };
                    };
                };
                class ShapeTrigger {
                    class Controls {
                        class Value {
                            onToolboxSelChanged="missionnamespace setvariable ['ShapeTrigger_value',_this select 1];";
                        };
                    };
                };
                class ShapeMarker {
                    class Controls {
                        class Value {
                            onToolboxSelChanged="missionnamespace setvariable ['ShapeMarker_value',_this select 1];";
                        };
                    };
                };
                class Repeat {
                    class Controls {
                        class Value {
                            onToolboxSelChanged="missionnamespace setvariable ['Repeat_value',_this select 1];";
                        };
                    };
                };
                class TimeoutType {
                    class Controls {
                        class Value {
                            onToolboxSelChanged="missionnamespace setvariable ['TimeoutType_value',_this select 1];";
                        };
                    };
                };
                class Lock {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class CombatModeGroup {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class CombatModeWaypoint {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class BehaviourGroup {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class BehaviourWaypoint {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class TriggerType {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class TriggerActivation {
                    class Controls {
                        class Value {
                            onLbSelChanged="					_ctrlCombo = _this select 0;					_data = _ctrlCombo lbdata lbcursel _ctrlCombo;					_state = !(_data in ['NONE','ALPHA','BRAVO','CHARLIE','DELTA','ECHO','FOXTROT','GOLF','HOTEL','GOLF','JULIET']);					_fade = [0.75,0] select _state;					_ctrlGroup = ctrlParentControlsGroup ctrlParentControlsGroup _ctrlCombo;					{						if (ctrlclassname ctrlParentControlsGroup _x in ['ActivationType']) then {							_x ctrlenable _state;							_x ctrlsetfade _fade;							_x ctrlcommit 0;						};					} foreach (allcontrols (ctrlparent _ctrlCombo) - [ctrlParentControlsGroup _ctrlCombo]);			";
                            onLoad="				_this spawn {					disableserialization;					_ctrlCombo = _this select 0;					_data = _ctrlCombo lbdata lbcursel _ctrlCombo;					_state = !(_data in ['NONE','ALPHA','BRAVO','CHARLIE','DELTA','ECHO','FOXTROT','GOLF','HOTEL','GOLF','JULIET']);					_fade = [0.75,0] select _state;					_ctrlGroup = ctrlParentControlsGroup ctrlParentControlsGroup _ctrlCombo;					{						if (ctrlclassname ctrlParentControlsGroup _x in ['ActivationType']) then {							_x ctrlenable _state;							_x ctrlsetfade _fade;							_x ctrlcommit 0;						};					} foreach (allcontrols (ctrlparent _ctrlCombo) - [ctrlParentControlsGroup _ctrlCombo]);				};			";
                        };
                    };
                };
                class TriggerActivationOwner {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class TriggerActivationOwnerStatic {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class MarkerColor {
                    class Controls {
                        class Value {
                            onLoad="				_control = _this select 0;				_config = _this select 1;				{					if (getnumber (_x >> 'scope') > 0) then {						_color = (_x >> 'color') call bis_fnc_colorConfigToRGBA;						_lbadd = _control lbadd gettext (_x >> 'name');						_control lbsetdata [_lbadd,configname _x];						_control lbsetpicture [_lbadd,'#(argb,8,8,3)color(1,1,1,1)'];						_control lbsetpicturecolor [_lbadd,_color];						_control lbsetpicturecolorselected [_lbadd,_color];						_control lbsettooltip [_lbadd,(_control lbtext _lbadd) + '\n' + (_control lbdata _lbadd)];					};				} foreach configproperties [configfile >> 'cfgmarkercolors','isclass _x'];			";
                        };
                    };
                };
                class MarkerBrush {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class Sound {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                        class Preview {
                            onMouseButtonClick="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlButton = _this select 0;				_ctrlGroup = ctrlParentControlsGroup _ctrlButton;				_ctrlCombo = _ctrlGroup controlsgroupctrl 100;				_path = [configfile,campaignconfigfile,missionconfigfile] select ((_ctrlCombo lbvalue lbcursel _ctrlCombo) max 0);				_cfg = configfile >> 'cfg3den' >> 'attributes' >> ctrlclassname _ctrlGroup >> 'Controls' >> ctrlclassname _ctrlCombo >> 'ItemsConfig';				{_path = _path >> _x;} foreach getarray (_cfg >> 'path');				_data = _ctrlCombo lbdata lbcursel _ctrlCombo;				switch (tolower configname _path) do {					case 'cfgmusic': {						playmusic _data;					};					case 'cfgsound': {						playsound _data;					};					case 'cfgvoice': {						_protocol = gettext (_path >> _data >> 'protocol');						_directory = getarray (_path >> _data >> 'directories') param [0,''];						if (_directory != '') then {							_word = selectrandom ['AwaitingOrders','IAmReady','ReadyForOrders','StandingBy','Waiting'];							_wordPath = getarray (configfile >> _protocol >> 'Words' >> _word) param [0,''];							if (_wordPath != '') then {								_path = _directory + _wordPath;								if (_path select [0,1] == '\') then {_path = _path select [1];};								playsound3d [_path,get3dencamera];							};						};					};					default {						_item = _path >> _data;						if (isclass _item) then {							_soundArray = getarray (_item >> 'sounds');							if (count _soundArray > 0) then {								_soundArray = getarray (_item >> (_soundArray select 0));							} else {								_soundArray = getarray (_item >> 'sound');							};							if (count _soundArray > 0) then {								playsound3d [_soundArray select 0,get3dencamera];								playsound3d [(_soundArray select 0) + '.wss',get3dencamera];							};						};					};				};			";
                        };
                    };
                };
                class SoundVoice {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                        class Preview {
                            onMouseButtonClick="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlButton = _this select 0;				_ctrlGroup = ctrlParentControlsGroup _ctrlButton;				_ctrlCombo = _ctrlGroup controlsgroupctrl 100;				_path = [configfile,campaignconfigfile,missionconfigfile] select ((_ctrlCombo lbvalue lbcursel _ctrlCombo) max 0);				_cfg = configfile >> 'cfg3den' >> 'attributes' >> ctrlclassname _ctrlGroup >> 'Controls' >> ctrlclassname _ctrlCombo >> 'ItemsConfig';				{_path = _path >> _x;} foreach getarray (_cfg >> 'path');				_data = _ctrlCombo lbdata lbcursel _ctrlCombo;				switch (tolower configname _path) do {					case 'cfgmusic': {						playmusic _data;					};					case 'cfgsound': {						playsound _data;					};					case 'cfgvoice': {						_protocol = gettext (_path >> _data >> 'protocol');						_directory = getarray (_path >> _data >> 'directories') param [0,''];						if (_directory != '') then {							_word = selectrandom ['AwaitingOrders','IAmReady','ReadyForOrders','StandingBy','Waiting'];							_wordPath = getarray (configfile >> _protocol >> 'Words' >> _word) param [0,''];							if (_wordPath != '') then {								_path = _directory + _wordPath;								if (_path select [0,1] == '\') then {_path = _path select [1];};								playsound3d [_path,get3dencamera];							};						};					};					default {						_item = _path >> _data;						if (isclass _item) then {							_soundArray = getarray (_item >> 'sounds');							if (count _soundArray > 0) then {								_soundArray = getarray (_item >> (_soundArray select 0));							} else {								_soundArray = getarray (_item >> 'sound');							};							if (count _soundArray > 0) then {								playsound3d [_soundArray select 0,get3dencamera];								playsound3d [(_soundArray select 0) + '.wss',get3dencamera];							};						};					};				};			";
                        };
                    };
                };
                class SoundEffect {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                        class Preview {
                            onMouseButtonClick="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlButton = _this select 0;				_ctrlGroup = ctrlParentControlsGroup _ctrlButton;				_ctrlCombo = _ctrlGroup controlsgroupctrl 100;				_path = [configfile,campaignconfigfile,missionconfigfile] select ((_ctrlCombo lbvalue lbcursel _ctrlCombo) max 0);				_cfg = configfile >> 'cfg3den' >> 'attributes' >> ctrlclassname _ctrlGroup >> 'Controls' >> ctrlclassname _ctrlCombo >> 'ItemsConfig';				{_path = _path >> _x;} foreach getarray (_cfg >> 'path');				_data = _ctrlCombo lbdata lbcursel _ctrlCombo;				switch (tolower configname _path) do {					case 'cfgmusic': {						playmusic _data;					};					case 'cfgsound': {						playsound _data;					};					case 'cfgvoice': {						_protocol = gettext (_path >> _data >> 'protocol');						_directory = getarray (_path >> _data >> 'directories') param [0,''];						if (_directory != '') then {							_word = selectrandom ['AwaitingOrders','IAmReady','ReadyForOrders','StandingBy','Waiting'];							_wordPath = getarray (configfile >> _protocol >> 'Words' >> _word) param [0,''];							if (_wordPath != '') then {								_path = _directory + _wordPath;								if (_path select [0,1] == '\') then {_path = _path select [1];};								playsound3d [_path,get3dencamera];							};						};					};					default {						_item = _path >> _data;						if (isclass _item) then {							_soundArray = getarray (_item >> 'sounds');							if (count _soundArray > 0) then {								_soundArray = getarray (_item >> (_soundArray select 0));							} else {								_soundArray = getarray (_item >> 'sound');							};							if (count _soundArray > 0) then {								playsound3d [_soundArray select 0,get3dencamera];								playsound3d [(_soundArray select 0) + '.wss',get3dencamera];							};						};					};				};			";
                        };
                    };
                };
                class SoundEnvironment {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                        class Preview {
                            onMouseButtonClick="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlButton = _this select 0;				_ctrlGroup = ctrlParentControlsGroup _ctrlButton;				_ctrlCombo = _ctrlGroup controlsgroupctrl 100;				_path = [configfile,campaignconfigfile,missionconfigfile] select ((_ctrlCombo lbvalue lbcursel _ctrlCombo) max 0);				_cfg = configfile >> 'cfg3den' >> 'attributes' >> ctrlclassname _ctrlGroup >> 'Controls' >> ctrlclassname _ctrlCombo >> 'ItemsConfig';				{_path = _path >> _x;} foreach getarray (_cfg >> 'path');				_data = _ctrlCombo lbdata lbcursel _ctrlCombo;				switch (tolower configname _path) do {					case 'cfgmusic': {						playmusic _data;					};					case 'cfgsound': {						playsound _data;					};					case 'cfgvoice': {						_protocol = gettext (_path >> _data >> 'protocol');						_directory = getarray (_path >> _data >> 'directories') param [0,''];						if (_directory != '') then {							_word = selectrandom ['AwaitingOrders','IAmReady','ReadyForOrders','StandingBy','Waiting'];							_wordPath = getarray (configfile >> _protocol >> 'Words' >> _word) param [0,''];							if (_wordPath != '') then {								_path = _directory + _wordPath;								if (_path select [0,1] == '\') then {_path = _path select [1];};								playsound3d [_path,get3dencamera];							};						};					};					default {						_item = _path >> _data;						if (isclass _item) then {							_soundArray = getarray (_item >> 'sounds');							if (count _soundArray > 0) then {								_soundArray = getarray (_item >> (_soundArray select 0));							} else {								_soundArray = getarray (_item >> 'sound');							};							if (count _soundArray > 0) then {								playsound3d [_soundArray select 0,get3dencamera];								playsound3d [(_soundArray select 0) + '.wss',get3dencamera];							};						};					};				};			";
                        };
                    };
                };
                class Music {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                        class Preview {
                            onMouseButtonClick="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlButton = _this select 0;				_ctrlGroup = ctrlParentControlsGroup _ctrlButton;				_ctrlCombo = _ctrlGroup controlsgroupctrl 100;				_path = [configfile,campaignconfigfile,missionconfigfile] select ((_ctrlCombo lbvalue lbcursel _ctrlCombo) max 0);				_cfg = configfile >> 'cfg3den' >> 'attributes' >> ctrlclassname _ctrlGroup >> 'Controls' >> ctrlclassname _ctrlCombo >> 'ItemsConfig';				{_path = _path >> _x;} foreach getarray (_cfg >> 'path');				_data = _ctrlCombo lbdata lbcursel _ctrlCombo;				switch (tolower configname _path) do {					case 'cfgmusic': {						playmusic _data;					};					case 'cfgsound': {						playsound _data;					};					case 'cfgvoice': {						_protocol = gettext (_path >> _data >> 'protocol');						_directory = getarray (_path >> _data >> 'directories') param [0,''];						if (_directory != '') then {							_word = selectrandom ['AwaitingOrders','IAmReady','ReadyForOrders','StandingBy','Waiting'];							_wordPath = getarray (configfile >> _protocol >> 'Words' >> _word) param [0,''];							if (_wordPath != '') then {								_path = _directory + _wordPath;								if (_path select [0,1] == '\') then {_path = _path select [1];};								playsound3d [_path,get3dencamera];							};						};					};					default {						_item = _path >> _data;						if (isclass _item) then {							_soundArray = getarray (_item >> 'sounds');							if (count _soundArray > 0) then {								_soundArray = getarray (_item >> (_soundArray select 0));							} else {								_soundArray = getarray (_item >> 'sound');							};							if (count _soundArray > 0) then {								playsound3d [_soundArray select 0,get3dencamera];								playsound3d [(_soundArray select 0) + '.wss',get3dencamera];							};						};					};				};			";
                        };
                    };
                };
                class RscTitle {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class Face {
                    class Controls {
                        class Value {
                            onload="				_control = _this select 0;				{					_cfgFace = _x;					if (gettext (_cfgFace >> 'displayname') != '' && getnumber (_cfgFace >> 'disabled') == 0) then {						_lbadd = _control lbadd gettext (_cfgFace >> 'displayname');						_control lbsetdata [_lbadd,configname _cfgFace];						_control lbsetpicture [_lbadd,gettext (_cfgFace >> 'texture')];						_control lbsettooltip [_lbadd,(_control lbtext _lbadd) + '\n' + (_control lbdata _lbadd)];						_dlcLogo = if (configsourcemod _cfgFace == '') then {''} else {modParams [configsourcemod  _cfgFace,['logo']] param [0,'']};						if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};					};				} foreach configproperties [configfile >> 'cfgfaces' >> 'Man_A3','isclass _x'];				lbsort _control;			";
                        };
                    };
                };
                class Speaker {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                        class Preview {
                            onMouseButtonClick="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlButton = _this select 0;				_ctrlGroup = ctrlParentControlsGroup _ctrlButton;				_ctrlCombo = _ctrlGroup controlsgroupctrl 100;				_path = [configfile,campaignconfigfile,missionconfigfile] select ((_ctrlCombo lbvalue lbcursel _ctrlCombo) max 0);				_cfg = configfile >> 'cfg3den' >> 'attributes' >> ctrlclassname _ctrlGroup >> 'Controls' >> ctrlclassname _ctrlCombo >> 'ItemsConfig';				{_path = _path >> _x;} foreach getarray (_cfg >> 'path');				_data = _ctrlCombo lbdata lbcursel _ctrlCombo;				switch (tolower configname _path) do {					case 'cfgmusic': {						playmusic _data;					};					case 'cfgsound': {						playsound _data;					};					case 'cfgvoice': {						_protocol = gettext (_path >> _data >> 'protocol');						_directory = getarray (_path >> _data >> 'directories') param [0,''];						if (_directory != '') then {							_word = selectrandom ['AwaitingOrders','IAmReady','ReadyForOrders','StandingBy','Waiting'];							_wordPath = getarray (configfile >> _protocol >> 'Words' >> _word) param [0,''];							if (_wordPath != '') then {								_path = _directory + _wordPath;								if (_path select [0,1] == '\') then {_path = _path select [1];};								playsound3d [_path,get3dencamera];							};						};					};					default {						_item = _path >> _data;						if (isclass _item) then {							_soundArray = getarray (_item >> 'sounds');							if (count _soundArray > 0) then {								_soundArray = getarray (_item >> (_soundArray select 0));							} else {								_soundArray = getarray (_item >> 'sound');							};							if (count _soundArray > 0) then {								playsound3d [_soundArray select 0,get3dencamera];								playsound3d [(_soundArray select 0) + '.wss',get3dencamera];							};						};					};				};			";
                        };
                    };
                };
                class Date {
                    class Controls {
                        class ValueYear {
                            onLoad="				_ctrlYear = _this select 0;				for '_y' from 1982 to 2050 do {					_lbadd = _ctrlYear lbadd str _y;					_ctrlYear lbsetvalue [_lbadd,_y];				};				_ctrlYear lbsetcursel 53;			";
                            onLbSelChanged="				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlYear = _ctrlGroup controlsGroupCtrl 101;				_ctrlMonth = _ctrlGroup controlsGroupCtrl 102;				_ctrlDay = _ctrlGroup controlsGroupCtrl 103;				_year = _ctrlYear lbvalue lbcursel _ctrlYear;				_month = _ctrlMonth lbvalue lbcursel _ctrlMonth;				_isLeapYear = false;				_days = switch _month do {					case 1: {31};					case 2: {						if ((_year % 4 == 0 && _year % 100 != 0) || (_year % 400 == 0)) then {_isLeapYear = true; 29} else {28};					};					case 3: {31};					case 4: {30};					case 5: {31};					case 6: {30};					case 7: {31};					case 8: {31};					case 9: {30};					case 10: {31};					case 11: {30};					case 12: {31};					default {0};				};				if (_days == 0) exitwith {};				_yearID = _year % 100;				_monthID = [if (_isLeapYear) then {6} else {0},if (_isLeapYear) then {2} else {3},3,6,1,4,6,2,5,0,3,5] select (_month - 1);				_centuryID = [6,4,2,0] select (((_year - _yearID) / 100) % 4);				_dayID = 1;				_weekDay = floor (_dayID + _monthID + _yearID + _yearID / 4 + _centuryID) % 7;				_dayNames = [					'str_sunday',					'str_monday',					'str_tuesday',					'str_wednesday',					'str_thursday',					'str_friday',					'str_saturday'				];								_cursel = lbcursel _ctrlDay;				lbclear _ctrlDay;				_dPicture = -100;				for '_d' from 1 to _days do {					_weekDayID = round ((_weekDay + _d - 1) % 7);					_lbadd = _ctrlDay lbadd str _d;					_ctrlDay lbsetvalue [_lbadd,_d];					_ctrlDay lbsettextright [_lbadd,localize (_dayNames select _weekDayID)];					_pictureRight = '#(argb,8,8,3)color(0,0,0,0)';					if !(_weekDayID in [0,6]) then {_ctrlDay lbsetcolorright [_lbadd,[1,1,1,0.25]];};					if (([_year,_month,_d] distance [2013,9,12]) == 0) then {_RC = [_lbadd,[1,0.75,0,1]]; _ctrlDay lbsetcolor _RC; _ctrlDay lbsetcolorright _RC; _ctrlDay lbsetpicturerightcolor _RC; _ctrlDay lbsettooltip [_lbadd,localize 'STR_A3_cfgmods_a32_rc']; _pictureRight = gettext (configfile >> 'Cfg3DEN' >> 'Favorites' >> 'Mode' >> 'texture');};					_moonPhase = moonphase [_year,_month,_d,0,0];					if ((_d - _dPicture) > 5 && _moonPhase > 0.964) then {_pictureRight = '\a3\3DEN\Data\Attributes\Date\moon_full_ca.paa'; _dPicture = _d;};					if ((_d - _dPicture) > 5 && _moonPhase < 0.036) then {_pictureRight = '\a3\3DEN\Data\Attributes\Date\moon_new_ca.paa'; _dPicture = _d;};					_ctrlDay lbsetpictureright [_lbadd,_pictureRight];				};				_ctrlDay lbsetcursel (_cursel min (lbsize _ctrlDay - 1));			";
                        };
                        class ValueMonth {
                            onLbSelChanged="				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlYear = _ctrlGroup controlsGroupCtrl 101;				_ctrlMonth = _ctrlGroup controlsGroupCtrl 102;				_ctrlDay = _ctrlGroup controlsGroupCtrl 103;				_year = _ctrlYear lbvalue lbcursel _ctrlYear;				_month = _ctrlMonth lbvalue lbcursel _ctrlMonth;				_isLeapYear = false;				_days = switch _month do {					case 1: {31};					case 2: {						if ((_year % 4 == 0 && _year % 100 != 0) || (_year % 400 == 0)) then {_isLeapYear = true; 29} else {28};					};					case 3: {31};					case 4: {30};					case 5: {31};					case 6: {30};					case 7: {31};					case 8: {31};					case 9: {30};					case 10: {31};					case 11: {30};					case 12: {31};					default {0};				};				if (_days == 0) exitwith {};				_yearID = _year % 100;				_monthID = [if (_isLeapYear) then {6} else {0},if (_isLeapYear) then {2} else {3},3,6,1,4,6,2,5,0,3,5] select (_month - 1);				_centuryID = [6,4,2,0] select (((_year - _yearID) / 100) % 4);				_dayID = 1;				_weekDay = floor (_dayID + _monthID + _yearID + _yearID / 4 + _centuryID) % 7;				_dayNames = [					'str_sunday',					'str_monday',					'str_tuesday',					'str_wednesday',					'str_thursday',					'str_friday',					'str_saturday'				];								_cursel = lbcursel _ctrlDay;				lbclear _ctrlDay;				_dPicture = -100;				for '_d' from 1 to _days do {					_weekDayID = round ((_weekDay + _d - 1) % 7);					_lbadd = _ctrlDay lbadd str _d;					_ctrlDay lbsetvalue [_lbadd,_d];					_ctrlDay lbsettextright [_lbadd,localize (_dayNames select _weekDayID)];					_pictureRight = '#(argb,8,8,3)color(0,0,0,0)';					if !(_weekDayID in [0,6]) then {_ctrlDay lbsetcolorright [_lbadd,[1,1,1,0.25]];};					if (([_year,_month,_d] distance [2013,9,12]) == 0) then {_RC = [_lbadd,[1,0.75,0,1]]; _ctrlDay lbsetcolor _RC; _ctrlDay lbsetcolorright _RC; _ctrlDay lbsetpicturerightcolor _RC; _ctrlDay lbsettooltip [_lbadd,localize 'STR_A3_cfgmods_a32_rc']; _pictureRight = gettext (configfile >> 'Cfg3DEN' >> 'Favorites' >> 'Mode' >> 'texture');};					_moonPhase = moonphase [_year,_month,_d,0,0];					if ((_d - _dPicture) > 5 && _moonPhase > 0.964) then {_pictureRight = '\a3\3DEN\Data\Attributes\Date\moon_full_ca.paa'; _dPicture = _d;};					if ((_d - _dPicture) > 5 && _moonPhase < 0.036) then {_pictureRight = '\a3\3DEN\Data\Attributes\Date\moon_new_ca.paa'; _dPicture = _d;};					_ctrlDay lbsetpictureright [_lbadd,_pictureRight];				};				_ctrlDay lbsetcursel (_cursel min (lbsize _ctrlDay - 1));			";
                        };
                        class ValueDay {
                            onLbSelChanged="				_this spawn {					disableserialization;					_ctrlGroup = ctrlParentControlsGroup (_this select 0);					_ctrlYear = _ctrlGroup controlsGroupCtrl 101;					_ctrlMonth = _ctrlGroup controlsGroupCtrl 102;					_ctrlDay = _ctrlGroup controlsGroupCtrl 103;					_date = [_ctrlYear lbvalue lbcursel _ctrlYear,_ctrlMonth lbvalue lbcursel _ctrlMonth,_ctrlDay lbvalue lbcursel _ctrlDay,12,0];					_sunriseSunsetTime = _date call bis_fnc_sunriseSunsetTime;					_sunriseTime = _sunriseSunsetTime select 0;					_sunsetTime = _sunriseSunsetTime select 1;					_ctrlPreviewGroup = uinamespace getvariable ['AttributeSliderTimeDay_group',controlnull];					_ctrlPreviewNight1 = _ctrlPreviewGroup controlsGroupCtrl 111;					_ctrlPreviewNight2 = _ctrlPreviewGroup controlsGroupCtrl 112;					_ctrlPreviewDay = _ctrlPreviewGroup controlsGroupCtrl 113;					_ctrlPreviewSunrise = _ctrlPreviewGroup controlsGroupCtrl 114;					_ctrlPreviewSunset = _ctrlPreviewGroup controlsGroupCtrl 115;					_ctrlPreviewSun = _ctrlPreviewGroup controlsGroupCtrl 116;					_ctrlPreviewSunrisePos = ctrlposition _ctrlPreviewSunrise;					_ctrlPreviewSunsetPos = ctrlposition _ctrlPreviewSunset;					_ctrlPreviewNight1Pos = ctrlposition _ctrlPreviewNight1;					_ctrlPreviewNight2Pos = ctrlposition _ctrlPreviewNight2;					_ctrlPreviewDayPos = ctrlposition _ctrlPreviewDay;					_w = ctrlposition _ctrlPreviewGroup select 2;					_ww = (ctrlposition _ctrlPreviewSunrise select 2) * 0.5;					if (_sunriseTime >= 0 && _sunsetTime >= 0) then {						_ctrlPreviewSunrisePos set [0,(_sunriseTime / 24) * _w - _ww];						_ctrlPreviewSunsetPos set [0,(_sunsetTime / 24) * _w - _ww];						_ctrlPreviewNight1Pos set [2,_ctrlPreviewSunrisePos select 0];						_ctrlPreviewNight2Pos set [0,(_ctrlPreviewSunsetPos select 0) + (_ctrlPreviewSunsetPos select 2)];						_ctrlPreviewNight2Pos set [2,_w - (_ctrlPreviewNight2Pos select 0)];						_ctrlPreviewDayPos set [0,(_ctrlPreviewSunrisePos select 0) + (_ctrlPreviewSunrisePos select 2)];						_ctrlPreviewDayPos set [2,(_ctrlPreviewSunsetPos select 0) - (_ctrlPreviewSunrisePos select 0) - (_ctrlPreviewSunrisePos select 2)];						_ctrlPreviewSun ctrlshow true;					} else {						_ctrlPreviewSunrisePos set [0,-1];						_ctrlPreviewSunsetPos set [0,-1];						_ctrlPreviewNight2Pos set [2,0];						if (_sunriseTime < 0) then {							_ctrlPreviewNight1Pos set [2,_w];							_ctrlPreviewDayPos set [2,0];							_ctrlPreviewSun ctrlshow false;						} else {							_ctrlPreviewNight1Pos set [2,0];							_ctrlPreviewDayPos set [0,0];							_ctrlPreviewDayPos set [2,_w];							_ctrlPreviewSun ctrlshow true;						};					};					_ctrlPreviewSunrise ctrlsetposition _ctrlPreviewSunrisePos;					_ctrlPreviewSunrise ctrlcommit 0;					_ctrlPreviewSunset ctrlsetposition _ctrlPreviewSunsetPos;					_ctrlPreviewSunset ctrlcommit 0;					_ctrlPreviewNight1 ctrlsetposition _ctrlPreviewNight1Pos;					_ctrlPreviewNight1 ctrlcommit 0;					_ctrlPreviewNight2 ctrlsetposition _ctrlPreviewNight2Pos;					_ctrlPreviewNight2 ctrlcommit 0;					_ctrlPreviewDay ctrlsetposition _ctrlPreviewDayPos;					_ctrlPreviewDay ctrlcommit 0;					[_ctrlGroup,_date] call bis_fnc_3DENIntel;				};			";
                        };
                    };
                };
                class Skill {
                    onLoad="		comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 100,_ctrlGroup controlsgroupctrl 101] call bis_fnc_initSliderValue;	";
                };
                class Pitch {
                    onLoad="		comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 100,_ctrlGroup controlsgroupctrl 101,'x'] call bis_fnc_initSliderValue;	";
                };
                class AmmoBox {
                    onLoad="[""onLoad"",_this,""AmmoBox"",'3DENAttributes',false] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                    onUnload="[""onUnload"",_this,""AmmoBox"",'3DENAttributes',false] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
                };
                class GameType {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class Respawn {
                    class Controls {
                        class Value {
                            onLBSelChanged="				_ctrlCombo = _this select 0;				_cursel = _this select 1;				_respawnType = _ctrlCombo lbvalue _cursel;				missionnamespace setvariable ['Respawn_value',_respawnType];				_this spawn {					disableserialization;					_ctrlCombo = _this select 0;					_cursel = _this select 1;					_respawnType = _ctrlCombo lbvalue _cursel;					_ctrlGroup = ctrlParentControlsGroup ctrlParentControlsGroup _ctrlCombo;					_cfgAttributes = configfile >> 'Cfg3DEN' >> 'Mission' >> 'Multiplayer' >> 'AttributeCategories' >> 'Respawn' >> 'Attributes';					_n = 0;					{						if (ctrlParentControlsGroup _x == _ctrlGroup) then {							_cfg = _cfgAttributes select _n;							_respawnTypes = getarray (_cfg >> 'respawnTypes');							_state = count _respawnTypes == 0 || _respawnType in _respawnTypes;							_fade = [0.75,0] select _state;							_n = _n + 1;							_x ctrlenable _state;							_x ctrlsetfade _fade;							_x ctrlcommit 0;							ctrlsetfocus _x;							ctrlsetfocus _ctrlCombo;						};					} foreach (allcontrols (ctrlparent _ctrlCombo));				};			";
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class RespawnTemplates {
                    class Controls {
                        class Value0 {
                            onLBSelChanged="				_ctrlListbox = _this select 0;				_cursel = _this select 1;				_active = _ctrlListbox lbvalue _cursel;				_active = (_active + 1) % 2;				_pictureChecked = gettext (configfile >> 'ctrlCheckbox' >> 'textureChecked');				_pictureUnchecked = gettext (configfile >> 'ctrlCheckbox' >> 'textureUnchecked');				_ctrlListbox lbsetvalue [_cursel,_active];				_ctrlListbox lbsetpicture [_cursel,[_pictureUnchecked,_pictureChecked] select _active];			";
                            onSetFocus="				_ctrlGroup = ctrlparentcontrolsgroup (_this select 0);				_selectedRespawnType = missionnamespace getvariable ['Respawn_value',0];				{					_ctrlListbox = _ctrlGroup controlsGroupCtrl (100 + _x);					_ctrlListbox ctrlshow (_x == _selectedRespawnType);				} foreach [0,1,2,3,4,5];			";
                        };
                        class Value1 {
                            onLBSelChanged="				_ctrlListbox = _this select 0;				_cursel = _this select 1;				_active = _ctrlListbox lbvalue _cursel;				_active = (_active + 1) % 2;				_pictureChecked = gettext (configfile >> 'ctrlCheckbox' >> 'textureChecked');				_pictureUnchecked = gettext (configfile >> 'ctrlCheckbox' >> 'textureUnchecked');				_ctrlListbox lbsetvalue [_cursel,_active];				_ctrlListbox lbsetpicture [_cursel,[_pictureUnchecked,_pictureChecked] select _active];			";
                            onSetFocus="				_ctrlGroup = ctrlparentcontrolsgroup (_this select 0);				_selectedRespawnType = missionnamespace getvariable ['Respawn_value',0];				{					_ctrlListbox = _ctrlGroup controlsGroupCtrl (100 + _x);					_ctrlListbox ctrlshow (_x == _selectedRespawnType);				} foreach [0,1,2,3,4,5];			";
                        };
                        class Value2 {
                            onLBSelChanged="				_ctrlListbox = _this select 0;				_cursel = _this select 1;				_active = _ctrlListbox lbvalue _cursel;				_active = (_active + 1) % 2;				_pictureChecked = gettext (configfile >> 'ctrlCheckbox' >> 'textureChecked');				_pictureUnchecked = gettext (configfile >> 'ctrlCheckbox' >> 'textureUnchecked');				_ctrlListbox lbsetvalue [_cursel,_active];				_ctrlListbox lbsetpicture [_cursel,[_pictureUnchecked,_pictureChecked] select _active];			";
                            onSetFocus="				_ctrlGroup = ctrlparentcontrolsgroup (_this select 0);				_selectedRespawnType = missionnamespace getvariable ['Respawn_value',0];				{					_ctrlListbox = _ctrlGroup controlsGroupCtrl (100 + _x);					_ctrlListbox ctrlshow (_x == _selectedRespawnType);				} foreach [0,1,2,3,4,5];			";
                        };
                        class Value3 {
                            onLBSelChanged="				_ctrlListbox = _this select 0;				_cursel = _this select 1;				_active = _ctrlListbox lbvalue _cursel;				_active = (_active + 1) % 2;				_pictureChecked = gettext (configfile >> 'ctrlCheckbox' >> 'textureChecked');				_pictureUnchecked = gettext (configfile >> 'ctrlCheckbox' >> 'textureUnchecked');				_ctrlListbox lbsetvalue [_cursel,_active];				_ctrlListbox lbsetpicture [_cursel,[_pictureUnchecked,_pictureChecked] select _active];			";
                            onSetFocus="				_ctrlGroup = ctrlparentcontrolsgroup (_this select 0);				_selectedRespawnType = missionnamespace getvariable ['Respawn_value',0];				{					_ctrlListbox = _ctrlGroup controlsGroupCtrl (100 + _x);					_ctrlListbox ctrlshow (_x == _selectedRespawnType);				} foreach [0,1,2,3,4,5];			";
                        };
                        class Value4 {
                            onLBSelChanged="				_ctrlListbox = _this select 0;				_cursel = _this select 1;				_active = _ctrlListbox lbvalue _cursel;				_active = (_active + 1) % 2;				_pictureChecked = gettext (configfile >> 'ctrlCheckbox' >> 'textureChecked');				_pictureUnchecked = gettext (configfile >> 'ctrlCheckbox' >> 'textureUnchecked');				_ctrlListbox lbsetvalue [_cursel,_active];				_ctrlListbox lbsetpicture [_cursel,[_pictureUnchecked,_pictureChecked] select _active];			";
                            onSetFocus="				_ctrlGroup = ctrlparentcontrolsgroup (_this select 0);				_selectedRespawnType = missionnamespace getvariable ['Respawn_value',0];				{					_ctrlListbox = _ctrlGroup controlsGroupCtrl (100 + _x);					_ctrlListbox ctrlshow (_x == _selectedRespawnType);				} foreach [0,1,2,3,4,5];			";
                        };
                        class Value5 {
                            onLBSelChanged="				_ctrlListbox = _this select 0;				_cursel = _this select 1;				_active = _ctrlListbox lbvalue _cursel;				_active = (_active + 1) % 2;				_pictureChecked = gettext (configfile >> 'ctrlCheckbox' >> 'textureChecked');				_pictureUnchecked = gettext (configfile >> 'ctrlCheckbox' >> 'textureUnchecked');				_ctrlListbox lbsetvalue [_cursel,_active];				_ctrlListbox lbsetpicture [_cursel,[_pictureUnchecked,_pictureChecked] select _active];			";
                            onSetFocus="				_ctrlGroup = ctrlparentcontrolsgroup (_this select 0);				_selectedRespawnType = missionnamespace getvariable ['Respawn_value',0];				{					_ctrlListbox = _ctrlGroup controlsGroupCtrl (100 + _x);					_ctrlListbox ctrlshow (_x == _selectedRespawnType);				} foreach [0,1,2,3,4,5];			";
                        };
                    };
                };
                class GarbageCollectorMode {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class EnableDebugConsole {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class PreferencesSavegame {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class ObjectTexture {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class SharedObjectives {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class Fog {
                    onLoad="		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 101,_ctrlGroup controlsgroupctrl 104] call bis_fnc_initSliderValue;		[_ctrlGroup controlsgroupctrl 102,_ctrlGroup controlsgroupctrl 105] call bis_fnc_initSliderValue;		[_ctrlGroup controlsgroupctrl 103,_ctrlGroup controlsgroupctrl 106,' m'] call bis_fnc_initSliderValue;	";
                    class Controls {
                        class Value {
                            onSliderPosChanged="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_valueFog = sliderposition (_ctrlGroup controlsgroupctrl 101);				_valueDecay = sliderposition (_ctrlGroup controlsgroupctrl 102);				_valueBase = sliderposition (_ctrlGroup controlsgroupctrl 103);				[_ctrlGroup,[_valueFog,_valueDecay,_valueBase]] call bis_fnc_3DENIntel;			";
                        };
                        class ValueDecay {
                            onSliderPosChanged="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_valueFog = sliderposition (_ctrlGroup controlsgroupctrl 101);				_valueDecay = sliderposition (_ctrlGroup controlsgroupctrl 102);				_valueBase = sliderposition (_ctrlGroup controlsgroupctrl 103);				[_ctrlGroup,[_valueFog,_valueDecay,_valueBase]] call bis_fnc_3DENIntel;			";
                        };
                        class ValueBase {
                            onSliderPosChanged="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_valueFog = sliderposition (_ctrlGroup controlsgroupctrl 101);				_valueDecay = sliderposition (_ctrlGroup controlsgroupctrl 102);				_valueBase = sliderposition (_ctrlGroup controlsgroupctrl 103);				[_ctrlGroup,[_valueFog,_valueDecay,_valueBase]] call bis_fnc_3DENIntel;			";
                        };
                        class Edit {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_valueFog = sliderposition (_ctrlGroup controlsgroupctrl 101);				_valueDecay = sliderposition (_ctrlGroup controlsgroupctrl 102);				_valueBase = sliderposition (_ctrlGroup controlsgroupctrl 103);				[_ctrlGroup,[_valueFog,_valueDecay,_valueBase]] call bis_fnc_3DENIntel;			";
                        };
                        class EditDecay {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_valueFog = sliderposition (_ctrlGroup controlsgroupctrl 101);				_valueDecay = sliderposition (_ctrlGroup controlsgroupctrl 102);				_valueBase = sliderposition (_ctrlGroup controlsgroupctrl 103);				[_ctrlGroup,[_valueFog,_valueDecay,_valueBase]] call bis_fnc_3DENIntel;			";
                        };
                        class EditBase {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_valueFog = sliderposition (_ctrlGroup controlsgroupctrl 101);				_valueDecay = sliderposition (_ctrlGroup controlsgroupctrl 102);				_valueBase = sliderposition (_ctrlGroup controlsgroupctrl 103);				[_ctrlGroup,[_valueFog,_valueDecay,_valueBase]] call bis_fnc_3DENIntel;			";
                        };
                    };
                };
                class Overcast {
                    onLoad="		comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 100,_ctrlGroup controlsgroupctrl 101] call bis_fnc_initSliderValue;	";
                    class Controls {
                        class Value {
                            onSliderPosChanged="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_value = sliderposition (_ctrlGroup controlsgroupctrl 100);				[_ctrlGroup,_value] call bis_fnc_3DENIntel;			";
                        };
                        class Edit {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_value = sliderposition (_ctrlGroup controlsgroupctrl 100);				[_ctrlGroup,_value] call bis_fnc_3DENIntel;			";
                        };
                    };
                };
                class Rain {
                    onLoad="		comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 100,_ctrlGroup controlsgroupctrl 101] call bis_fnc_initSliderValue;	";
                };
                class Waves {
                    onLoad="		comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 100,_ctrlGroup controlsgroupctrl 101] call bis_fnc_initSliderValue;	";
                };
                class Gusts {
                    onLoad="		comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 100,_ctrlGroup controlsgroupctrl 101] call bis_fnc_initSliderValue;	";
                };
                class Wind {
                    onLoad="		comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 100,_ctrlGroup controlsgroupctrl 101] call bis_fnc_initSliderValue;	";
                };
                class WindDir {
                    class Controls {
                        class WindDir {
                            onKillFocus="[_this select 0,parsenumber ctrltext (_this select 0)] call bis_fnc_3DENIntel;";
                        };
                    };
                };
                class ReviveMode {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class ReviveRequiredTrait {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class ReviveRequiredItems {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class ReviveDuration {
                    class Controls {
                        class Value {
                            onSliderPosChanged="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlSlider = _this select 0;				_value = (_this select 1) * (sliderspeed _ctrlSlider select 1);				_valueHour = floor (_value / 3600);				_valueMinute = floor ((_value / 60) % 60);				_valueSecond = floor (_value % 60);				_textHour = if (_valueHour < 10) then {'0' + str _valueHour} else {str _valueHour};				_textMinute = if (_valueMinute < 10) then {'0' + str _valueMinute} else {str _valueMinute};				_textSecond = if (_valueSecond < 10) then {'0' + str _valueSecond} else {str _valueSecond};				_ctrlGroup = ctrlParentControlsGroup _ctrlSlider;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_ctrlHour ctrlsettext _textHour;				_ctrlMinute ctrlsettext _textMinute;				_ctrlSecond ctrlsettext _textSecond;				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				_code = gettext (_ctrlCfg >> 'onValueChanged');				if (_code != '') then {[_ctrlGroup,_value] call compile _code;};			";
                        };
                        class Hour {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                        class Minute {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                        class Second {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                    };
                };
                class ReviveMedicSpeedMultiplier {
                    onLoad="		comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 100,_ctrlGroup controlsgroupctrl 101,'x'] call bis_fnc_initSliderValue;	";
                };
                class ReviveForceRespawnDuration {
                    class Controls {
                        class Value {
                            onSliderPosChanged="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlSlider = _this select 0;				_value = (_this select 1) * (sliderspeed _ctrlSlider select 1);				_valueHour = floor (_value / 3600);				_valueMinute = floor ((_value / 60) % 60);				_valueSecond = floor (_value % 60);				_textHour = if (_valueHour < 10) then {'0' + str _valueHour} else {str _valueHour};				_textMinute = if (_valueMinute < 10) then {'0' + str _valueMinute} else {str _valueMinute};				_textSecond = if (_valueSecond < 10) then {'0' + str _valueSecond} else {str _valueSecond};				_ctrlGroup = ctrlParentControlsGroup _ctrlSlider;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_ctrlHour ctrlsettext _textHour;				_ctrlMinute ctrlsettext _textMinute;				_ctrlSecond ctrlsettext _textSecond;				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				_code = gettext (_ctrlCfg >> 'onValueChanged');				if (_code != '') then {[_ctrlGroup,_value] call compile _code;};			";
                        };
                        class Hour {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                        class Minute {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                        class Second {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                    };
                };
                class ReviveUnconsciousStateMode {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class ReviveUnconsciousStateDuration {
                    class Controls {
                        class Value {
                            onSliderPosChanged="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlSlider = _this select 0;				_value = (_this select 1) * (sliderspeed _ctrlSlider select 1);				_valueHour = floor (_value / 3600);				_valueMinute = floor ((_value / 60) % 60);				_valueSecond = floor (_value % 60);				_textHour = if (_valueHour < 10) then {'0' + str _valueHour} else {str _valueHour};				_textMinute = if (_valueMinute < 10) then {'0' + str _valueMinute} else {str _valueMinute};				_textSecond = if (_valueSecond < 10) then {'0' + str _valueSecond} else {str _valueSecond};				_ctrlGroup = ctrlParentControlsGroup _ctrlSlider;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_ctrlHour ctrlsettext _textHour;				_ctrlMinute ctrlsettext _textMinute;				_ctrlSecond ctrlsettext _textSecond;				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				_code = gettext (_ctrlCfg >> 'onValueChanged');				if (_code != '') then {[_ctrlGroup,_value] call compile _code;};			";
                        };
                        class Hour {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                        class Minute {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                        class Second {
                            onKillFocus="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_ctrlGroup = ctrlParentControlsGroup (_this select 0);				_ctrlSlider = _ctrlGroup controlsgroupctrl 100;				_ctrlHour = _ctrlGroup controlsgroupctrl 101;				_ctrlMinute = _ctrlGroup controlsgroupctrl 102;				_ctrlSecond = _ctrlGroup controlsgroupctrl 103;				_range = sliderrange _ctrlSlider;				_value = (round (parsenumber ctrltext _ctrlHour) + round (parsenumber ctrltext _ctrlMinute) / 60 + round (parsenumber ctrltext _ctrlSecond) / 3600) * 3600;				_ctrlSlider slidersetposition (_value / (sliderspeed _ctrlSlider select 1));				_ctrlCfg = configfile >> 'Cfg3DEN' >> 'Attributes' >> ctrlclassname _ctrlGroup;				[_ctrlSlider,sliderposition _ctrlSlider] call compile gettext (_ctrlCfg >> 'Controls' >> 'Value' >> 'onSliderPosChanged');			";
                        };
                    };
                };
                class EnableRevive {
                    class Controls {
                        class Value {
                            onLoad="				_this spawn {					disableserialization;					_ctrlCheckbox = _this select 0;					_ctrlGroup = ctrlParentControlsGroup _ctrlCheckbox;					_enable = !isNil{'Multiplayer' get3DENMissionAttribute 'ReviveMode'} && {'Multiplayer' get3DENMissionAttribute 'ReviveMode' == 2};					_fade = [0.75,0] select _enable;					_ctrlGroup ctrlenable _enable;					_ctrlGroup ctrlsetfade _fade; _ctrlGroup ctrlcommit 0;				};			";
                        };
                    };
                };
                class UnitInsignia {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class NameSound {
                    class Controls {
                        class Value {
                            onLoad="lbsortbyvalue (_this select 0);";
                        };
                    };
                };
                class DynSimDist {
                    onLoad="		comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 100,_ctrlGroup controlsgroupctrl 101,'m'] call bis_fnc_initSliderValue;	";
                };
                class DynSimDistMultIsMoving {
                    onLoad="		comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 100,_ctrlGroup controlsgroupctrl 101,'x'] call bis_fnc_initSliderValue;	";
                };
                class TaskTypes {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class ModuleObjects {
                    class Controls {
                        class Value {
                            onLoad="				_control = _this select 0;				_picture = gettext (configfile >> 'Cfg3DEN' >> 'Layer' >> 'Draw' >> 'icon');				_layerText = localize 'STR_3DEN_Layer_textSingular';				_layers = [];				{					_layers pushback [(_x get3denAttribute 'Name') select 0,_x];				} foreach (all3DENEntities select 6);				_layers sort true;				{					_name = _x select 0;					_lbAdd = _control lbadd format ['%1: %2',_layerText,_name];					_control lbsetvalue [_lbAdd,-(_x select 1) - 1];					_control lbsetpicture [_lbAdd,_picture];				} foreach _layers;			";
                        };
                    };
                };
                class SliderCameraSpeedMult {
                    onLoad="		comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 100,_ctrlGroup controlsgroupctrl 101,'x'] call bis_fnc_initSliderValue;	";
                };
                class AppId {
                    class Controls {
                        class Value {
                            onLoad="				_control = _this select 0;				{					_appId = getnumber (_x >> 'appId');					if (_appId != 0 && getnumber (_x >> 'hidePicture') == 0) then {						_lbAdd = _control lbadd gettext (_x >> 'name');						_control lbsetpictureright [_lbAdd,gettext (_x >> 'logoSmall')];						_control lbsetvalue [_lbAdd,_appId];					};				} foreach configproperties [configfile >> 'CfgMods','isclass _x'];				lbsortbyvalue _control;			";
                        };
                    };
                };
                class Radar {
                    class Controls {
                        class Value {
                            onLoad="				comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';				_control = _this select 0;				_config = _this select 1;				_configItems = _config >> 'itemsconfig';				if (isclass _configItems) then {					_pathRoots = if (getnumber (_configItems >> 'localConfig') > 0) then {[configfile,campaignconfigfile,missionconfigfile]} else {[configfile]};					_paths = [];					{						_path = _x;						{_path = _path >> _x;} foreach getarray (_configItems >> 'path');						_paths pushback _path;					} foreach _pathRoots;					_propertyText = gettext (_configItems >> 'propertyText');					_propertyTextRight = gettext (_configItems >> 'propertyTextRight');					_propertyColor = gettext (_configItems >> 'propertyColor');					_propertyPicture = gettext (_configItems >> 'propertyPicture');					_tooltip = gettext (_configItems >> 'tooltip');					if (_tooltip == '') then {_tooltip = '%1\n%2';};					_sort = getnumber (_configItems >> 'sort');					{						{							_text = gettext (_x >> _propertyText);							if (_text != '') then {								_lbadd = _control lbadd _text;								_control lbsetdata [_lbadd,configname _x];								if (_propertyPicture != '') then {_control lbsetpicture [_lbadd,gettext (_x >> _propertyPicture)];};								if (_propertyTextRight != '') then {_control lbsettextright [_lbadd,gettext (_x >> _propertyTextRight)];};								_control lbsettooltip [_lbadd,format [_tooltip,_control lbtext _lbadd,_control lbdata _lbadd]];								_dlcLogo = if (configsourcemod _x == '') then {''} else {modParams [configsourcemod  _x,['logo']] param [0,'']};								if (_dlcLogo != '') then {_control lbsetpictureright [_lbadd,_dlcLogo];};							};						} foreach configproperties [_x,'isclass _X'];					} foreach _paths;					if (_sort > 1) then {lbsortbyvalue _control} else {if (_sort > 0) then {lbsort _control};};				};			";
                        };
                    };
                };
                class DoorStates {
                    class Controls {
                        class Value {
                            class Controls {
                                class CheckboxBackground1 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox1 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text1 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground2 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox2 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text2 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground3 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox3 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text3 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground4 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox4 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text4 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground5 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox5 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text5 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground6 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox6 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text6 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground7 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox7 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text7 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground8 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox8 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text8 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground9 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox9 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text9 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground10 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox10 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text10 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground11 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox11 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text11 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground12 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox12 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text12 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground13 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox13 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text13 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground14 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox14 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text14 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground15 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox15 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text15 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground16 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox16 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text16 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground17 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox17 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text17 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground18 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox18 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text18 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground19 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox19 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text19 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground20 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox20 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text20 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground21 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox21 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text21 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground22 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox22 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text22 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground23 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox23 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text23 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class CheckboxBackground24 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                                class Checkbox24 {
                                    onMouseButtonDown="['onMouseButtonUp',get3DENSelected 'object' select 0,_this] call bis_fnc_3DENAttributeDoorStates";
                                };
                                class Text24 {
                                    onLoad="(_this select 0) ctrlEnable false;";
                                };
                            };
                        };
                    };
                };
                class CivilianPresence_UnitCount {
                    onLoad="		comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 100,_ctrlGroup controlsgroupctrl 101,''] call bis_fnc_initSliderValue;	";
                };
                class CivilianPresenceSafeSpot_Capacity {
                    onLoad="		comment 'DO NOT COPY THIS CODE TO YOUR ATTRIBUTE CONFIG UNLESS YOU ARE CHANGING SOMETHING IN THE CODE!';		_ctrlGroup = _this select 0;		[_ctrlGroup controlsgroupctrl 100,_ctrlGroup controlsgroupctrl 101,''] call bis_fnc_initSliderValue;	";
                };
            };
        };
        class RscDebugConsole {
            class controls {
                class Expression {
                    onMouseButtonDblClick="ctrlSetFocus (_this select 0)";
                };
                class ExpressionOutput {
                    onMouseButtonDblClick="ctrlSetFocus (_this select 0)";
                    onLoad="parsingNamespace setVariable [""BIS_RscDebugConsoleExpressionResultCtrl"", _this select 0]";
                };
                class WatchInput1 {
                    onMouseButtonDblClick="ctrlSetFocus (_this select 0)";
                    onSetFocus="_this select 0 setVariable ['RscDebugConsole_watchPaused', true]";
                    onKillFocus="_this select 0 setVariable ['RscDebugConsole_watchPaused', false]";
                };
                class WatchOutput1 {
                    onMouseButtonDblClick="ctrlSetFocus (_this select 0)";
                };
                class WatchInput2 {
                    onMouseButtonDblClick="ctrlSetFocus (_this select 0)";
                    onSetFocus="_this select 0 setVariable ['RscDebugConsole_watchPaused', true]";
                    onKillFocus="_this select 0 setVariable ['RscDebugConsole_watchPaused', false]";
                };
                class WatchOutput2 {
                    onMouseButtonDblClick="ctrlSetFocus (_this select 0)";
                };
                class WatchInput3 {
                    onMouseButtonDblClick="ctrlSetFocus (_this select 0)";
                    onSetFocus="_this select 0 setVariable ['RscDebugConsole_watchPaused', true]";
                    onKillFocus="_this select 0 setVariable ['RscDebugConsole_watchPaused', false]";
                };
                class WatchOutput3 {
                    onMouseButtonDblClick="ctrlSetFocus (_this select 0)";
                };
                class WatchInput4 {
                    onMouseButtonDblClick="ctrlSetFocus (_this select 0)";
                    onSetFocus="_this select 0 setVariable ['RscDebugConsole_watchPaused', true]";
                    onKillFocus="_this select 0 setVariable ['RscDebugConsole_watchPaused', false]";
                };
                class WatchOutput4 {
                    onMouseButtonDblClick="ctrlSetFocus (_this select 0)";
                };
            };
        };
        class RscButtonSearch {
            onButtonClick="		_display = ctrlparent (_this select 0);		_ctrlSearch = _display displayctrl 645;		_ctrlSearch ctrlsettext '';		ctrlsetfocus _ctrlSearch;	";
        };
        class RscMsgBoxKeysPreset {
            onLoad="[""onLoad"",_this,""RscMsgBoxKeysPreset"",'GUI',0] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscMsgBoxKeysPreset"",'GUI',0] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class MessageBox {
                    class controls {
                        class ButtonClose {
                            onButtonClick="ctrlDelete (ctrlParentControlsGroup ctrlParentControlsGroup (_this select 0));";
                        };
                        class ButtonOK {
                            onButtonClick="ctrlDelete (ctrlParentControlsGroup ctrlParentControlsGroup (_this select 0));";
                        };
                    };
                };
            };
        };
        class RscMsgBoxKeysPresetJets {
            onLoad="[""onLoad"",_this,""RscMsgBoxKeysPresetJets"",'GUI',0] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscMsgBoxKeysPresetJets"",'GUI',0] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class MessageBox {
                    class controls {
                        class ButtonClose {
                            onButtonClick="ctrlDelete (ctrlParentControlsGroup ctrlParentControlsGroup (_this select 0));";
                        };
                        class ButtonOK {
                            onButtonClick="ctrlDelete (ctrlParentControlsGroup ctrlParentControlsGroup (_this select 0));";
                        };
                    };
                };
            };
        };
        class RscMsgBoxKeysPresetCustomInfoPanel {
            onLoad="[""onLoad"",_this,""RscMsgBoxKeysPresetCustomInfoPanel"",'GUI',0] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscMsgBoxKeysPresetCustomInfoPanel"",'GUI',0] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class MessageBox {
                    class controls {
                        class ButtonClose {
                            onButtonClick="ctrlDelete (ctrlParentControlsGroup ctrlParentControlsGroup (_this select 0));";
                        };
                        class ButtonOK {
                            onButtonClick="ctrlDelete (ctrlParentControlsGroup ctrlParentControlsGroup (_this select 0));";
                        };
                    };
                };
            };
        };
        class RscDisplayNone {
            onLoad="[""onLoad"",_this,""RscDisplayNone"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayNone"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayDebugPublic {
            onLoad="[""onLoad"",_this,""RscDisplayDebugPublic"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayDebugPublic"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscMainMenuSpotlight {
            class Controls {
                class GroupHover {
                    class Controls {
                        class LineTop {
                            onLoad="(_this select 0) ctrlsettext toupper ctrltext (_this select 0);";
                        };
                        class LineBottom {
                            onLoad="(_this select 0) ctrlsettext toupper ctrltext (_this select 0);";
                        };
                    };
                };
            };
        };
        class RscDisplayNewUser {
            onLoad="[""onLoad"",_this,""RscDisplayNewUser"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayNewUser"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayCampaignSelect {
            onLoad="[""onLoad"",_this,""RscDisplayCampaignSelect"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayCampaignSelect"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayOptionsLayout {
            onLoad="[""onLoad"",_this,""RscDisplayOptionsLayout"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayOptionsLayout"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayMovieInterrupt {
            onLoad="[""onLoad"",_this,""RscDisplayMovieInterrupt"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayMovieInterrupt"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controlsBackground {
                class TileGroup {
                    onLoad="[ctrlParent (_this select 0), ""RscDisplayMovieInterrupt""] call (uiNamespace getVariable 'BIS_fnc_guiEffectTiles')";
                };
            };
        };
        class RscFunctionsViewer {
            onLoad="[""onLoad"",_this,""RscFunctionsViewer"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscFunctionsViewer"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class TreeFunctions {
                    onKeyDown="if ((_this select 1) == 46 && (_this select 3)) then {copytoclipboard ((_this select 0) lbtext (lbcursel (_this select 0)))}";
                };
                class TreeSources {
                    onKeyDown="if ((_this select 1) == 46 && (_this select 3)) then {copytoclipboard ((_this select 0) lbtext (lbcursel (_this select 0)))}";
                };
                class TreeTags {
                    onKeyDown="if ((_this select 1) == 46 && (_this select 3)) then {copytoclipboard ((_this select 0) lbtext (lbcursel (_this select 0)))}";
                };
                class TreeCats {
                    onKeyDown="if ((_this select 1) == 46 && (_this select 3)) then {copytoclipboard ((_this select 0) lbtext (lbcursel (_this select 0)))}";
                };
            };
        };
        class RscDisplayConfigViewer {
            onLoad="[""onLoad"",_this,""RscDisplayConfigViewer"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayConfigViewer"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscConfigEditor_Main {
            onload="uinamespace setvariable ['BIS_configviewer_display',_this select 0];";
            onunload="_nil = [] spawn BIS_configviewer_unload";
            class Controls {
                class MainTree {
                    onLBSelChanged="_this spawn BIS_configviewer_show;";
                    onLBDblClick="_this spawn BIS_configviewer_open;";
                    onMouseButtonDown="_this spawn BIS_configviewer_return;";
                    onKeyDown="_this spawn BIS_configviewer_keydown;";
                };
                class MainList {
                    onKeyDown="_this spawn BIS_configviewer_keydown_list;";
                };
            };
        };
        class RscGUIEditor {
            onload="uinamespace setvariable ['BIS_RscGUIEditor',_this select 0];";
            onunload="uinamespace setvariable ['BIS_RscGUIEditor',nil];";
        };
        class RscDisplayAAR {
            onLoad="[""onLoad"",_this,""RscDisplayAAR"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAAR"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayLocWeaponInfo {
            onLoad="[""onLoad"",_this,""RscDisplayLocWeaponInfo"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayLocWeaponInfo"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayORBAT {
            onLoad="[""onLoad"",_this,""RscDisplayORBAT"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayORBAT"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class TileGroup {
                    onLoad="[ctrlParent (_this select 0), ""RscDisplayORBAT""] call (uiNamespace getVariable 'BIS_fnc_guiEffectTiles')";
                };
            };
        };
        class RscDisplayStrategicMap {
            onLoad="[""onLoad"",_this,""RscDisplayStrategicMap"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayStrategicMap"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class TileGroup {
                    onLoad="[ctrlParent (_this select 0), ""RscDisplayStrategicMap""] call (uiNamespace getVariable 'BIS_fnc_guiEffectTiles')";
                };
            };
        };
        class RscDisplayStrategicMapSimulation {
            onLoad="[""onLoad"",_this,""RscDisplayStrategicMap"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayStrategicMap"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayInventory {
            onLoad="[""onLoad"",_this,""RscDisplayInventory"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayInventory"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayCamera {
            onLoad="[""onLoad"",_this,""RscDisplayCamera"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayCamera"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayAnimViewer {
            onLoad="[""onLoad"",_this,""RscDisplayAnimViewer"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAnimViewer"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayFunctionsViewer {
            onLoad="[""onLoad"",_this,""RscDisplayFunctionsViewer"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayFunctionsViewer"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayCommon {
            onLoad="[""onLoad"",_this,""RscDisplayCommon"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayCommon"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayCommonMessage {
            onload="uinamespace setvariable ['RscDisplayCommonMessage_display',_this select 0];";
            onunload="uinamespace setvariable ['RscDisplayCommonMessage_display',nil];";
        };
        class RscDisplayCommonMessagePause {
            onload="uinamespace setvariable ['RscDisplayCommonMessage_display',_this select 0];";
            onunload="uinamespace setvariable ['RscDisplayCommonMessage_display',nil];";
        };
        class RscDisplayCommonHint {
            onload="uinamespace setvariable ['Hsim_RscDisplayCommonHint',_this select 0];";
            onunload="uinamespace setvariable ['Hsim_RscDisplayCommonHint',nil];";
        };
        class RscDisplayWelcome {
            onLoad="[""onLoad"",_this,""RscDisplayWelcome"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayWelcome"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayAVTerminal {
            onLoad="[""onLoad"",_this,""RscDisplayAVTerminal"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAVTerminal"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscCredits {
            onload="uinamespace setvariable ['A3_RscCredits',_this select 0];";
            onunload="uinamespace setvariable ['A3_RscCredits',nil];";
        };
        class RscAVCamera {
            onLoad="[""onLoad"",_this,""RscAVCamera"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscAVCamera"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayDLCActionMsgBox {
            onLoad="[""onLoad"",_this,""RscDisplayDLCActionMsgBox"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayDLCActionMsgBox"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayPurchaseNotification {
            onLoad="[""onLoad"",_this,""RscDisplayPurchaseNotification"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayPurchaseNotification"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayCommunityGuide {
            onLoad="[""onLoad"",_this,""RscDisplayCommunityGuide"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayCommunityGuide"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayBootcampMsgBox {
            onLoad="[""onLoad"",_this,""RscDisplayBootcampMsgBox"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayBootcampMsgBox"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayKeyMapMsgBox {
            onLoad="[""onLoad"",_this,""RscDisplayKeyMapMsgBox"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayKeyMapMsgBox"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayArsenal {
            onLoad="[""onLoad"",_this,""RscDisplayArsenal"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayArsenal"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayGarage {
            onLoad="[""onLoad"",_this,""RscDisplayGarage"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayGarage"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayGarage3DEN {
            onLoad="[""onLoad"",_this,""RscDisplayGarage"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayGarage"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayCreateJIRAIssue {
            onLoad="[""onLoad"",_this,""RscDisplayCreateJIRAIssue"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayCreateJIRAIssue"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscSlingLoadAssistant {
            onLoad="[""onLoad"",_this,""RscSlingLoadAssistant"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscSlingLoadAssistant"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayDLCContentBrowser {
            onLoad="[""onLoad"",_this,""RscDisplayDLCContentBrowser"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayDLCContentBrowser"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayDLCPreview {
            onLoad="[""onLoad"",_this,""RscDisplayDLCPreview"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayDLCPreview"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayDynamicGroups {
            onLoad="[""onLoad"",_this,""RscDisplayDynamicGroups"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayDynamicGroups"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayEGSpectator {
            onLoad="[""onLoad"",_this,""RscDisplayEGSpectator"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayEGSpectator"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class RespawnControlsGroup {
                    onLoad="(_this select 0) ctrlEnable false;_this execVM 'a3\ui_f\scripts\gui\RscRespawnControls.sqf'";
                };
                class RespawnDetailsControlsGroup {
                    onLoad="(_this select 0) ctrlEnable false";
                };
            };
        };
        class RscDisplayCampaignMP {
            onLoad="[""onLoad"",_this,""RscDisplayCampaignMP"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayCampaignMP"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayCampaignLobby {
            onLoad="[_this, ""RscDisplayCampaignLobby""]	call BIS_fnc_EXP_camp_lobby_onLoad";
            onUnLoad="[_this, ""RscDisplayCampaignLobby""]	call BIS_fnc_EXP_camp_lobby_onUnLoad";
            class Controls {
                class CampaignLobbyMainGroup {
                    class Controls {
                        class CampaignLobbyProgressGroup {
                            class Controls {
                                class CampaignLobbyProgressLogOutButton {
                                    onbuttonclick="[_this select 0, 0] call BIS_fnc_EXP_camp_lobby_UIProgressManager";
                                    onMouseEnter="[_this select 0, 1] call BIS_fnc_EXP_camp_lobby_UIProgressManager";
                                    onMouseExit="[_this select 0, 2] call BIS_fnc_EXP_camp_lobby_UIProgressManager";
                                };
                                class CampaignLobbyProgressApproveMissionButton {
                                    onbuttonclick="[_this select 0, 0] call BIS_fnc_EXP_camp_lobby_UIProgressManager";
                                    onMouseEnter="[_this select 0, 1] call BIS_fnc_EXP_camp_lobby_UIProgressManager";
                                    onMouseExit="[_this select 0, 2] call BIS_fnc_EXP_camp_lobby_UIProgressManager";
                                };
                            };
                        };
                        class CampaignLobbyMissionGroup {
                            class Controls {
                                class CampaignLobbyMissionOverlay {
                                    class Controls {
                                        class CampaignLobbyMissionOverlayTrigger {
                                            onbuttonclick="[_this select 0, 0] call BIS_fnc_EXP_camp_lobby_UIOverlayManager";
                                            onMouseEnter="[_this select 0, 1] call BIS_fnc_EXP_camp_lobby_UIOverlayManager";
                                            onMouseExit="[_this select 0, 2] call BIS_fnc_EXP_camp_lobby_UIOverlayManager";
                                        };
                                    };
                                };
                            };
                        };
                        class CampaignLobbyTabletButtonGroup {
                            class Controls {
                                class CampaignLobbyTabletButtonSearchGroup {
                                    class Controls {
                                        class CampaignLobbyTabletButton {
                                            onbuttonclick="[_this select 0, 0] call BIS_fnc_EXP_camp_lobby_UISettingsManager";
                                            onMouseEnter="[_this select 0, 1] call BIS_fnc_EXP_camp_lobby_UISettingsManager";
                                            onMouseExit="[_this select 0, 2] call BIS_fnc_EXP_camp_lobby_UISettingsManager";
                                        };
                                    };
                                };
                                class CampaignLobbyTabletButtonSettingsGroup {
                                    class Controls {
                                        class CampaignLobbyTabletButton {
                                            onbuttonclick="[_this select 0, 0] call BIS_fnc_EXP_camp_lobby_UISettingsManager";
                                            onMouseEnter="[_this select 0, 1] call BIS_fnc_EXP_camp_lobby_UISettingsManager";
                                            onMouseExit="[_this select 0, 2] call BIS_fnc_EXP_camp_lobby_UISettingsManager";
                                        };
                                    };
                                };
                                class CampaignLobbyTabletButtonRespawnGroup {
                                    class Controls {
                                        class CampaignLobbyTabletButton {
                                            onbuttonclick="[_this select 0, 0] call BIS_fnc_EXP_camp_lobby_UISettingsManager";
                                            onMouseEnter="[_this select 0, 1] call BIS_fnc_EXP_camp_lobby_UISettingsManager";
                                            onMouseExit="[_this select 0, 2] call BIS_fnc_EXP_camp_lobby_UISettingsManager";
                                        };
                                    };
                                };
                                class CampaignLobbyTabletButtonReviveGroup {
                                    class Controls {
                                        class CampaignLobbyTabletButton {
                                            onbuttonclick="[_this select 0, 0] call BIS_fnc_EXP_camp_lobby_UISettingsManager";
                                            onMouseEnter="[_this select 0, 1] call BIS_fnc_EXP_camp_lobby_UISettingsManager";
                                            onMouseExit="[_this select 0, 2] call BIS_fnc_EXP_camp_lobby_UISettingsManager";
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
        class RscCustomInfoSlingLoad {
            onLoad="[""onLoad"",_this,""RscCustomInfoSlingLoad"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscCustomInfoSlingLoad"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscCustomInfoMiniMap {
            onLoad="[""onLoad"",_this,""RscCustomInfoMiniMap"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscCustomInfoMiniMap"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscCustomInfoAirborneMiniMap {
            onLoad="[""onLoad"",_this,""RscCustomInfoMiniMap"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscCustomInfoMiniMap"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscCustomInfoCrew {
            onLoad="[""onLoad"",_this,""RscCustomInfoCrew"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscCustomInfoCrew"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscCustomInfoSensors {
            onLoad="[""onLoad"",_this,""RscCustomInfoSensors"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscCustomInfoSensors"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscCustomInfoMineDetect {
            onLoad="[""onLoad"",_this,""RscCustomInfoMineDetect"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscCustomInfoMineDetect"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class Title {
                    onLoad="(_this select 0) ctrlsettext toupper ctrltext (_this select 0)";
                };
            };
        };
        class RscCustomInfoUAVFeed {
            onLoad="[""onLoad"",_this,""RscCustomInfoUAVFeed"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscCustomInfoUAVFeed"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscCustomInfoTransportFeedMissile {
            onLoad="[""onLoad"",_this,""RscCustomInfoTransportFeedMissile"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscCustomInfoTransportFeedMissile"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscCustomInfoTransportFeedCommander {
            onLoad="[""onLoad"",_this,""RscCustomInfoTransportFeedCommander"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscCustomInfoTransportFeedCommander"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscCustomInfoTransportFeedPrimaryGunner {
            onLoad="[""onLoad"",_this,""RscCustomInfoTransportFeedPrimaryGunner"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscCustomInfoTransportFeedPrimaryGunner"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscCustomInfoTransportFeedDriver {
            onLoad="[""onLoad"",_this,""RscCustomInfoTransportFeedDriver"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscCustomInfoTransportFeedDriver"",'IGUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayDedicatedServerSettings {
            onLoad="[""onLoad"",_this,""RscDisplayDedicatedServerSettings"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayDedicatedServerSettings"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayRespawn {
            onLoad="[""onLoad"",_this,""RscDisplayRespawn"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayRespawn"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplaySetupServer {
            onLoad="[""onLoad"",_this,""RscDisplayHostSettings"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayHostSettings"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayMPScoreTable {
            onLoad="[""onLoad"",_this,""RscDisplayMPScoreTable"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayMPScoreTable"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayQuickPlay {
            onLoad="[""onLoad"",_this,""RscDisplayQuickPlay"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayQuickPlay"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class Content {
                    class controls {
                        class ModText {
                            onLoad="(_this select 0) ctrlenable false;";
                        };
                    };
                };
            };
        };
        class RscDisplayServerSearch {
            onLoad="[""onLoad"",_this,""RscDisplayServerSearch"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayServerSearch"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayServerFound {
            onLoad="[""onLoad"",_this,""RscDisplayServerFound"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayServerFound"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayLoadCustom {
            onLoad="[""onLoad"",_this,""RscDisplayLoading"",'Loading'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayLoading"",'Loading'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscSitesTemplates {
            class CA_Label {
                onMouseButtonClick="with uinamespace do {['argument_mouseButtonClick',_this,''] spawn RscDisplayArcadeModules_script;};";
                onMouseEnter="with uinamespace do {['argument_focus',_this + [true],''] call RscDisplayArcadeModules_script;};";
                onMouseExit="with uinamespace do {['argument_focus',_this + [false],''] call RscDisplayArcadeModules_script;};";
                onSetFocus="with uinamespace do {['argument_focus',_this + [true],''] call RscDisplayArcadeModules_script;};";
                onKillFocus="with uinamespace do {['argument_focus',_this + [false],''] call RscDisplayArcadeModules_script;};";
            };
        };
        class RscDisplayChooseEditorLayout {
            onLoad="[""onLoad"",_this,""RscDisplayChooseEditorLayout"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayChooseEditorLayout"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayArcadeMap_Layout_2 {
            onLoad="[""onLoad"",_this,""RscDisplayArcadeMap_Layout_2"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayArcadeMap_Layout_2"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class ButtonHide {
                    onbuttonclick="ctrlSetFocus ((finddisplay 26) displayctrl 107);";
                };
                class Clear {
                    onbuttonclick="ctrlSetFocus ((finddisplay 26) displayctrl 107);";
                };
                class Load {
                    onbuttonclick="ctrlSetFocus ((finddisplay 26) displayctrl 107);";
                };
                class Save {
                    onbuttonclick="ctrlSetFocus ((finddisplay 26) displayctrl 107);";
                };
                class SaveAs {
                    onbuttonclick="ctrlSetFocus ((finddisplay 26) displayctrl 107);";
                };
                class Merge {
                    onbuttonclick="ctrlSetFocus ((finddisplay 26) displayctrl 107);";
                };
                class Textures {
                    onbuttonclick="ctrlSetFocus ((finddisplay 26) displayctrl 107);";
                };
                class Ids {
                    onbuttonclick="ctrlSetFocus ((finddisplay 26) displayctrl 107);";
                };
                class Debug {
                    onbuttonclick="ctrlSetFocus ((finddisplay 26) displayctrl 107);";
                };
                class Functions {
                    onbuttonclick="ctrlSetFocus ((finddisplay 26) displayctrl 107);";
                };
                class Config {
                    onbuttonclick="ctrlSetFocus ((finddisplay 26) displayctrl 107);";
                };
                class Layout {
                    onbuttonclick="ctrlSetFocus ((finddisplay 26) displayctrl 107);";
                };
                class PublishMission {
                    onbuttonclick="ctrlSetFocus ((finddisplay 26) displayctrl 107);";
                };
                class Watermark {
                    onLoad="(_this select 0) ctrlenable false;";
                };
            };
        };
        class RscDisplayArcadeMap_Layout_6 {
            onLoad="[""onLoad"",_this,""RscDisplayArcadeMap_Layout_6"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayArcadeMap_Layout_6"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class ButtonsGroup {
                    class controls {
                        class Clear {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Load {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Save {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class SaveAs {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Merge {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Intel {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Debug {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Functions {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Config {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Layout {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class PublishMission {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class Textures {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                        class IDs {
                            onbuttonclick="ctrlSetFocus ((ctrlparent (_this select 0)) displayctrl 107);";
                        };
                    };
                };
                class Watermark {
                    onLoad="(_this select 0) ctrlenable false;";
                };
            };
        };
        class RscTestControlTypes {
            onLoad="[""onLoad"",_this,""RscTestControlTypes"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscTestControlTypes"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class _CT_STATIC {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onMouseEnter="debugLog ['Log: onMouseEnter',ctrlClassname (_this select 0),_this]; false";
                    onMouseExit="debugLog ['Log: onMouseExit',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onVideoStopped="debugLog ['Log: onVideoStopped',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_BUTTON {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onMouseEnter="debugLog ['Log: onMouseEnter',ctrlClassname (_this select 0),_this]; false";
                    onMouseExit="debugLog ['Log: onMouseExit',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onButtonClick="debugLog ['Log: onButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onButtonDown="debugLog ['Log: onButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onButtonUp="debugLog ['Log: onButtonUp',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_EDIT {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_SLIDER_Value {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onMouseEnter="debugLog ['Log: onMouseEnter',ctrlClassname (_this select 0),_this]; false";
                    onMouseExit="debugLog ['Log: onMouseExit',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onVideoStopped="debugLog ['Log: onVideoStopped',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_SLIDER {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onSliderPosChanged="debugLog ['Log: onSliderPosChanged',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_COMBO {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onLBSelChanged="debugLog ['Log: onLBSelChanged',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_LISTBOX {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onLBSelChanged="debugLog ['Log: onLBSelChanged',ctrlClassname (_this select 0),_this]; false";
                    onLBDblClick="debugLog ['Log: onLBDblClick',ctrlClassname (_this select 0),_this]; false";
                    onLBDrag="debugLog ['Log: onLBDrag',ctrlClassname (_this select 0),_this]; false";
                    onLBDragging="debugLog ['Log: onLBDragging',ctrlClassname (_this select 0),_this]; false";
                    onLBDrop="debugLog ['Log: onLBDrop',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_TOOLBOX {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onMouseEnter="debugLog ['Log: onMouseEnter',ctrlClassname (_this select 0),_this]; false";
                    onMouseExit="debugLog ['Log: onMouseExit',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onToolBoxSelChanged="debugLog ['Log: onToolBoxSelChanged',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_CHECKBOXES {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onMouseEnter="debugLog ['Log: onMouseEnter',ctrlClassname (_this select 0),_this]; false";
                    onMouseExit="debugLog ['Log: onMouseExit',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onCheckBoxesSelChanged="debugLog ['Log: onCheckBoxesSelChanged',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_PROGRESS {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_HTML {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onMouseEnter="debugLog ['Log: onMouseEnter',ctrlClassname (_this select 0),_this]; false";
                    onMouseExit="debugLog ['Log: onMouseExit',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onHTMLLink="debugLog ['Log: onHTMLLink',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_ACTIVETEXT {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onMouseEnter="debugLog ['Log: onMouseEnter',ctrlClassname (_this select 0),_this]; false";
                    onMouseExit="debugLog ['Log: onMouseExit',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onButtonClick="debugLog ['Log: onButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onButtonDown="debugLog ['Log: onButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onButtonUp="debugLog ['Log: onButtonUp',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_TREE {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onMouseEnter="debugLog ['Log: onMouseEnter',ctrlClassname (_this select 0),_this]; false";
                    onMouseExit="debugLog ['Log: onMouseExit',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onTreeSelChanged="debugLog ['Log: onTreeSelChanged',ctrlClassname (_this select 0),_this]; false";
                    onTreeLButtonDown="debugLog ['Log: onTreeLButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onTreeDblClick="debugLog ['Log: onTreeDblClick',ctrlClassname (_this select 0),_this]; false";
                    onTreeExpanded="debugLog ['Log: onTreeExpanded',ctrlClassname (_this select 0),_this]; false";
                    onTreeCollapsed="debugLog ['Log: onTreeCollapsed',ctrlClassname (_this select 0),_this]; false";
                    onTreeMouseExit="debugLog ['Log: onTreeMouseExit',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_STRUCTURED_TEXT {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_CONTROLS_GROUP {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    class Controls {
                        class _CT_STATIC {
                            onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                            onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                            onMouseEnter="debugLog ['Log: onMouseEnter',ctrlClassname (_this select 0),_this]; false";
                            onMouseExit="debugLog ['Log: onMouseExit',ctrlClassname (_this select 0),_this]; false";
                            onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                            onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                            onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                            onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                            onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                            onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                            onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                            onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                            onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                            onVideoStopped="debugLog ['Log: onVideoStopped',ctrlClassname (_this select 0),_this]; false";
                        };
                    };
                };
                class _CT_SHORTCUTBUTTON {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onMouseEnter="debugLog ['Log: onMouseEnter',ctrlClassname (_this select 0),_this]; false";
                    onMouseExit="debugLog ['Log: onMouseExit',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onButtonClick="debugLog ['Log: onButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onButtonDown="debugLog ['Log: onButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onButtonUp="debugLog ['Log: onButtonUp',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_XBUTTON {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onMouseEnter="debugLog ['Log: onMouseEnter',ctrlClassname (_this select 0),_this]; false";
                    onMouseExit="debugLog ['Log: onMouseExit',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onButtonClick="debugLog ['Log: onButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onButtonDown="debugLog ['Log: onButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onButtonUp="debugLog ['Log: onButtonUp',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_XLISTBOX {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onLBSelChanged="debugLog ['Log: onLBSelChanged',ctrlClassname (_this select 0),_this]; false";
                    onLBDblClick="debugLog ['Log: onLBDblClick',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_XSLIDER {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onSliderPosChanged="debugLog ['Log: onSliderPosChanged',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_XCOMBO {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onMouseEnter="debugLog ['Log: onMouseEnter',ctrlClassname (_this select 0),_this]; false";
                    onMouseExit="debugLog ['Log: onMouseExit',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onLBSelChanged="debugLog ['Log: onLBSelChanged',ctrlClassname (_this select 0),_this]; false";
                    onLBDblClick="debugLog ['Log: onLBDblClick',ctrlClassname (_this select 0),_this]; false";
                    onLBListSelChanged="debugLog ['Log: onLBListSelChanged',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_MAP {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_MAP_MAIN {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_LISTNBOX {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onLBSelChanged="debugLog ['Log: onLBSelChanged',ctrlClassname (_this select 0),_this]; false";
                    onLBDblClick="debugLog ['Log: onLBDblClick',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_LISTNBOX_RIGHT {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onMouseEnter="debugLog ['Log: onMouseEnter',ctrlClassname (_this select 0),_this]; false";
                    onMouseExit="debugLog ['Log: onMouseExit',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onButtonClick="debugLog ['Log: onButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onButtonDown="debugLog ['Log: onButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onButtonUp="debugLog ['Log: onButtonUp',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_LISTNBOX_LEFT {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onMouseEnter="debugLog ['Log: onMouseEnter',ctrlClassname (_this select 0),_this]; false";
                    onMouseExit="debugLog ['Log: onMouseExit',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onButtonClick="debugLog ['Log: onButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onButtonDown="debugLog ['Log: onButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onButtonUp="debugLog ['Log: onButtonUp',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_CHECKBOX {
                    onCanDestroy="debugLog ['Log: onCanDestroy',ctrlClassname (_this select 0),_this]; true";
                    onDestroy="debugLog ['Log: onDestroy',ctrlClassname (_this select 0),_this]; false";
                    onMouseEnter="debugLog ['Log: onMouseEnter',ctrlClassname (_this select 0),_this]; false";
                    onMouseExit="debugLog ['Log: onMouseExit',ctrlClassname (_this select 0),_this]; false";
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                };
            };
            class Objects {
                class _CT_OBJECT {
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onObjectMoved="debugLog ['Log: onObjectMoved',ctrlClassname (_this select 0),_this]; false";
                };
                class _CT_OBJECT_ZOOM {
                    onSetFocus="debugLog ['Log: onSetFocus',ctrlClassname (_this select 0),_this]; false";
                    onKillFocus="debugLog ['Log: onKillFocus',ctrlClassname (_this select 0),_this]; false";
                    onKeyDown="debugLog ['Log: onKeyDown',ctrlClassname (_this select 0),_this]; false";
                    onKeyUp="debugLog ['Log: onKeyUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDown="debugLog ['Log: onMouseButtonDown',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonUp="debugLog ['Log: onMouseButtonUp',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonClick="debugLog ['Log: onMouseButtonClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseButtonDblClick="debugLog ['Log: onMouseButtonDblClick',ctrlClassname (_this select 0),_this]; false";
                    onMouseZChanged="debugLog ['Log: onMouseZChanged',ctrlClassname (_this select 0),_this]; false";
                    onObjectMoved="debugLog ['Log: onObjectMoved',ctrlClassname (_this select 0),_this]; false";
                };
            };
        };
        class RscTestControlStyles {
            onLoad="[""onLoad"",_this,""RscTestControlStyles"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscTestControlStyles"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscTestGrids {
            onLoad="[""onLoad"",_this,""RscTestGrids"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscTestGrids"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscAttributeOwners {
            onSetFocus="[_this,""RscAttributeOwners"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeOwners2 {
            onSetFocus="[_this,""RscAttributeOwners2"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeRank {
            onSetFocus="[_this,""RscAttributeRank"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeUnitPos {
            onSetFocus="[_this,""RscAttributeUnitPos"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeDamage {
            onSetFocus="[_this,""RscAttributeDamage"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeFuel {
            onSetFocus="[_this,""RscAttributeFuel"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeSide {
            onSetFocus="[_this,""RscAttributeSide"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeTaskState {
            onSetFocus="[_this,""RscAttributeTaskState"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeTaskDescription {
            onSetFocus="[_this,""RscAttributeTaskDescription"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeSkiptime {
            onSetFocus="[_this,""RscAttributeSkiptime"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeSound {
            onSetFocus="[_this,""RscAttributeSound"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeMusic {
            onSetFocus="[_this,""RscAttributeMusic"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeMusicVolume {
            onSetFocus="[_this,""RscAttributeMusicVolume"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeGenericRadio {
            onSetFocus="[_this,""RscAttributeGenericRadio"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeDiaryRecord {
            onSetFocus="[_this,""RscAttributeDiaryRecord"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeOvercast {
            onSetFocus="[_this,""RscAttributeOvercast"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeFog {
            onSetFocus="[_this,""RscAttributeFog"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributePostprocess {
            onSetFocus="[_this,""RscAttributePostprocess"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeGroupID {
            onSetFocus="[_this,""RscAttributeGroupID"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeFormation {
            onSetFocus="[_this,""RscAttributeFormation"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeBehaviour {
            onSetFocus="[_this,""RscAttributeBehaviour"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeLock {
            onSetFocus="[_this,""RscAttributeLock"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeMarkerText {
            onSetFocus="[_this,""RscAttributeMarkerText"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeMarkerColor {
            onSetFocus="[_this,""RscAttributeMarkerColor"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeRespawnVehicle {
            onSetFocus="[_this,""RscAttributeRespawnVehicle"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeRespawnPosition {
            onSetFocus="[_this,""RscAttributeRespawnPosition"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeSkill {
            onSetFocus="[_this,""RscAttributeSkill"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeText {
            onSetFocus="[_this,""RscAttributeText"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeAreaSize {
            onSetFocus="[_this,""RscAttributeAreaSize"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeRespawnTickets {
            onSetFocus="[_this,""RscAttributeRespawnTickets"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeCountdown {
            onSetFocus="[_this,""RscAttributeCountdown"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeEndMission {
            onSetFocus="[_this,""RscAttributeEndMission"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeName {
            onSetFocus="[_this,""RscAttributeName"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeInventory {
            onSetFocus="[_this,""RscAttributeInventory"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeRespawnInventory {
            onSetFocus="[_this,""RscAttributeRespawnInventory"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeCAS {
            onSetFocus="[_this,""RscAttributeCAS"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeExec {
            onSetFocus="[_this,""RscAttributeExec"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RSCATTRIBUTEMISSIONNAME {
            onSetFocus="[_this,""RSCATTRIBUTEMISSIONNAME"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeSpeedMode {
            onSetFocus="[_this,""RscAttributeSpeedMode"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeTaskDestination {
            onSetFocus="[_this,""RscAttributeTaskDestination"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeWaypointType {
            onSetFocus="[_this,""RscAttributeWaypointType"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeWaypointTimeout {
            onSetFocus="[_this,""RscAttributeWaypointTimeout"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeTimeMultiplier {
            onSetFocus="[_this,""RscAttributeTimeMultiplier"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeBootcampStage {
            onSetFocus="[_this,""RscAttributeBootcampStage"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeHintTopics {
            onSetFocus="[_this,""RscAttributeHintTopics"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeHintCustom {
            onSetFocus="[_this,""RscAttributeHintCustom"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributePunishmentAnimation {
            onSetFocus="[_this,""RscAttributePunishmentAnimation"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeTargetTexture {
            onSetFocus="[_this,""RscAttributeTargetTexture"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeTargetPopup {
            onSetFocus="[_this,""RscAttributeTargetPopup"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeTargetPopupDelay {
            onSetFocus="[_this,""RscAttributeTargetPopupDelay"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeTargetState {
            onSetFocus="[_this,""RscAttributeTargetState"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeTargetData {
            onSetFocus="[_this,""RscAttributeTargetData"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscAttributeTargetDataStore {
            onSetFocus="[_this,""RscAttributeTargetDataStore"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
        };
        class RscDisplayAttributes {
            onLoad="[""onLoad"",_this,""RscDisplayAttributes"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributes"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayAttributesMan {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesMan"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesMan"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Rank {
                            onSetFocus="[_this,""RscAttributeRank"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class UnitPos {
                            onSetFocus="[_this,""RscAttributeUnitPos"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Damage {
                            onSetFocus="[_this,""RscAttributeDamage"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Skill {
                            onSetFocus="[_this,""RscAttributeSkill"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class RespawnPosition {
                            onSetFocus="[_this,""RscAttributeRespawnPosition"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Exec {
                            onSetFocus="[_this,""RscAttributeExec"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesVehicle {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesVehicle"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesVehicle"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Rank {
                            onSetFocus="[_this,""RscAttributeRank"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Damage {
                            onSetFocus="[_this,""RscAttributeDamage"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Fuel {
                            onSetFocus="[_this,""RscAttributeFuel"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Skill {
                            onSetFocus="[_this,""RscAttributeSkill"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Lock {
                            onSetFocus="[_this,""RscAttributeLock"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class RespawnVehicle {
                            onSetFocus="[_this,""RscAttributeRespawnVehicle"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class RespawnPosition {
                            onSetFocus="[_this,""RscAttributeRespawnPosition"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Exec {
                            onSetFocus="[_this,""RscAttributeExec"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesVehicleEmpty {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesVehicleEmpty"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesVehicleEmpty"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Damage {
                            onSetFocus="[_this,""RscAttributeDamage"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Fuel {
                            onSetFocus="[_this,""RscAttributeFuel"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Lock {
                            onSetFocus="[_this,""RscAttributeLock"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class RespawnVehicle {
                            onSetFocus="[_this,""RscAttributeRespawnVehicle"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class RespawnPosition {
                            onSetFocus="[_this,""RscAttributeRespawnPosition"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Exec {
                            onSetFocus="[_this,""RscAttributeExec"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesGroup {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesGroup"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesGroup"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class GroupID {
                            onSetFocus="[_this,""RscAttributeGroupID"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Skill {
                            onSetFocus="[_this,""RscAttributeSkill"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Formation {
                            onSetFocus="[_this,""RscAttributeFormation"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Behaviour {
                            onSetFocus="[_this,""RscAttributeBehaviour"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class SpeedMode {
                            onSetFocus="[_this,""RscAttributeSpeedMode"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class UnitPos {
                            onSetFocus="[_this,""RscAttributeUnitPos"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class RespawnPosition {
                            onSetFocus="[_this,""RscAttributeRespawnPosition"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesWaypoint {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesWaypoint"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesWaypoint"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class WaypointType {
                            onSetFocus="[_this,""RscAttributeWaypointType"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class WaypointTimeout {
                            onSetFocus="[_this,""RscAttributeWaypointTimeout"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Formation {
                            onSetFocus="[_this,""RscAttributeFormation"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Behaviour {
                            onSetFocus="[_this,""RscAttributeBehaviour"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class SpeedMode {
                            onSetFocus="[_this,""RscAttributeSpeedMode"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesMarker {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesMarker"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesMarker"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class MarkerText {
                            onSetFocus="[_this,""RscAttributeMarkerText"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class MarkerColor {
                            onSetFocus="[_this,""RscAttributeMarkerColor"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesIntel {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesIntel"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesIntel"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Owners {
                            onSetFocus="[_this,""RscAttributeOwners"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class DiaryRecord {
                            onSetFocus="[_this,""RscAttributeDiaryRecord"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesInventory {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesInventory"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesInventory"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Inventory {
                            onSetFocus="[_this,""RscAttributeInventory"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleObjectiveMove {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleObjectiveMove"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleObjectiveMove"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Text {
                            onSetFocus="[_this,""RscAttributeText"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Owners {
                            onSetFocus="[_this,""RscAttributeOwners"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class TaskDescription {
                            onSetFocus="[_this,""RscAttributeTaskDescription"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleObjectiveCustom {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleObjectiveCustom"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleObjectiveCustom"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Text {
                            onSetFocus="[_this,""RscAttributeText"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Owners {
                            onSetFocus="[_this,""RscAttributeOwners"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class TaskState {
                            onSetFocus="[_this,""RscAttributeTaskState"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class TaskDestination {
                            onSetFocus="[_this,""RscAttributeTaskDestination"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class TaskDescription {
                            onSetFocus="[_this,""RscAttributeTaskDescription"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleObjectiveSector {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleObjectiveSector"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleObjectiveSector"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Text {
                            onSetFocus="[_this,""RscAttributeText"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Owners {
                            onSetFocus="[_this,""RscAttributeOwners"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class AreaSize {
                            onSetFocus="[_this,""RscAttributeAreaSize"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Name {
                            onSetFocus="[_this,""RscAttributeName"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleObjectiveAttackDefend {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleObjectiveAttackDefend"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleObjectiveAttackDefend"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Text {
                            onSetFocus="[_this,""RscAttributeText"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Owners2 {
                            onSetFocus="[_this,""RscAttributeOwners2"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class AreaSize {
                            onSetFocus="[_this,""RscAttributeAreaSize"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Name {
                            onSetFocus="[_this,""RscAttributeName"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleObjectiveNeutralize {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleObjectiveNeutralize"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleObjectiveNeutralize"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Text {
                            onSetFocus="[_this,""RscAttributeText"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Owners {
                            onSetFocus="[_this,""RscAttributeOwners"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class TaskDescription {
                            onSetFocus="[_this,""RscAttributeTaskDescription"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleObjectiveProtect {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleObjectiveProtect"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleObjectiveProtect"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Text {
                            onSetFocus="[_this,""RscAttributeText"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Owners {
                            onSetFocus="[_this,""RscAttributeOwners"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class TaskDescription {
                            onSetFocus="[_this,""RscAttributeTaskDescription"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleObjectiveGetIn {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleObjectiveGetIn"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleObjectiveGetIn"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Text {
                            onSetFocus="[_this,""RscAttributeText"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Owners {
                            onSetFocus="[_this,""RscAttributeOwners"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class TaskDescription {
                            onSetFocus="[_this,""RscAttributeTaskDescription"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleSkiptime {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleSkiptime"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleSkiptime"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Skiptime {
                            onSetFocus="[_this,""RscAttributeSkiptime"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleWeather {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleWeather"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleWeather"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Overcast {
                            onSetFocus="[_this,""RscAttributeOvercast"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Fog {
                            onSetFocus="[_this,""RscAttributeFog"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleMusic {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleMusic"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleMusic"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Owners {
                            onSetFocus="[_this,""RscAttributeOwners"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Music {
                            onSetFocus="[_this,""RscAttributeMusic"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class MusicVolume {
                            onSetFocus="[_this,""RscAttributeMusicVolume"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleSound {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleSound"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleSound"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Sound {
                            onSetFocus="[_this,""RscAttributeSound"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleRadio {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleRadio"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleRadio"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Owners {
                            onSetFocus="[_this,""RscAttributeOwners"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class GenericRadio {
                            onSetFocus="[_this,""RscAttributeGenericRadio"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleDiary {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleDiary"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleDiary"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Owners {
                            onSetFocus="[_this,""RscAttributeOwners"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class DiaryRecord {
                            onSetFocus="[_this,""RscAttributeDiaryRecord"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModulePostprocess {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModulePostprocess"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModulePostprocess"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Postprocess {
                            onSetFocus="[_this,""RscAttributePostprocess"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleRespawnTickets {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleRespawnTickets"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleRespawnTickets"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class RespawnTickets {
                            onSetFocus="[_this,""RscAttributeRespawnTickets"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleCountdown {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleCountdown"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleCountdown"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Countdown {
                            onSetFocus="[_this,""RscAttributeCountdown"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class EndMission {
                            onSetFocus="[_this,""RscAttributeEndMission"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleEndMission {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleEndMission"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleEndMission"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class EndMission {
                            onSetFocus="[_this,""RscAttributeEndMission"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleRespawnInventory {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleRespawnInventory"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleRespawnInventory"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class RespawnInventory {
                            onSetFocus="[_this,""RscAttributeRespawnInventory"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleCAS {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleCAS"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleCAS"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class CAS {
                            onSetFocus="[_this,""RscAttributeCAS"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleMissionName {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleMissionName"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleMissionName"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class MissionName {
                            onSetFocus="[_this,""RSCATTRIBUTEMISSIONNAME"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleTimeMultiplier {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleTimeMultiplier"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleTimeMultiplier"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class TimeMultiplier {
                            onSetFocus="[_this,""RscAttributeTimeMultiplier"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayFiringRangeBoard {
            onLoad="['uiOnLoad', [_this select 0]] call BIS_fnc_firingRange;";
        };
        class RscDisplayTimeTrialBoard {
            onLoad="['uiOnLoad', [_this select 0]] call BIS_fnc_timeTrial;";
        };
        class RscDisplayTargetBoard {
            onLoad="['uiOnLoad', [_this select 0]] call BIS_fnc_target;";
        };
        class RscDisplayAttributesModuleBootcampStage {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleBootcampStage"",'BootcampDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleBootcampStage"",'BootcampDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Stage {
                            onSetFocus="[_this,""RscAttributeBootcampStage"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleHint {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleHint"",'BootcampDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleHint"",'BootcampDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Side {
                            onSetFocus="[_this,""RscAttributeSide"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Custom {
                            onSetFocus="[_this,""RscAttributeHintCustom"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Topic {
                            onSetFocus="[_this,""RscAttributeHintTopics"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModulePunishment {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModulePunishment"",'BootcampDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModulePunishment"",'BootcampDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Animation {
                            onSetFocus="[_this,""RscAttributePunishmentAnimation"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesTarget {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesTarget"",'BootcampDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesTarget"",'BootcampDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Texture {
                            onSetFocus="[_this,""RscAttributeTargetTexture"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class State {
                            onSetFocus="[_this,""RscAttributeTargetState"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Popup {
                            onSetFocus="[_this,""RscAttributeTargetPopup"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class PopupDelay {
                            onSetFocus="[_this,""RscAttributeTargetPopupDelay"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class DataStore {
                            onSetFocus="[_this,""RscAttributeTargetDataStore"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Data {
                            onSetFocus="[_this,""RscAttributeTargetData"",'BootcampCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayCurator {
            onLoad="[""onLoad"",_this,""RscDisplayCurator"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayCurator"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Add {
                    class controls {
                        class CreateSearchButton {
                            onButtonClick="		_display = ctrlparent (_this select 0);		_ctrlSearch = _display displayctrl 645;		_ctrlSearch ctrlsettext '';		ctrlsetfocus _ctrlSearch;	";
                        };
                    };
                };
            };
        };
        class RscDisplayCuratorEngine {
            onLoad="[""onLoad"",_this,""RscDisplayCurator"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayCurator"",'CuratorDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayAttributesModuleObjectiveRaceFinish {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleObjectiveRaceFinish"",'KartDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleObjectiveRaceFinish"",'KartDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Text {
                            onSetFocus="[_this,""RscAttributeText"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Owners {
                            onSetFocus="[_this,""RscAttributeOwners"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class TaskDescription {
                            onSetFocus="[_this,""RscAttributeTaskDescription"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleObjectiveRaceStart {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleObjectiveRaceStart"",'KartDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleObjectiveRaceStart"",'KartDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Text {
                            onSetFocus="[_this,""RscAttributeText"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Owners {
                            onSetFocus="[_this,""RscAttributeOwners"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class TaskDescription {
                            onSetFocus="[_this,""RscAttributeTaskDescription"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class RscDisplayAttributesModuleObjectiveRaceCP {
            onLoad="[""onLoad"",_this,""RscDisplayAttributesModuleObjectiveRaceCP"",'KartDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAttributesModuleObjectiveRaceCP"",'KartDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Content {
                    class Controls {
                        class Text {
                            onSetFocus="[_this,""RscAttributeText"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                        class Owners {
                            onSetFocus="[_this,""RscAttributeOwners"",'CuratorCommon'] call (uinamespace getvariable ""BIS_fnc_initCuratorAttribute"")";
                        };
                    };
                };
            };
        };
        class Display3DEN {
            onLoad="[""onLoad"",_this,""Display3DEN"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""Display3DEN"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class ButtonExit {
                    onButtonClick="do3DENAction '3DENExit';";
                };
                class MissionName {
                    onLoad="(_this select 0) ctrlenable false;";
                };
                class Toolbar {
                    class Controls {
                        class File {
                            class Controls {
                                class New {
                                    onLoad="['showShortcut','MissionNew',_this] call bis_fnc_3DENInterface;";
                                };
                                class Open {
                                    onLoad="['showShortcut','MissionLoad',_this] call bis_fnc_3DENInterface;";
                                };
                                class Save {
                                    onLoad="['showShortcut','MissionSave',_this] call bis_fnc_3DENInterface;";
                                };
                                class Publish {
                                    onLoad="['showShortcut','MissionPublishSteam',_this] call bis_fnc_3DENInterface;";
                                };
                            };
                        };
                        class History {
                            class Controls {
                                class Undo {
                                    onLoad="['showShortcut','Undo',_this] call bis_fnc_3DENInterface;";
                                };
                                class Redo {
                                    onLoad="['showShortcut','Redo',_this] call bis_fnc_3DENInterface;";
                                };
                            };
                        };
                        class Widget {
                            class Controls {
                                class WidgetNone {
                                    onCheckedChanged="do3DENAction 'WidgetNone'";
                                    onLoad="['showShortcut','WidgetNone',_this] call bis_fnc_3DENInterface;";
                                };
                                class WidgetTranslation {
                                    onCheckedChanged="do3DENAction 'WidgetTranslation'";
                                    onLoad="['showShortcut','WidgetTranslation',_this] call bis_fnc_3DENInterface;";
                                };
                                class WidgetRotation {
                                    onCheckedChanged="do3DENAction 'WidgetRotation'";
                                    onLoad="['showShortcut','WidgetRotation',_this] call bis_fnc_3DENInterface;";
                                };
                                class WidgetScaling {
                                    onCheckedChanged="do3DENAction 'WidgetScale'";
                                    onLoad="['showShortcut','WidgetScale',_this] call bis_fnc_3DENInterface;";
                                };
                                class WidgetArea {
                                    onCheckedChanged="do3DENAction 'WidgetArea'";
                                    onLoad="['showShortcut','WidgetArea',_this] call bis_fnc_3DENInterface;";
                                };
                            };
                        };
                        class Interaction {
                            class Controls {
                                class WidgetCoord {
                                    onCheckedChanged="do3DENAction 'WidgetCoord';";
                                    onLoad="['showShortcut','WidgetCoord',_this] call bis_fnc_3DENInterface;";
                                };
                                class VerticalToggle {
                                    onCheckedChanged="do3DENAction 'VerticalToggle';";
                                    onLoad="['showShortcut','VerticalToggle',_this] call bis_fnc_3DENInterface;";
                                };
                                class SurfaceSnapToggle {
                                    onCheckedChanged="do3DENAction 'SurfaceSnapToggle';";
                                    onLoad="['showShortcut','SurfaceSnapToggle',_this] call bis_fnc_3DENInterface;";
                                };
                            };
                        };
                        class Grid {
                            class Controls {
                                class Translation {
                                    onCheckedChanged="do3DENAction 'MoveGridToggle';";
                                    onLoad="['showShortcut','MoveGridToggle',_this] call bis_fnc_3DENInterface;";
                                };
                                class TranslationValue {
                                    onLoad="with uinamespace do {['init',_this] call bis_fnc_3DENGrid;};";
                                };
                                class Rotation {
                                    onCheckedChanged="do3DENAction 'RotateGridToggle';";
                                    onLoad="['showShortcut','RotateGridToggle',_this] call bis_fnc_3DENInterface;";
                                };
                                class RotationValue {
                                    onLoad="with uinamespace do {['init',_this] call bis_fnc_3DENGrid;};";
                                };
                                class Scaling {
                                    onCheckedChanged="do3DENAction 'ScaleGridToggle';";
                                    onLoad="['showShortcut','ScaleGridToggle',_this] call bis_fnc_3DENInterface;";
                                };
                                class ScalingValue {
                                    onLoad="with uinamespace do {['init',_this] call bis_fnc_3DENGrid;};";
                                };
                            };
                        };
                        class Mission {
                            class Controls {
                                class Intel {
                                    onLoad="['showShortcut','OpenIntelDisplay',_this] call bis_fnc_3DENInterface;";
                                };
                                class Map {
                                    onCheckedChanged="do3DENAction 'ToggleMap';";
                                    onLoad="['showShortcut','ToggleMap',_this] call bis_fnc_3DENInterface;";
                                };
                                class Flashlight {
                                    onCheckedChanged="[] call bis_fnc_3DENFlashlight;";
                                    onLoad="['showShortcut','ToggleFlashlight',_this] call bis_fnc_3DENInterface;";
                                };
                                class Vision {
                                    onLoad="['showShortcut','VisionModeToggle',_this] call bis_fnc_3DENInterface;";
                                };
                                class Workspace {
                                    onLbSelChanged="do3DENAction ((_this select 0) lbdata (_this select 1));";
                                };
                            };
                        };
                        class Help {
                            class Controls {
                                class Tutorial {
                                    onLoad="				_count = 0;				{					_count = _count + count configproperties [_x >> 'Sections','isclass _x'];				} foreach configproperties [configfile >> 'Cfg3DEN' >> 'Tutorials'];				if (_count > count (profilenamespace getvariable ['display3DENTutorial_completed',[]])) then {					(_this select 0) ctrlsettext '\a3\3DEN\Data\Displays\Display3DEN\ToolBar\help_tutorial_new_ca.paa';				};			";
                                    onButtonClick="(ctrlparent (_this select 0)) createdisplay 'Display3DENTutorial';";
                                };
                            };
                        };
                    };
                };
                class TabLeftToggle {
                    onbuttonclick="'ShowPanelLeft' call bis_fnc_3DENInterface;";
                };
                class PanelLeft {
                    class Controls {
                        class TabLeftToggle {
                            onbuttonclick="'ShowPanelLeft' call bis_fnc_3DENInterface";
                        };
                        class TabLeftSections {
                            onToolBoxSelChanged="['tabLeft',_this select 1] call bis_fnc_3DENInterface;";
                        };
                        class PanelLeftEdit {
                            class Controls {
                                class SearchEditButton {
                                    onLoad="['showShortcut','SearchEdit',_this] call bis_fnc_3DENInterface;";
                                };
                                class CollapseAllButton {
                                    onButtonClick="['collapseEntityList'] call bis_fnc_3DENInterface;";
                                };
                                class ExpandAllButton {
                                    onButtonClick="['expandEntityList'] call bis_fnc_3DENInterface;";
                                };
                                class EditPanel {
                                    class Controls {
                                        class EnableLayer {
                                            onButtonClick="'EnableLayer' call bis_fnc_3DENInterface;";
                                        };
                                        class ShowLayer {
                                            onButtonClick="'ShowLayer' call bis_fnc_3DENInterface;";
                                        };
                                    };
                                };
                            };
                        };
                        class PanelLeftLocations {
                            class Controls {
                                class Locations {
                                    onTreeDblClick="['select',_this] call bis_fnc_3DENListLocations;";
                                };
                            };
                        };
                    };
                };
                class TabRightToggle {
                    onbuttonclick="'ShowPanelRight' call bis_fnc_3DENInterface";
                };
                class PanelRight {
                    class Controls {
                        class TabRightToggle {
                            onbuttonclick="'ShowPanelRight' call bis_fnc_3DENInterface";
                        };
                        class TabRightSections {
                            onToolBoxSelChanged="['tabRight',_this select 1] call bis_fnc_3DENInterface;";
                        };
                        class PanelRightCreate {
                            class Controls {
                                class ModeLabels {
                                    onLoad="(_this select 0) ctrlenable false;";
                                };
                                class Create {
                                    class Controls {
                                        class ModsButton {
                                            onLoad="				_ctrlMods = _this select 0;				_mods = [];				{_mods pushBackUnique (configsourcemod _x)} foreach configProperties [configfile >> 'CfgPatches'];				{					_params = if (_x == '') then {[]} else {modParams [_x,['name','logoSmall']]};					if (count _params > 0) then {						_lbAdd = _ctrlMods lbadd (_params select 0);						_ctrlMods lbsetdata [_lbAdd,_x];						_ctrlMods lbsetpictureright [_lbAdd,(_params select 1)];						_ctrlMods lbsettooltip [_lbAdd,(_params select 0) + '\n' + _x];					};				} foreach _mods;				lbsort _ctrlMods;			";
                                            onLBSelChanged="				_ctrlMods = _this select 0;				(ctrlparent _ctrlMods displayctrl 82) ctrlsettext format ['mod %1',_ctrlMods lbdata (_this select 1)];			";
                                        };
                                        class SearchCreateButton {
                                            onLoad="['showShortcut','SearchCreate',_this] call bis_fnc_3DENInterface;";
                                        };
                                        class CollapseAllButton {
                                            onButtonClick="['collapseAssetBrowser'] call bis_fnc_3DENInterface;";
                                        };
                                        class ExpandAllButton {
                                            onButtonClick="['expandAssetBrowser'] call bis_fnc_3DENInterface;";
                                        };
                                        class CreateObjectWEST {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class CreateObjectEAST {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class CreateObjectGUER {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class CreateObjectCIV {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class CreateObjectEMPTY {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class CreateGroupWEST {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class CreateGroupEAST {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class CreateGroupGUER {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class CreateGroupCIV {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class CreateGroupEMPTY {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class CreateGroupCUSTOM {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class CreateTrigger {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class CreateWaypoint {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class CreateObjectLogic {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class CreateObjectModule {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class CreateMarkerIcon {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class CreateMarkerArea {
                                            ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                            onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                        };
                                        class VehiclePanel {
                                            class Controls {
                                                class ToggleEmpty {
                                                    onCheckedChanged="do3DENAction 'TogglePlaceEmptyVehicle';";
                                                };
                                            };
                                        };
                                        class CustomCompositionPanel {
                                            class Controls {
                                                class Add {
                                                    onButtonClick="do3denaction 'createcustomcomposition';";
                                                };
                                                class Edit {
                                                    onButtonClick="do3denaction 'editcustomcomposition';";
                                                };
                                                class Publish {
                                                    onLoad="(_this select 0) ctrlenable false;";
                                                    onButtonClick="do3denaction 'createcustomcomposition';";
                                                };
                                                class Delete {
                                                    onButtonClick="do3denaction 'deletecustomcomposition';";
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
                class ButtonPlay {
                    onButtonClick="if !(is3DENMultiplayer) then {do3DENAction 'MissionPreview';} else {do3DENAction 'MissionPreviewMP';};";
                    onLoad="['ButtonPlay',_this select 0] call (uinamespace getvariable 'bis_fnc_3DENInterface');";
                };
                class StatusBar {
                    class Controls {
                        class ValueX {
                            onLoad="(_this select 0) ctrlenable false;";
                        };
                        class ValueY {
                            onLoad="(_this select 0) ctrlenable false;";
                        };
                        class ValueZ {
                            onLoad="(_this select 0) ctrlenable false;";
                        };
                        class ValueDis {
                            onLoad="(_this select 0) ctrlenable false;";
                        };
                    };
                };
            };
        };
        class Display3DENPlace {
            onLoad="[""onLoad"",_this,""Display3DENPlace"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""Display3DENPlace"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class ControlsBackground {
                class PanelRightCreate {
                    class Controls {
                        class ModeLabels {
                            onLoad="(_this select 0) ctrlenable false;";
                        };
                        class Modes {
                            onToolBoxSelChanged="['placemode'] spawn bis_fnc_3DENInterface; ['placesubmode'] spawn bis_fnc_3DENInterface;";
                        };
                        class Sides {
                            onToolBoxSelChanged="['placesubmode'] spawn bis_fnc_3DENInterface;";
                        };
                        class Create {
                            class Controls {
                                class ModsButton {
                                    onLoad="				_ctrlMods = _this select 0;				_mods = [];				{_mods pushBackUnique (configsourcemod _x)} foreach configProperties [configfile >> 'CfgPatches'];				{					_params = if (_x == '') then {[]} else {modParams [_x,['name','logoSmall']]};					if (count _params > 0) then {						_lbAdd = _ctrlMods lbadd (_params select 0);						_ctrlMods lbsetdata [_lbAdd,_x];						_ctrlMods lbsetpictureright [_lbAdd,(_params select 1)];						_ctrlMods lbsettooltip [_lbAdd,(_params select 0) + '\n' + _x];					};				} foreach _mods;				lbsort _ctrlMods;			";
                                    onLBSelChanged="				_ctrlMods = _this select 0;				(ctrlparent _ctrlMods displayctrl 82) ctrlsettext format ['mod %1',_ctrlMods lbdata (_this select 1)];			";
                                };
                                class SearchCreateButton {
                                    onLoad="['showShortcut','SearchCreate',_this] call bis_fnc_3DENInterface;";
                                };
                                class CollapseAllButton {
                                    onButtonClick="['collapseAssetBrowser'] call bis_fnc_3DENInterface;";
                                };
                                class ExpandAllButton {
                                    onButtonClick="['expandAssetBrowser'] call bis_fnc_3DENInterface;";
                                };
                                class CreateObjectWEST {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class CreateObjectEAST {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class CreateObjectGUER {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class CreateObjectCIV {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class CreateObjectEMPTY {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class CreateGroupWEST {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class CreateGroupEAST {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class CreateGroupGUER {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class CreateGroupCIV {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class CreateGroupEMPTY {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class CreateGroupCUSTOM {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class CreateTrigger {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class CreateWaypoint {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class CreateObjectLogic {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class CreateObjectModule {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class CreateMarkerIcon {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class CreateMarkerArea {
                                    ontreeSelChanged="['place',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonDown="['mousebuttondown',_this] call bis_fnc_3DENControlsHint;";
                                    onMouseButtonUp="['mousebuttonup',_this] call bis_fnc_3DENControlsHint;";
                                };
                                class VehiclePanel {
                                    class Controls {
                                        class ToggleEmpty {
                                            onCheckedChanged="do3DENAction 'TogglePlaceEmptyVehicle';";
                                        };
                                    };
                                };
                                class CustomCompositionPanel {
                                    class Controls {
                                        class Add {
                                            onButtonClick="do3denaction 'createcustomcomposition';";
                                        };
                                        class Edit {
                                            onButtonClick="do3denaction 'editcustomcomposition';";
                                        };
                                        class Publish {
                                            onLoad="(_this select 0) ctrlenable false;";
                                            onButtonClick="do3denaction 'createcustomcomposition';";
                                        };
                                        class Delete {
                                            onButtonClick="do3denaction 'deletecustomcomposition';";
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
        class Display3DENNew {
            onLoad="[""onLoad"",_this,""Display3DENNew"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""Display3DENNew"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class controls {
                class IslandsBox {
                    onLoad=" 				params [""_ctrl""]; 				lbSort _ctrl; 				for ""_i"" from 0 to lbSize _ctrl - 1 do 				{ 					if (_ctrl lbData _i == worldName) exitWith 					{ 						_ctrl lbSetCurSel _i; 					}; 				}; 			";
                };
            };
        };
        class Display3DENSave {
            onLoad="[""onLoad"",_this,""Display3DENSave"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""Display3DENSave"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class Binarize {
                    onLoad="(_this select 0) cbSetChecked (if (missionname == '') then {('preferences' get3DENMissionAttribute 'SaveBinarized')} else {('scenario' get3DENMissionAttribute 'SaveBinarized')});";
                };
            };
        };
        class Display3DENEditComposition {
            onLoad="[""onLoad"",_this,""Display3DENEditComposition"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""Display3DENEditComposition"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class ControlsBackground {
                class Content {
                    class Controls {
                        class Category {
                            onLoad="						_ctrlCombo = _this select 0;						{							_lbadd = _ctrlCombo lbadd gettext (_x >> 'displayName');							_ctrlCombo lbsetdata [_lbadd,configname _x];							if (_foreachindex == 0) then {_ctrlCombo lbsetvalue [_lbadd,1];};						} foreach configproperties [configfile >> 'CfgEditorSubcategories','isclass _x'];						_ctrlCombo lbsetcursel 0;						lbsort _ctrlCombo;					";
                        };
                    };
                };
            };
        };
        class Display3DENSaveComposition {
            onLoad="[""onLoad"",_this,""Display3DENEditComposition"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""Display3DENEditComposition"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class ControlsBackground {
                class Content {
                    class Controls {
                        class Category {
                            onLoad="						_ctrlCombo = _this select 0;						{							_lbadd = _ctrlCombo lbadd gettext (_x >> 'displayName');							_ctrlCombo lbsetdata [_lbadd,configname _x];							if (_foreachindex == 0) then {_ctrlCombo lbsetvalue [_lbadd,1];};						} foreach configproperties [configfile >> 'CfgEditorSubcategories','isclass _x'];						_ctrlCombo lbsetcursel 0;						lbsort _ctrlCombo;					";
                        };
                    };
                };
            };
        };
        class Display3DENEditAttributes {
            onLoad="[""onLoad"",_this,""Display3DENEditAttributes"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""Display3DENEditAttributes"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class ControlsBackground {
                class ButtonOK {
                    onButtonDown="ctrlsetfocus (_this select 0);";
                };
            };
        };
        class Display3DENEditAttributesIntel {
            onLoad="[""onLoad"",_this,""Display3DENEditAttributes"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""Display3DENEditAttributes"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class ControlsBackground {
                class ButtonOK {
                    onButtonDown="ctrlsetfocus (_this select 0);";
                };
            };
        };
        class Display3DENEditAttributesPreview {
            onLoad="[""onLoad"",_this,""Display3DENEditAttributes"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""Display3DENEditAttributes"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class ControlsBackground {
                class ButtonOK {
                    onButtonDown="ctrlsetfocus (_this select 0);";
                };
            };
        };
        class Display3DENUpdates {
            onLoad="[""onLoad"",_this,""Display3DENUpdates"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""Display3DENUpdates"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class Display3DENCopy {
            onLoad="[""onLoad"",_this,""Display3DENCopy"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""Display3DENCopy"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class ButtonCopy {
                    onButtonClick="				_display = ctrlparent (_this select 0);				copytoclipboard ctrltext (_display displayctrl 202);			";
                };
            };
        };
        class display3DENHostSettings {
            onLoad="[""onLoad"",_this,""RscDisplayHostSettings"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayHostSettings"",'GUI'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class Display3DENTutorial {
            onLoad="[""onLoad"",_this,""Display3DENTutorial"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""Display3DENTutorial"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class display3DENMsgBox {
            onKeyDown="if ((_this select 1) == 0x2E && (_this select 3)) then {copytoclipboard ctrltext ((_this select 0) displayctrl 101);};";
        };
        class display3DENPublishMission {
            class Controls {
                class ButtonDeleteDummy {
                    onLoad="(_this select 0) ctrlenable false;";
                };
                class StorageQuota {
                    onLoad="(_this select 0) ctrlenable false;";
                };
                class Area {
                    class Controls {
                        class Tags {
                            onLoad="(_this select 0) ctrlenable false;";
                        };
                        class ChangeNoteDummyFrame {
                            onLoad="(_this select 0) ctrlenable false;";
                        };
                        class License {
                            onLoad="(_this select 0) ctrlsettext (ctrltext (_this select 0) + '?');";
                        };
                        class LicenseCheckboxImage {
                            onLoad="(_this select 0) ctrlenable false;";
                        };
                        class LicenseCheckbox {
                            onCheckBoxesSelChanged="						(ctrlparent (_this select 0) displayctrl 1002) cbsetchecked ([false,true] select (_this select 2));						(ctrlparent (_this select 0) displayctrl 1001) ctrlsetbackgroundcolor ([[0,0,0,0.25],[0.5,1,0,0.15]] select (_this select 2));					";
                        };
                    };
                };
            };
        };
        class Display3DENRequiredAddons {
            onLoad="[""onLoad"",_this,""Display3DENRequiredAddons"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""Display3DENRequiredAddons"",'3DENDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class ControlsBackground {
                class Tabs {
                    onToolBoxSelChanged="				_display = ctrlparent (_this select 0);				(_display displayctrl 1001) ctrlshow ((_this select 1) == 0);				(_display displayctrl 1002) ctrlshow ((_this select 1) == 1);			";
                };
                class Basic {
                    class Controls {
                        class Info {
                            class Controls {
                                class URL {
                                    onLoad="								(_this select 0) ctrlenable false;								(_this select 0) ctrlsetstructuredtext parsetext format [""<img image='\a3\3DEN\Data\Controls\ctrlMenu\link_ca.paa'/> %1"",toupper ctrltext (_this select 0)];							";
                                };
                            };
                        };
                    };
                };
            };
        };
        class RscDisplayRead {
            onLoad="[""onLoad"",_this,""RscDisplayRead"",'OrangeDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayRead"",'OrangeDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            class Controls {
                class ButtonShowText {
                    onButtonClick="				_display = ctrlparent (_this select 0);				{					_ctrl = _display displayctrl _x;					_ctrl ctrlsetfade floor ((ctrlfade _ctrl + 1) % 2);					_ctrl ctrlcommit 0.1;				} foreach [1002,1003];			";
                };
            };
        };
        class RscDisplayPhoneCallIncoming {
            onLoad="[""onLoad"",_this,""RscDisplayPhoneCallIncoming"",'OrangeDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayPhoneCallIncoming"",'OrangeDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayOrangeChoice {
            onLoad="[""onLoad"",_this,""RscDisplayOrangeChoice"",'OrangeDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayOrangeChoice"",'OrangeDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayAANArticle {
            onLoad="[""onLoad"",_this,""RscDisplayAANArticle"",'OrangeDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayAANArticle"",'OrangeDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
        class RscDisplayDebriefingTacops {
            onLoad="[""onLoad"",_this,""RscDisplayDebriefingTacops"",'TacopsDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
            onUnload="[""onUnload"",_this,""RscDisplayDebriefingTacops"",'TacopsDisplays'] call 	(uinamespace getvariable 'BIS_fnc_initDisplay')";
        };
    };

	// run export server setup

//Patches
    class GAP{
        3den[]={};
        a3_3den[]={};
        a3_3den_language[]={};
        a3_air_f[]={};
        a3_air_f_beta[]={};
        a3_air_f_beta_heli_attack_01[]={};
        a3_air_f_beta_heli_attack_02[]={};
        a3_air_f_beta_heli_transport_01[]={};
        a3_air_f_beta_heli_transport_02[]={};
        a3_air_f_beta_parachute_01[]={};
        a3_air_f_beta_parachute_02[]={};
        a3_air_f_epb[]={};
        a3_air_f_epb_heli_light_03[]={};
        a3_air_f_epc[]={};
        a3_air_f_epc_plane_cas_01[]={};
        a3_air_f_epc_plane_cas_02[]={};
        a3_air_f_epc_plane_fighter_03[]={};
        a3_air_f_exp[]={"expansion"};
        a3_air_f_exp_heli_light_01[]={"expansion"};
        a3_air_f_exp_heli_transport_01[]={"expansion"};
        a3_air_f_exp_plane_civil_01[]={"expansion"};
        a3_air_f_exp_uav_03[]={"expansion"};
        a3_air_f_exp_uav_04[]={"expansion"};
        a3_air_f_exp_vtol_01[]={"expansion"};
        a3_air_f_exp_vtol_02[]={"expansion"};
        a3_air_f_gamma[]={};
        a3_air_f_gamma_plane_fighter_03[]={};
        a3_air_f_gamma_uav_01[]={};
        a3_air_f_gamma_uav_02[]={};
        a3_air_f_heli[]={"heli"};
        a3_air_f_heli_heli_attack_01[]={"heli"};
        a3_air_f_heli_heli_attack_02[]={"heli"};
        a3_air_f_heli_heli_light_01[]={"heli"};
        a3_air_f_heli_heli_light_02[]={"heli"};
        a3_air_f_heli_heli_light_03[]={"heli"};
        a3_air_f_heli_heli_transport_01[]={"heli"};
        a3_air_f_heli_heli_transport_02[]={"heli"};
        a3_air_f_heli_heli_transport_03[]={"heli"};
        a3_air_f_heli_heli_transport_04[]={"heli"};
        a3_air_f_heli_light_01[]={};
        a3_air_f_heli_light_02[]={};
        a3_air_f_jets[]={"jets"};
        a3_air_f_jets_plane_fighter_01[]={"jets"};
        a3_air_f_jets_plane_fighter_02[]={"jets"};
        a3_air_f_jets_plane_fighter_04[]={"jets"};
        a3_air_f_jets_uav_05[]={"jets"};
        a3_air_f_orange[]={"orange"};
        a3_air_f_orange_heli_transport_02[]={"orange"};
        a3_air_f_orange_uav_01[]={"orange"};
        a3_air_f_orange_uav_06[]={"orange"};
        a3_animals_f[]={};
        a3_animals_f_animconfig[]={};
        a3_animals_f_beta[]={};
        a3_animals_f_beta_chicken[]={};
        a3_animals_f_beta_dog[]={};
        a3_animals_f_beta_goat[]={};
        a3_animals_f_beta_sheep[]={};
        a3_animals_f_chicken[]={};
        a3_animals_f_dog[]={};
        a3_animals_f_fishes[]={};
        a3_animals_f_goat[]={};
        a3_animals_f_kestrel[]={};
        a3_animals_f_rabbit[]={};
        a3_animals_f_seagull[]={};
        a3_animals_f_sheep[]={};
        a3_animals_f_snakes[]={};
        a3_animals_f_turtle[]={};
        a3_anims_f[]={};
        a3_anims_f_bootcamp[]={};
        a3_anims_f_config_sdr[]={};
        a3_anims_f_config_sdr_weaponswitching[]={};
        a3_anims_f_data[]={};
        a3_anims_f_epa[]={};
        a3_anims_f_epc[]={};
        a3_anims_f_exp[]={"expansion"};
        a3_anims_f_exp_a[]={};
        a3_anims_f_exp_revive[]={"expansion"};
        a3_anims_f_heli[]={"heli"};
        a3_anims_f_jets[]={"jets"};
        a3_anims_f_kart[]={"kart"};
        a3_anims_f_mark[]={"mark"};
        a3_anims_f_mark_deployment[]={"mark"};
        a3_anims_f_mod[]={};
        a3_armor_f[]={};
        a3_armor_f_amv[]={};
        a3_armor_f_apc_wheeled_03[]={};
        a3_armor_f_argo[]={"argo"};
        a3_armor_f_argo_apc_tracked_01[]={"argo"};
        a3_armor_f_argo_apc_wheeled_02[]={"argo"};
        a3_armor_f_beta[]={};
        a3_armor_f_beta_apc_tracked_01[]={};
        a3_armor_f_beta_apc_tracked_02[]={};
        a3_armor_f_beta_apc_wheeled_01[]={};
        a3_armor_f_beta_apc_wheeled_02[]={};
        a3_armor_f_epb[]={};
        a3_armor_f_epb_apc_tracked_03[]={};
        a3_armor_f_epb_mbt_03[]={};
        a3_armor_f_epc[]={};
        a3_armor_f_epc_mbt_01[]={};
        a3_armor_f_exp[]={"expansion"};
        a3_armor_f_exp_apc_tracked_01[]={"expansion"};
        a3_armor_f_exp_apc_tracked_02[]={"expansion"};
        a3_armor_f_exp_apc_wheeled_01[]={"expansion"};
        a3_armor_f_exp_apc_wheeled_02[]={"expansion"};
        a3_armor_f_exp_mbt_01[]={"expansion"};
        a3_armor_f_exp_mbt_02[]={"expansion"};
        a3_armor_f_gamma[]={};
        a3_armor_f_gamma_apc_wheeled_03[]={};
        a3_armor_f_gamma_mbt_01[]={};
        a3_armor_f_gamma_mbt_02[]={};
        a3_armor_f_marid[]={};
        a3_armor_f_panther[]={};
        a3_armor_f_slammer[]={};
        a3_armor_f_t100k[]={};
        a3_armor_f_tank[]={"tank"};
        a3_armor_f_tank_afv_wheeled_01[]={"tank"};
        a3_armor_f_tank_lt_01[]={"tank"};
        a3_armor_f_tank_mbt_04[]={"tank"};
        a3_baseconfig_f[]={};
        a3_boat_f[]={};
        a3_boat_f_beta[]={};
        a3_boat_f_beta_boat_armed_01[]={};
        a3_boat_f_beta_boat_transport_01[]={};
        a3_boat_f_beta_sdv_01[]={};
        a3_boat_f_boat_armed_01[]={};
        a3_boat_f_boat_transport_01[]={};
        a3_boat_f_civilian_boat[]={};
        a3_boat_f_destroyer[]={"jets"};
        a3_boat_f_destroyer_destroyer_01[]={"jets"};
        a3_boat_f_epc[]={};
        a3_boat_f_epc_submarine_01[]={};
        a3_boat_f_epc_submarine_01_f[]={};
        a3_boat_f_exp[]={"expansion"};
        a3_boat_f_exp_boat_armed_01[]={"expansion"};
        a3_boat_f_exp_boat_transport_01[]={"expansion"};
        a3_boat_f_exp_boat_transport_02[]={"expansion"};
        a3_boat_f_exp_scooter_transport_01[]={"expansion"};
        a3_boat_f_gamma[]={};
        a3_boat_f_gamma_boat_civil_01[]={};
        a3_boat_f_gamma_boat_civil_04[]={};
        a3_boat_f_gamma_boat_transport_01[]={};
        a3_boat_f_heli[]={"heli"};
        a3_boat_f_heli_boat_armed_01[]={"heli"};
        a3_boat_f_heli_sdv_01[]={"heli"};
        a3_boat_f_jets[]={"jets"};
        a3_boat_f_jets_carrier_01[]={"jets"};
        a3_boat_f_sdv_01[]={};
        a3_boat_f_trawler[]={};
        a3_cargoposes_f[]={};
        a3_cargoposes_f_exp[]={"expansion"};
        a3_cargoposes_f_heli[]={"heli"};
        a3_cargoposes_f_jets[]={"jets"};
        a3_cargoposes_f_orange[]={"orange"};
        a3_cargoposes_f_tank[]={"tank"};
        a3_characters_f[]={};
        a3_characters_f_beta[]={};
        a3_characters_f_beta_indep[]={};
        a3_characters_f_blufor[]={};
        a3_characters_f_bootcamp[]={};
        a3_characters_f_bootcamp_common[]={};
        a3_characters_f_civil[]={};
        a3_characters_f_common[]={};
        a3_characters_f_epa[]={};
        a3_characters_f_epb[]={};
        a3_characters_f_epb_heads[]={};
        a3_characters_f_epc[]={};
        a3_characters_f_exp[]={"expansion"};
        a3_characters_f_exp_civil[]={"expansion"};
        a3_characters_f_exp_headgear[]={"expansion"};
        a3_characters_f_exp_vests[]={"expansion"};
        a3_characters_f_gamma[]={};
        a3_characters_f_heads[]={};
        a3_characters_f_indep[]={};
        a3_characters_f_jets[]={"jets"};
        a3_characters_f_jets_vests[]={"jets"};
        a3_characters_f_kart[]={"kart"};
        a3_characters_f_mark[]={"mark"};
        a3_characters_f_opfor[]={};
        a3_characters_f_orange[]={"orange"};
        a3_characters_f_orange_facewear[]={"orange"};
        a3_characters_f_orange_headgear[]={"orange"};
        a3_characters_f_orange_uniforms[]={"orange"};
        a3_characters_f_orange_vests[]={"orange"};
        a3_characters_f_patrol[]={"argo"};
        a3_characters_f_proxies[]={};
        a3_characters_f_tacops[]={"tacops"};
        a3_characters_f_tank[]={"tank"};
        a3_characters_f_tank_headgear[]={"tank"};
        a3_characters_f_tank_uniforms[]={"tank"};
        a3_data_f[]={};
        a3_data_f_argo[]={"argo"};
        a3_data_f_argo_loadorder[]={"argo"};
        a3_data_f_bootcamp[]={};
        a3_data_f_bootcamp_loadorder[]={};
        a3_data_f_curator[]={"curator"};
        a3_data_f_curator_characters[]={"curator"};
        a3_data_f_curator_eagle[]={"curator"};
        a3_data_f_curator_intel[]={"curator"};
        a3_data_f_curator_loadorder[]={"curator"};
        a3_data_f_curator_misc[]={"curator"};
        a3_data_f_curator_music[]={"curator"};
        a3_data_f_curator_respawn[]={"curator"};
        a3_data_f_curator_virtual[]={"curator"};
        a3_data_f_destroyer[]={"jets"};
        a3_data_f_destroyer_loadorder[]={"jets"};
        a3_data_f_exp[]={"expansion"};
        a3_data_f_exp_a[]={};
        a3_data_f_exp_a_loadorder[]={};
        a3_data_f_exp_a_virtual[]={};
        a3_data_f_exp_b[]={};
        a3_data_f_exp_b_loadorder[]={};
        a3_data_f_exp_loadorder[]={"expansion"};
        a3_data_f_exp_particleeffects[]={"expansion"};
        a3_data_f_heli[]={"heli"};
        a3_data_f_heli_loadorder[]={"heli"};
        a3_data_f_hook[]={};
        a3_data_f_jets[]={"jets"};
        a3_data_f_jets_loadorder[]={"jets"};
        a3_data_f_kart[]={"kart"};
        a3_data_f_kart_loadorder[]={"kart"};
        a3_data_f_kart_particleeffects[]={"kart"};
        a3_data_f_loadorder[]={};
        a3_data_f_mark[]={"mark"};
        a3_data_f_mark_loadorder[]={"mark"};
        a3_data_f_mod[]={};
        a3_data_f_mod_loadorder[]={};
        a3_data_f_orange[]={"orange"};
        a3_data_f_orange_loadorder[]={"orange"};
        a3_data_f_particleeffects[]={};
        a3_data_f_patrol[]={"argo"};
        a3_data_f_patrol_loadorder[]={"argo"};
        a3_data_f_sams[]={"jets"};
        a3_data_f_sams_loadorder[]={"jets"};
        a3_data_f_tacops[]={"tacops"};
        a3_data_f_tacops_loadorder[]={"tacops"};
        a3_data_f_tank[]={"tank"};
        a3_data_f_tank_loadorder[]={"tank"};
        a3_data_f_warlords[]={};
        a3_data_f_warlords_loadorder[]={};
        a3_drones_f[]={};
        a3_drones_f_air_f_gamma_uav_01[]={};
        a3_drones_f_air_f_gamma_uav_02[]={};
        a3_drones_f_characters_f_gamma[]={};
        a3_drones_f_soft_f_gamma_ugv_01[]={};
        a3_drones_f_weapons_f_gamma_ammoboxes[]={};
        a3_drones_f_weapons_f_gamma_items[]={};
        a3_dubbing_f[]={};
        a3_dubbing_f_beta[]={};
        a3_dubbing_f_bootcamp[]={};
        a3_dubbing_f_epa[]={};
        a3_dubbing_f_epb[]={};
        a3_dubbing_f_epc[]={};
        a3_dubbing_f_exp[]={"expansion"};
        a3_dubbing_f_gamma[]={};
        a3_dubbing_f_heli[]={"heli"};
        a3_dubbing_f_jets[]={"jets"};
        a3_dubbing_f_mark[]={"mark"};
        a3_dubbing_f_mp_mark[]={"mark"};
        a3_dubbing_f_orange[]={"orange"};
        a3_dubbing_f_tacops[]={"tacops"};
        a3_dubbing_f_tank[]={"tank"};
        a3_dubbing_f_warlords[]={};
        a3_dubbing_radio_f[]={};
        a3_dubbing_radio_f_data_eng[]={};
        a3_dubbing_radio_f_data_engb[]={};
        a3_dubbing_radio_f_data_gre[]={};
        a3_dubbing_radio_f_data_per[]={};
        a3_dubbing_radio_f_data_vr[]={};
        a3_dubbing_radio_f_exp[]={"expansion"};
        a3_dubbing_radio_f_exp_data_chi[]={"expansion"};
        a3_dubbing_radio_f_exp_data_engfre[]={"expansion"};
        a3_dubbing_radio_f_exp_data_fre[]={"expansion"};
        a3_editor_f[]={};
        a3_editorpreviews_f[]={};
        a3_editorpreviews_f_argo[]={"argo"};
        a3_editorpreviews_f_destroyer[]={"jets"};
        a3_editorpreviews_f_exp[]={"expansion"};
        a3_editorpreviews_f_jets[]={"jets"};
        a3_editorpreviews_f_orange[]={"orange"};
        a3_editorpreviews_f_sams[]={"jets"};
        a3_editorpreviews_f_tank[]={"tank"};
        a3_functions_f[]={};
        a3_functions_f_bootcamp[]={};
        a3_functions_f_curator[]={"curator"};
        a3_functions_f_destroyer[]={"jets"};
        a3_functions_f_epa[]={};
        a3_functions_f_epc[]={};
        a3_functions_f_exp[]={"expansion"};
        a3_functions_f_exp_a[]={};
        a3_functions_f_heli[]={"heli"};
        a3_functions_f_jets[]={"jets"};
        a3_functions_f_mark[]={"mark"};
        a3_functions_f_mp_mark[]={"mark"};
        a3_functions_f_orange[]={"orange"};
        a3_functions_f_patrol[]={"argo"};
        a3_functions_f_tacops[]={"tacops"};
        a3_functions_f_tank[]={"tank"};
        a3_functions_f_warlords[]={};
        a3_language_f[]={};
        a3_language_f_argo[]={"argo"};
        a3_language_f_beta[]={};
        a3_language_f_bootcamp[]={};
        a3_language_f_curator[]={"curator"};
        a3_language_f_destroyer[]={"jets"};
        a3_language_f_epa[]={};
        a3_language_f_epb[]={};
        a3_language_f_epc[]={};
        a3_language_f_exp[]={"expansion"};
        a3_language_f_exp_a[]={};
        a3_language_f_exp_b[]={};
        a3_language_f_gamma[]={};
        a3_language_f_heli[]={"heli"};
        a3_language_f_jets[]={"jets"};
        a3_language_f_kart[]={"kart"};
        a3_language_f_mark[]={"mark"};
        a3_language_f_mod[]={};
        a3_language_f_mp_mark[]={"mark"};
        a3_language_f_orange[]={"orange"};
        a3_language_f_patrol[]={"argo"};
        a3_language_f_sams[]={"jets"};
        a3_language_f_tacops[]={"tacops"};
        a3_language_f_tank[]={"tank"};
        a3_language_f_warlords[]={};
        a3_languagemissions_f[]={};
        a3_languagemissions_f_beta[]={};
        a3_languagemissions_f_bootcamp[]={};
        a3_languagemissions_f_epa[]={};
        a3_languagemissions_f_epb[]={};
        a3_languagemissions_f_epc[]={};
        a3_languagemissions_f_exp[]={"expansion"};
        a3_languagemissions_f_exp_a[]={};
        a3_languagemissions_f_gamma[]={};
        a3_languagemissions_f_heli[]={"heli"};
        a3_languagemissions_f_jets[]={"jets"};
        a3_languagemissions_f_kart[]={"kart"};
        a3_languagemissions_f_mark[]={"mark"};
        a3_languagemissions_f_mp_mark[]={"mark"};
        a3_languagemissions_f_orange[]={"orange"};
        a3_languagemissions_f_patrol[]={"argo"};
        a3_languagemissions_f_tacops[]={"tacops"};
        a3_languagemissions_f_tank[]={"tank"};
        a3_map_altis[]={};
        a3_map_altis_data[]={};
        a3_map_altis_data_layers[]={};
        a3_map_altis_scenes[]={};
        a3_map_altis_scenes_f[]={};
        a3_map_data[]={};
        a3_map_data_exp[]={"expansion"};
        a3_map_malden[]={"argo"};
        a3_map_malden_data[]={"argo"};
        a3_map_malden_data_layers[]={"argo"};
        a3_map_malden_scenes_f[]={"argo"};
        a3_map_stratis[]={};
        a3_map_stratis_data[]={};
        a3_map_stratis_data_layers[]={};
        a3_map_stratis_scenes[]={};
        a3_map_stratis_scenes_f[]={};
        a3_map_tanoa_scenes_f[]={"expansion"};
        a3_map_tanoabuka[]={"expansion"};
        a3_map_tanoabuka_data[]={"expansion"};
        a3_map_tanoabuka_data_layers[]={"expansion"};
        a3_map_vr[]={};
        a3_map_vr_scenes[]={};
        a3_map_vr_scenes_f[]={};
        a3_misc_f[]={};
        a3_misc_f_helpers[]={};
        a3_missions_f[]={};
        a3_missions_f_beta[]={};
        a3_missions_f_beta_data[]={};
        a3_missions_f_beta_video[]={};
        a3_missions_f_bootcamp[]={};
        a3_missions_f_bootcamp_data[]={};
        a3_missions_f_bootcamp_video[]={};
        a3_missions_f_curator[]={"curator"};
        a3_missions_f_data[]={};
        a3_missions_f_epa[]={};
        a3_missions_f_epa_data[]={};
        a3_missions_f_epa_video[]={};
        a3_missions_f_epb[]={};
        a3_missions_f_epc[]={};
        a3_missions_f_exp[]={"expansion"};
        a3_missions_f_exp_a[]={};
        a3_missions_f_exp_a_data[]={};
        a3_missions_f_exp_data[]={"expansion"};
        a3_missions_f_exp_video[]={"expansion"};
        a3_missions_f_gamma[]={};
        a3_missions_f_gamma_data[]={};
        a3_missions_f_gamma_video[]={};
        a3_missions_f_heli[]={"heli"};
        a3_missions_f_heli_data[]={"heli"};
        a3_missions_f_heli_video[]={"heli"};
        a3_missions_f_jets[]={"jets"};
        a3_missions_f_kart[]={"kart"};
        a3_missions_f_kart_data[]={"kart"};
        a3_missions_f_mark[]={"mark"};
        a3_missions_f_mark_data[]={"mark"};
        a3_missions_f_mark_video[]={"mark"};
        a3_missions_f_mp_mark[]={"mark"};
        a3_missions_f_mp_mark_data[]={"mark"};
        a3_missions_f_orange[]={"orange"};
        a3_missions_f_patrol[]={"argo"};
        a3_missions_f_tacops[]={"tacops"};
        a3_missions_f_tank[]={"tank"};
        a3_missions_f_video[]={};
        a3_missions_f_warlords[]={};
        a3_missions_f_warlords_data[]={};
        a3_modules_f[]={};
        a3_modules_f_beta[]={};
        a3_modules_f_beta_data[]={};
        a3_modules_f_beta_firingdrills[]={};
        a3_modules_f_bootcamp[]={};
        a3_modules_f_bootcamp_misc[]={};
        a3_modules_f_curator[]={"curator"};
        a3_modules_f_curator_animals[]={"curator"};
        a3_modules_f_curator_cas[]={"curator"};
        a3_modules_f_curator_chemlights[]={"curator"};
        a3_modules_f_curator_curator[]={"curator"};
        a3_modules_f_curator_effects[]={"curator"};
        a3_modules_f_curator_environment[]={"curator"};
        a3_modules_f_curator_flares[]={"curator"};
        a3_modules_f_curator_intel[]={"curator"};
        a3_modules_f_curator_lightning[]={"curator"};
        a3_modules_f_curator_mines[]={"curator"};
        a3_modules_f_curator_misc[]={"curator"};
        a3_modules_f_curator_multiplayer[]={"curator"};
        a3_modules_f_curator_objectives[]={"curator"};
        a3_modules_f_curator_ordnance[]={"curator"};
        a3_modules_f_curator_respawn[]={"curator"};
        a3_modules_f_curator_smokeshells[]={"curator"};
        a3_modules_f_data[]={};
        a3_modules_f_dyno[]={};
        a3_modules_f_effects[]={};
        a3_modules_f_epb[]={};
        a3_modules_f_epb_misc[]={};
        a3_modules_f_events[]={};
        a3_modules_f_exp[]={"expansion"};
        a3_modules_f_exp_a[]={};
        a3_modules_f_groupmodifiers[]={};
        a3_modules_f_hc[]={};
        a3_modules_f_heli[]={"heli"};
        a3_modules_f_heli_misc[]={"heli"};
        a3_modules_f_heli_spawnai[]={};
        a3_modules_f_intel[]={};
        a3_modules_f_jets[]={"jets"};
        a3_modules_f_kart[]={"kart"};
        a3_modules_f_kart_data[]={"kart"};
        a3_modules_f_kart_timetrials[]={"kart"};
        a3_modules_f_livefeed[]={};
        a3_modules_f_mark[]={"mark"};
        a3_modules_f_mark_firingdrills[]={"mark"};
        a3_modules_f_mark_objectives[]={};
        a3_modules_f_marta[]={};
        a3_modules_f_misc[]={};
        a3_modules_f_mp_mark[]={"mark"};
        a3_modules_f_mp_mark_objectives[]={"mark"};
        a3_modules_f_multiplayer[]={};
        a3_modules_f_objectmodifiers[]={};
        a3_modules_f_orange[]={"orange"};
        a3_modules_f_patrol[]={"argo"};
        a3_modules_f_sites[]={};
        a3_modules_f_skirmish[]={};
        a3_modules_f_strategicmap[]={};
        a3_modules_f_supports[]={};
        a3_modules_f_tacops[]={"tacops"};
        a3_modules_f_tank[]={"tank"};
        a3_modules_f_uav[]={};
        a3_modules_f_warlords[]={};
        a3_music_f[]={};
        a3_music_f_argo[]={"argo"};
        a3_music_f_bootcamp[]={};
        a3_music_f_bootcamp_music[]={};
        a3_music_f_epa[]={};
        a3_music_f_epa_music[]={};
        a3_music_f_epb[]={};
        a3_music_f_epb_music[]={};
        a3_music_f_epc[]={};
        a3_music_f_epc_music[]={};
        a3_music_f_exp[]={"expansion"};
        a3_music_f_exp_music[]={"expansion"};
        a3_music_f_heli[]={"heli"};
        a3_music_f_heli_music[]={"heli"};
        a3_music_f_jets[]={"jets"};
        a3_music_f_mark[]={"mark"};
        a3_music_f_mark_music[]={"mark"};
        a3_music_f_music[]={};
        a3_music_f_orange[]={"orange"};
        a3_music_f_tacops[]={"tacops"};
        a3_music_f_tank[]={"tank"};
        a3_plants_f[]={};
        a3_plants_f_bush[]={};
        a3_props_f_argo[]={"argo"};
        a3_props_f_argo_civilian[]={"argo"};
        a3_props_f_argo_civilian_infoboards[]={"argo"};
        a3_props_f_argo_items[]={"argo"};
        a3_props_f_argo_items_documents[]={"argo"};
        a3_props_f_argo_items_electronics[]={"argo"};
        a3_props_f_destroyer[]={"jets"};
        a3_props_f_destroyer_military_briefingroomdesk[]={"jets"};
        a3_props_f_destroyer_military_briefingroomscreen[]={"jets"};
        a3_props_f_exp[]={"expansion"};
        a3_props_f_exp_a[]={};
        a3_props_f_exp_a_military[]={};
        a3_props_f_exp_a_military_equipment[]={};
        a3_props_f_exp_civilian[]={"expansion"};
        a3_props_f_exp_civilian_garbage[]={"expansion"};
        a3_props_f_exp_commercial[]={"expansion"};
        a3_props_f_exp_commercial_market[]={"expansion"};
        a3_props_f_exp_industrial[]={"expansion"};
        a3_props_f_exp_industrial_heavyequipment[]={"expansion"};
        a3_props_f_exp_infrastructure[]={"expansion"};
        a3_props_f_exp_infrastructure_railways[]={"expansion"};
        a3_props_f_exp_infrastructure_traffic[]={"expansion"};
        a3_props_f_exp_military[]={"expansion"};
        a3_props_f_exp_military_camps[]={"expansion"};
        a3_props_f_exp_military_oldplanewrecks[]={"expansion"};
        a3_props_f_exp_naval[]={"expansion"};
        a3_props_f_exp_naval_boats[]={"expansion"};
        a3_props_f_jets[]={"jets"};
        a3_props_f_jets_military_tractor[]={"jets"};
        a3_props_f_jets_military_trolley[]={"jets"};
        a3_props_f_orange[]={"orange"};
        a3_props_f_orange_civilian[]={"orange"};
        a3_props_f_orange_civilian_constructions[]={"orange"};
        a3_props_f_orange_civilian_infoboards[]={"orange"};
        a3_props_f_orange_furniture[]={"orange"};
        a3_props_f_orange_humanitarian[]={"orange"};
        a3_props_f_orange_humanitarian_camps[]={"orange"};
        a3_props_f_orange_humanitarian_garbage[]={"orange"};
        a3_props_f_orange_humanitarian_supplies[]={"orange"};
        a3_props_f_orange_items[]={"orange"};
        a3_props_f_orange_items_decorative[]={"orange"};
        a3_props_f_orange_items_documents[]={"orange"};
        a3_props_f_orange_items_electronics[]={"orange"};
        a3_props_f_orange_items_tools[]={"orange"};
        a3_props_f_tank[]={"tank"};
        a3_props_f_tank_military[]={"tank"};
        a3_props_f_tank_military_tankacc[]={"tank"};
        a3_props_f_tank_military_wrecks[]={"tank"};
        a3_roads_f[]={};
        a3_rocks_f[]={};
        a3_rocks_f_argo[]={"argo"};
        a3_rocks_f_argo_limestone[]={"argo"};
        a3_rocks_f_blunt[]={};
        a3_rocks_f_exp[]={"expansion"};
        a3_rocks_f_exp_cliff[]={"expansion"};
        a3_rocks_f_exp_lavastones[]={"expansion"};
        a3_rocks_f_sharp[]={};
        a3_rocks_f_water[]={};
        a3_signs_f[]={};
        a3_signs_f_ad[]={};
        a3_signs_f_signs_ad[]={};
        a3_soft_f[]={};
        a3_soft_f_beta[]={};
        a3_soft_f_beta_mrap_03[]={};
        a3_soft_f_beta_quadbike[]={};
        a3_soft_f_beta_quadbike_01[]={};
        a3_soft_f_beta_truck_01[]={};
        a3_soft_f_beta_truck_02[]={};
        a3_soft_f_bootcamp[]={};
        a3_soft_f_bootcamp_offroad_01[]={};
        a3_soft_f_bootcamp_quadbike[]={};
        a3_soft_f_bootcamp_quadbike_01[]={};
        a3_soft_f_bootcamp_truck[]={};
        a3_soft_f_bootcamp_van_01[]={};
        a3_soft_f_car[]={};
        a3_soft_f_crusher_ugv[]={};
        a3_soft_f_epc[]={};
        a3_soft_f_epc_truck_03[]={};
        a3_soft_f_exp[]={"expansion"};
        a3_soft_f_exp_lsv_01[]={"expansion"};
        a3_soft_f_exp_lsv_02[]={"expansion"};
        a3_soft_f_exp_mrap_01[]={"expansion"};
        a3_soft_f_exp_mrap_02[]={"expansion"};
        a3_soft_f_exp_offroad_01[]={"expansion"};
        a3_soft_f_exp_offroad_02[]={"expansion"};
        a3_soft_f_exp_quadbike_01[]={"expansion"};
        a3_soft_f_exp_truck_01[]={"expansion"};
        a3_soft_f_exp_truck_03[]={"expansion"};
        a3_soft_f_exp_ugv_01[]={"expansion"};
        a3_soft_f_exp_van_01[]={"expansion"};
        a3_soft_f_gamma[]={};
        a3_soft_f_gamma_hatchback_01[]={};
        a3_soft_f_gamma_hemtt[]={};
        a3_soft_f_gamma_offroad[]={};
        a3_soft_f_gamma_offroad_01[]={};
        a3_soft_f_gamma_quadbike[]={};
        a3_soft_f_gamma_quadbike_01[]={};
        a3_soft_f_gamma_suv_01[]={};
        a3_soft_f_gamma_truck_01[]={};
        a3_soft_f_gamma_truck_02[]={};
        a3_soft_f_gamma_truckheavy[]={};
        a3_soft_f_gamma_van_01[]={};
        a3_soft_f_heli[]={"heli"};
        a3_soft_f_heli_car[]={};
        a3_soft_f_heli_crusher_ugv[]={};
        a3_soft_f_heli_hatchback_01[]={"heli"};
        a3_soft_f_heli_mrap_01[]={"heli"};
        a3_soft_f_heli_mrap_02[]={"heli"};
        a3_soft_f_heli_mrap_03[]={"heli"};
        a3_soft_f_heli_quadbike[]={};
        a3_soft_f_heli_quadbike_01[]={"heli"};
        a3_soft_f_heli_suv[]={};
        a3_soft_f_heli_suv_01[]={"heli"};
        a3_soft_f_heli_truck[]={};
        a3_soft_f_heli_ugv_01[]={"heli"};
        a3_soft_f_heli_van_01[]={"heli"};
        a3_soft_f_hemtt[]={};
        a3_soft_f_kart[]={"kart"};
        a3_soft_f_kart_kart_01[]={"kart"};
        a3_soft_f_mrap_01[]={};
        a3_soft_f_mrap_02[]={};
        a3_soft_f_mrap_03[]={};
        a3_soft_f_offroad_01[]={};
        a3_soft_f_orange[]={"orange"};
        a3_soft_f_orange_offroad_01[]={"orange"};
        a3_soft_f_orange_offroad_02[]={"orange"};
        a3_soft_f_orange_truck_02[]={"orange"};
        a3_soft_f_orange_ugv_01[]={"orange"};
        a3_soft_f_orange_van_02[]={"orange"};
        a3_soft_f_quadbike[]={};
        a3_soft_f_quadbike_01[]={};
        a3_soft_f_suv[]={};
        a3_soft_f_truck[]={};
        a3_soft_f_truckheavy[]={};
        a3_sounds_f[]={};
        a3_sounds_f_arsenal[]={};
        a3_sounds_f_bootcamp[]={};
        a3_sounds_f_characters[]={};
        a3_sounds_f_environment[]={};
        a3_sounds_f_epb[]={};
        a3_sounds_f_epc[]={};
        a3_sounds_f_exp[]={"expansion"};
        a3_sounds_f_exp_a[]={};
        a3_sounds_f_heli[]={"heli"};
        a3_sounds_f_jets[]={"jets"};
        a3_sounds_f_kart[]={"kart"};
        a3_sounds_f_mark[]={"mark"};
        a3_sounds_f_mod[]={};
        a3_sounds_f_orange[]={"orange"};
        a3_sounds_f_patrol[]={"argo"};
        a3_sounds_f_sfx[]={};
        a3_sounds_f_tacops[]={"tacops"};
        a3_sounds_f_tank[]={"tank"};
        a3_sounds_f_vehicles[]={};
        a3_static_f[]={};
        a3_static_f_aa_01[]={};
        a3_static_f_at_01[]={};
        a3_static_f_beta[]={};
        a3_static_f_beta_mortar_01[]={};
        a3_static_f_destroyer[]={"jets"};
        a3_static_f_destroyer_boat_rack_01[]={"jets"};
        a3_static_f_destroyer_ship_gun_01[]={"jets"};
        a3_static_f_destroyer_ship_mrls_01[]={"jets"};
        a3_static_f_exp[]={"expansion"};
        a3_static_f_exp_aa_01[]={"expansion"};
        a3_static_f_exp_at_01[]={"expansion"};
        a3_static_f_exp_gmg_01[]={"expansion"};
        a3_static_f_exp_hmg_01[]={"expansion"};
        a3_static_f_exp_mortar_01[]={"expansion"};
        a3_static_f_gamma[]={};
        a3_static_f_gamma_aa[]={};
        a3_static_f_gamma_at[]={};
        a3_static_f_gamma_mortar_01[]={};
        a3_static_f_jets[]={"jets"};
        a3_static_f_jets_aaa_system_01[]={"jets"};
        a3_static_f_jets_sam_system_01[]={"jets"};
        a3_static_f_jets_sam_system_02[]={"jets"};
        a3_static_f_mark[]={"mark"};
        a3_static_f_mark_designator_01[]={"mark"};
        a3_static_f_mark_designator_02[]={"mark"};
        a3_static_f_mortar_01[]={};
        a3_static_f_sams[]={"jets"};
        a3_static_f_sams_radar_system_01[]={"jets"};
        a3_static_f_sams_radar_system_02[]={"jets"};
        a3_static_f_sams_sam_system_03[]={"jets"};
        a3_static_f_sams_sam_system_04[]={"jets"};
        a3_structures_f[]={};
        a3_structures_f_argo[]={"argo"};
        a3_structures_f_argo_civilian[]={"argo"};
        a3_structures_f_argo_civilian_accessories[]={"argo"};
        a3_structures_f_argo_civilian_addons[]={"argo"};
        a3_structures_f_argo_civilian_garbage[]={"argo"};
        a3_structures_f_argo_civilian_house_big01[]={"argo"};
        a3_structures_f_argo_civilian_house_big02[]={"argo"};
        a3_structures_f_argo_civilian_house_small01[]={"argo"};
        a3_structures_f_argo_civilian_house_small02[]={"argo"};
        a3_structures_f_argo_civilian_stone_house_big_01[]={"argo"};
        a3_structures_f_argo_civilian_stone_shed_01[]={"argo"};
        a3_structures_f_argo_civilian_unfinished_building_01[]={"argo"};
        a3_structures_f_argo_commercial[]={"argo"};
        a3_structures_f_argo_commercial_accessories[]={"argo"};
        a3_structures_f_argo_commercial_billboards[]={"argo"};
        a3_structures_f_argo_commercial_fuelstation_01[]={"argo"};
        a3_structures_f_argo_commercial_shop_02[]={"argo"};
        a3_structures_f_argo_commercial_supermarket_01[]={"argo"};
        a3_structures_f_argo_cultural[]={"argo"};
        a3_structures_f_argo_cultural_church[]={"argo"};
        a3_structures_f_argo_cultural_statues[]={"argo"};
        a3_structures_f_argo_decals[]={"argo"};
        a3_structures_f_argo_decals_horizontal[]={"argo"};
        a3_structures_f_argo_industrial[]={"argo"};
        a3_structures_f_argo_industrial_agriculture[]={"argo"};
        a3_structures_f_argo_industrial_materials[]={"argo"};
        a3_structures_f_argo_infrastructure[]={"argo"};
        a3_structures_f_argo_infrastructure_runways[]={"argo"};
        a3_structures_f_argo_infrastructure_seaports[]={"argo"};
        a3_structures_f_argo_infrastructure_watersupply[]={"argo"};
        a3_structures_f_argo_military[]={"argo"};
        a3_structures_f_argo_military_bunkers[]={"argo"};
        a3_structures_f_argo_military_containerbases[]={"argo"};
        a3_structures_f_argo_military_domes[]={"argo"};
        a3_structures_f_argo_military_fortifications[]={"argo"};
        a3_structures_f_argo_military_turrets[]={"argo"};
        a3_structures_f_argo_signs[]={"argo"};
        a3_structures_f_argo_signs_city[]={"argo"};
        a3_structures_f_argo_signs_directions[]={"argo"};
        a3_structures_f_argo_signs_warnings[]={"argo"};
        a3_structures_f_argo_walls[]={"argo"};
        a3_structures_f_argo_walls_city[]={"argo"};
        a3_structures_f_argo_walls_concrete[]={"argo"};
        a3_structures_f_argo_walls_military[]={"argo"};
        a3_structures_f_argo_walls_net[]={"argo"};
        a3_structures_f_argo_walls_pipe[]={"argo"};
        a3_structures_f_argo_walls_tin[]={"argo"};
        a3_structures_f_argo_walls_wooden[]={"argo"};
        a3_structures_f_argo_wrecks[]={"argo"};
        a3_structures_f_bootcamp[]={};
        a3_structures_f_bootcamp_civ_camping[]={};
        a3_structures_f_bootcamp_civ_sportsgrounds[]={};
        a3_structures_f_bootcamp_ind_cargo[]={};
        a3_structures_f_bootcamp_items_electronics[]={};
        a3_structures_f_bootcamp_items_food[]={};
        a3_structures_f_bootcamp_items_sport[]={};
        a3_structures_f_bootcamp_system[]={};
        a3_structures_f_bootcamp_training[]={};
        a3_structures_f_bootcamp_vr_blocks[]={};
        a3_structures_f_bootcamp_vr_coverobjects[]={};
        a3_structures_f_bootcamp_vr_helpers[]={};
        a3_structures_f_bridges[]={};
        a3_structures_f_civ[]={};
        a3_structures_f_civ_accessories[]={};
        a3_structures_f_civ_ancient[]={};
        a3_structures_f_civ_belltowers[]={};
        a3_structures_f_civ_calvaries[]={};
        a3_structures_f_civ_camping[]={};
        a3_structures_f_civ_chapels[]={};
        a3_structures_f_civ_constructions[]={};
        a3_structures_f_civ_dead[]={};
        a3_structures_f_civ_garbage[]={};
        a3_structures_f_civ_graffiti[]={};
        a3_structures_f_civ_infoboards[]={};
        a3_structures_f_civ_kiosks[]={};
        a3_structures_f_civ_lamps[]={};
        a3_structures_f_civ_market[]={};
        a3_structures_f_civ_offices[]={};
        a3_structures_f_civ_pavements[]={};
        a3_structures_f_civ_playground[]={};
        a3_structures_f_civ_sportsgrounds[]={};
        a3_structures_f_civ_statues[]={};
        a3_structures_f_civ_tourism[]={};
        a3_structures_f_data[]={};
        a3_structures_f_dominants[]={};
        a3_structures_f_dominants_amphitheater[]={};
        a3_structures_f_dominants_castle[]={};
        a3_structures_f_dominants_church[]={};
        a3_structures_f_dominants_hospital[]={};
        a3_structures_f_dominants_lighthouse[]={};
        a3_structures_f_dominants_wip[]={};
        a3_structures_f_epa[]={};
        a3_structures_f_epa_civ_camping[]={};
        a3_structures_f_epa_civ_constructions[]={};
        a3_structures_f_epa_items_electronics[]={};
        a3_structures_f_epa_items_food[]={};
        a3_structures_f_epa_items_medical[]={};
        a3_structures_f_epa_items_tools[]={};
        a3_structures_f_epa_items_vessels[]={};
        a3_structures_f_epa_mil_scrapyard[]={};
        a3_structures_f_epa_walls[]={};
        a3_structures_f_epb[]={};
        a3_structures_f_epb_civ_accessories[]={};
        a3_structures_f_epb_civ_camping[]={};
        a3_structures_f_epb_civ_dead[]={};
        a3_structures_f_epb_civ_garbage[]={};
        a3_structures_f_epb_civ_graffiti[]={};
        a3_structures_f_epb_civ_playground[]={};
        a3_structures_f_epb_furniture[]={};
        a3_structures_f_epb_items_documents[]={};
        a3_structures_f_epb_items_luggage[]={};
        a3_structures_f_epb_items_military[]={};
        a3_structures_f_epb_items_vessels[]={};
        a3_structures_f_epb_naval_fishing[]={};
        a3_structures_f_epc[]={};
        a3_structures_f_epc_civ_accessories[]={};
        a3_structures_f_epc_civ_camping[]={};
        a3_structures_f_epc_civ_garbage[]={};
        a3_structures_f_epc_civ_infoboards[]={};
        a3_structures_f_epc_civ_kiosks[]={};
        a3_structures_f_epc_civ_playground[]={};
        a3_structures_f_epc_civ_tourism[]={};
        a3_structures_f_epc_dominants_ghosthotel[]={};
        a3_structures_f_epc_dominants_stadium[]={};
        a3_structures_f_epc_furniture[]={};
        a3_structures_f_epc_items_documents[]={};
        a3_structures_f_epc_items_electronics[]={};
        a3_structures_f_epc_walls[]={};
        a3_structures_f_exp[]={"expansion"};
        a3_structures_f_exp_a[]={};
        a3_structures_f_exp_a_vr_blocks[]={};
        a3_structures_f_exp_a_vr_helpers[]={};
        a3_structures_f_exp_civilian[]={"expansion"};
        a3_structures_f_exp_civilian_accessories[]={"expansion"};
        a3_structures_f_exp_civilian_garages[]={"expansion"};
        a3_structures_f_exp_civilian_house_big_01[]={"expansion"};
        a3_structures_f_exp_civilian_house_big_02[]={"expansion"};
        a3_structures_f_exp_civilian_house_big_03[]={"expansion"};
        a3_structures_f_exp_civilian_house_big_04[]={"expansion"};
        a3_structures_f_exp_civilian_house_big_05[]={"expansion"};
        a3_structures_f_exp_civilian_house_native_01[]={"expansion"};
        a3_structures_f_exp_civilian_house_native_02[]={"expansion"};
        a3_structures_f_exp_civilian_house_small_01[]={"expansion"};
        a3_structures_f_exp_civilian_house_small_02[]={"expansion"};
        a3_structures_f_exp_civilian_house_small_03[]={"expansion"};
        a3_structures_f_exp_civilian_house_small_04[]={"expansion"};
        a3_structures_f_exp_civilian_house_small_05[]={"expansion"};
        a3_structures_f_exp_civilian_house_small_06[]={"expansion"};
        a3_structures_f_exp_civilian_school_01[]={"expansion"};
        a3_structures_f_exp_civilian_sheds[]={"expansion"};
        a3_structures_f_exp_civilian_slum_01[]={"expansion"};
        a3_structures_f_exp_civilian_slum_02[]={"expansion"};
        a3_structures_f_exp_civilian_slum_03[]={"expansion"};
        a3_structures_f_exp_civilian_slum_04[]={"expansion"};
        a3_structures_f_exp_civilian_slum_05[]={"expansion"};
        a3_structures_f_exp_civilian_sportsgrounds[]={"expansion"};
        a3_structures_f_exp_commercial[]={"expansion"};
        a3_structures_f_exp_commercial_addons[]={"expansion"};
        a3_structures_f_exp_commercial_advertisements[]={"expansion"};
        a3_structures_f_exp_commercial_fuelstation_01[]={"expansion"};
        a3_structures_f_exp_commercial_fuelstation_02[]={"expansion"};
        a3_structures_f_exp_commercial_hotel_01[]={"expansion"};
        a3_structures_f_exp_commercial_hotel_02[]={"expansion"};
        a3_structures_f_exp_commercial_market[]={"expansion"};
        a3_structures_f_exp_commercial_multistorybuilding_01[]={"expansion"};
        a3_structures_f_exp_commercial_multistorybuilding_03[]={"expansion"};
        a3_structures_f_exp_commercial_multistorybuilding_04[]={"expansion"};
        a3_structures_f_exp_commercial_shop_city_01[]={"expansion"};
        a3_structures_f_exp_commercial_shop_city_02[]={"expansion"};
        a3_structures_f_exp_commercial_shop_city_03[]={"expansion"};
        a3_structures_f_exp_commercial_shop_city_04[]={"expansion"};
        a3_structures_f_exp_commercial_shop_city_05[]={"expansion"};
        a3_structures_f_exp_commercial_shop_city_06[]={"expansion"};
        a3_structures_f_exp_commercial_shop_city_07[]={"expansion"};
        a3_structures_f_exp_commercial_shop_town_01[]={"expansion"};
        a3_structures_f_exp_commercial_shop_town_02[]={"expansion"};
        a3_structures_f_exp_commercial_shop_town_03[]={"expansion"};
        a3_structures_f_exp_commercial_shop_town_04[]={"expansion"};
        a3_structures_f_exp_commercial_shop_town_05[]={"expansion"};
        a3_structures_f_exp_commercial_supermarket_01[]={"expansion"};
        a3_structures_f_exp_commercial_warehouses[]={"expansion"};
        a3_structures_f_exp_cultural[]={"expansion"};
        a3_structures_f_exp_cultural_ancientrelics[]={"expansion"};
        a3_structures_f_exp_cultural_basaltruins[]={"expansion"};
        a3_structures_f_exp_cultural_cathedral_01[]={"expansion"};
        a3_structures_f_exp_cultural_cemeteries[]={"expansion"};
        a3_structures_f_exp_cultural_church_01[]={"expansion"};
        a3_structures_f_exp_cultural_church_02[]={"expansion"};
        a3_structures_f_exp_cultural_church_03[]={"expansion"};
        a3_structures_f_exp_cultural_fortress_01[]={"expansion"};
        a3_structures_f_exp_cultural_temple_native_01[]={"expansion"};
        a3_structures_f_exp_cultural_totems[]={"expansion"};
        a3_structures_f_exp_data[]={"expansion"};
        a3_structures_f_exp_industrial[]={"expansion"};
        a3_structures_f_exp_industrial_dieselpowerplant_01[]={"expansion"};
        a3_structures_f_exp_industrial_fields[]={"expansion"};
        a3_structures_f_exp_industrial_materials[]={"expansion"};
        a3_structures_f_exp_industrial_port[]={"expansion"};
        a3_structures_f_exp_industrial_stockyard_01[]={"expansion"};
        a3_structures_f_exp_industrial_sugarcanefactory_01[]={"expansion"};
        a3_structures_f_exp_industrial_surfacemine_01[]={"expansion"};
        a3_structures_f_exp_infrastructure[]={"expansion"};
        a3_structures_f_exp_infrastructure_airports[]={"expansion"};
        a3_structures_f_exp_infrastructure_bridges[]={"expansion"};
        a3_structures_f_exp_infrastructure_pavements[]={"expansion"};
        a3_structures_f_exp_infrastructure_powerlines[]={"expansion"};
        a3_structures_f_exp_infrastructure_railways[]={"expansion"};
        a3_structures_f_exp_infrastructure_roads[]={"expansion"};
        a3_structures_f_exp_infrastructure_runways[]={"expansion"};
        a3_structures_f_exp_infrastructure_watersupply[]={"expansion"};
        a3_structures_f_exp_military[]={"expansion"};
        a3_structures_f_exp_military_barracks_01[]={"expansion"};
        a3_structures_f_exp_military_camonets[]={"expansion"};
        a3_structures_f_exp_military_containerbases[]={"expansion"};
        a3_structures_f_exp_military_emplacements[]={"expansion"};
        a3_structures_f_exp_military_flags[]={"expansion"};
        a3_structures_f_exp_military_fortifications[]={"expansion"};
        a3_structures_f_exp_military_pillboxes[]={"expansion"};
        a3_structures_f_exp_military_trenches[]={"expansion"};
        a3_structures_f_exp_naval[]={"expansion"};
        a3_structures_f_exp_naval_canals[]={"expansion"};
        a3_structures_f_exp_naval_piers[]={"expansion"};
        a3_structures_f_exp_signs[]={"expansion"};
        a3_structures_f_exp_signs_companies[]={"expansion"};
        a3_structures_f_exp_signs_traffic[]={"expansion"};
        a3_structures_f_exp_walls[]={"expansion"};
        a3_structures_f_exp_walls_backalleys[]={"expansion"};
        a3_structures_f_exp_walls_bamboo[]={"expansion"};
        a3_structures_f_exp_walls_concrete[]={"expansion"};
        a3_structures_f_exp_walls_crashbarriers[]={"expansion"};
        a3_structures_f_exp_walls_hedges[]={"expansion"};
        a3_structures_f_exp_walls_net[]={"expansion"};
        a3_structures_f_exp_walls_pipe[]={"expansion"};
        a3_structures_f_exp_walls_polewalls[]={"expansion"};
        a3_structures_f_exp_walls_railings[]={"expansion"};
        a3_structures_f_exp_walls_slum[]={"expansion"};
        a3_structures_f_exp_walls_stone[]={"expansion"};
        a3_structures_f_exp_walls_tin[]={"expansion"};
        a3_structures_f_exp_walls_wired[]={"expansion"};
        a3_structures_f_exp_walls_wooden[]={"expansion"};
        a3_structures_f_furniture[]={};
        a3_structures_f_heli[]={"heli"};
        a3_structures_f_heli_civ_accessories[]={"heli"};
        a3_structures_f_heli_civ_constructions[]={"heli"};
        a3_structures_f_heli_civ_garbage[]={"heli"};
        a3_structures_f_heli_civ_market[]={"heli"};
        a3_structures_f_heli_furniture[]={"heli"};
        a3_structures_f_heli_ind_airport[]={"heli"};
        a3_structures_f_heli_ind_cargo[]={"heli"};
        a3_structures_f_heli_ind_machines[]={"heli"};
        a3_structures_f_heli_items_airport[]={"heli"};
        a3_structures_f_heli_items_electronics[]={"heli"};
        a3_structures_f_heli_items_food[]={"heli"};
        a3_structures_f_heli_items_luggage[]={"heli"};
        a3_structures_f_heli_items_sport[]={"heli"};
        a3_structures_f_heli_items_tools[]={"heli"};
        a3_structures_f_heli_vr_helpers[]={"heli"};
        a3_structures_f_households[]={};
        a3_structures_f_households_addons[]={};
        a3_structures_f_households_house_big01[]={};
        a3_structures_f_households_house_big02[]={};
        a3_structures_f_households_house_shop01[]={};
        a3_structures_f_households_house_shop02[]={};
        a3_structures_f_households_house_small01[]={};
        a3_structures_f_households_house_small02[]={};
        a3_structures_f_households_house_small03[]={};
        a3_structures_f_households_slum[]={};
        a3_structures_f_households_stone_big[]={};
        a3_structures_f_households_stone_shed[]={};
        a3_structures_f_households_stone_small[]={};
        a3_structures_f_households_wip[]={};
        a3_structures_f_ind[]={};
        a3_structures_f_ind_airport[]={};
        a3_structures_f_ind_cargo[]={};
        a3_structures_f_ind_carservice[]={};
        a3_structures_f_ind_concretemixingplant[]={};
        a3_structures_f_ind_crane[]={};
        a3_structures_f_ind_dieselpowerplant[]={};
        a3_structures_f_ind_factory[]={};
        a3_structures_f_ind_fuelstation[]={};
        a3_structures_f_ind_fuelstation_small[]={};
        a3_structures_f_ind_pipes[]={};
        a3_structures_f_ind_powerlines[]={};
        a3_structures_f_ind_reservoirtank[]={};
        a3_structures_f_ind_shed[]={};
        a3_structures_f_ind_solarpowerplant[]={};
        a3_structures_f_ind_tank[]={};
        a3_structures_f_ind_transmitter_tower[]={};
        a3_structures_f_ind_wavepowerplant[]={};
        a3_structures_f_ind_windmill[]={};
        a3_structures_f_ind_windpowerplant[]={};
        a3_structures_f_items[]={};
        a3_structures_f_items_cans[]={};
        a3_structures_f_items_documents[]={};
        a3_structures_f_items_electronics[]={};
        a3_structures_f_items_food[]={};
        a3_structures_f_items_gadgets[]={};
        a3_structures_f_items_luggage[]={};
        a3_structures_f_items_medical[]={};
        a3_structures_f_items_military[]={};
        a3_structures_f_items_stationery[]={};
        a3_structures_f_items_tools[]={};
        a3_structures_f_items_valuables[]={};
        a3_structures_f_items_vessels[]={};
        a3_structures_f_kart[]={"kart"};
        a3_structures_f_kart_civ_sportsgrounds[]={"kart"};
        a3_structures_f_kart_mil_flags[]={"kart"};
        a3_structures_f_kart_signs_companies[]={"kart"};
        a3_structures_f_mark[]={"mark"};
        a3_structures_f_mark_items_military[]={"mark"};
        a3_structures_f_mark_items_sport[]={"mark"};
        a3_structures_f_mark_mil_flags[]={"mark"};
        a3_structures_f_mark_training[]={"mark"};
        a3_structures_f_mark_vr_helpers[]={"mark"};
        a3_structures_f_mark_vr_shapes[]={"mark"};
        a3_structures_f_mark_vr_targets[]={"mark"};
        a3_structures_f_mil[]={};
        a3_structures_f_mil_bagbunker[]={};
        a3_structures_f_mil_bagfence[]={};
        a3_structures_f_mil_barracks[]={};
        a3_structures_f_mil_bunker[]={};
        a3_structures_f_mil_cargo[]={};
        a3_structures_f_mil_flags[]={};
        a3_structures_f_mil_fortification[]={};
        a3_structures_f_mil_helipads[]={};
        a3_structures_f_mil_offices[]={};
        a3_structures_f_mil_radar[]={};
        a3_structures_f_mil_scrapyard[]={};
        a3_structures_f_mil_shelters[]={};
        a3_structures_f_mil_tenthangar[]={};
        a3_structures_f_naval[]={};
        a3_structures_f_naval_buoys[]={};
        a3_structures_f_naval_fishing[]={};
        a3_structures_f_naval_piers[]={};
        a3_structures_f_naval_rowboats[]={};
        a3_structures_f_orange[]={"orange"};
        a3_structures_f_orange_humanitarian[]={"orange"};
        a3_structures_f_orange_humanitarian_camps[]={"orange"};
        a3_structures_f_orange_humanitarian_flags[]={"orange"};
        a3_structures_f_orange_industrial[]={"orange"};
        a3_structures_f_orange_industrial_cargo[]={"orange"};
        a3_structures_f_orange_signs[]={"orange"};
        a3_structures_f_orange_signs_mines[]={"orange"};
        a3_structures_f_orange_signs_special[]={"orange"};
        a3_structures_f_orange_vr_helpers[]={"orange"};
        a3_structures_f_orange_walls[]={"orange"};
        a3_structures_f_orange_walls_plastic[]={"orange"};
        a3_structures_f_research[]={};
        a3_structures_f_signs_companies[]={};
        a3_structures_f_system[]={};
        a3_structures_f_tank[]={"tank"};
        a3_structures_f_tank_decals[]={"tank"};
        a3_structures_f_tank_decals_horizontal[]={"tank"};
        a3_structures_f_tank_military[]={"tank"};
        a3_structures_f_tank_military_fortifications[]={"tank"};
        a3_structures_f_tank_military_repairdepot[]={"tank"};
        a3_structures_f_training[]={};
        a3_structures_f_training_invisibletarget[]={};
        a3_structures_f_walls[]={};
        a3_structures_f_wrecks[]={};
        a3_supplies_f_exp[]={"expansion"};
        a3_supplies_f_exp_ammoboxes[]={"expansion"};
        a3_supplies_f_heli[]={"heli"};
        a3_supplies_f_heli_bladders[]={"heli"};
        a3_supplies_f_heli_cargonets[]={"heli"};
        a3_supplies_f_heli_fuel[]={"heli"};
        a3_supplies_f_heli_slingload[]={"heli"};
        a3_supplies_f_mark[]={"mark"};
        a3_supplies_f_orange[]={"orange"};
        a3_supplies_f_orange_ammoboxes[]={"orange"};
        a3_supplies_f_orange_bags[]={"orange"};
        a3_supplies_f_orange_cargonets[]={"orange"};
        a3_uav_f_characters_f_gamma[]={};
        a3_uav_f_weapons_f_gamma_ammoboxes[]={};
        a3_ui_f[]={};
        a3_ui_f_bootcamp[]={};
        a3_ui_f_curator[]={"curator"};
        a3_ui_f_data[]={};
        a3_ui_f_exp[]={"expansion"};
        a3_ui_f_exp_a[]={};
        a3_ui_f_heli[]={"heli"};
        a3_ui_f_jets[]={"jets"};
        a3_ui_f_kart[]={"kart"};
        a3_ui_f_mark[]={"mark"};
        a3_ui_f_mp_mark[]={"mark"};
        a3_ui_f_orange[]={"orange"};
        a3_ui_f_patrol[]={"argo"};
        a3_ui_f_tacops[]={"tacops"};
        a3_ui_f_tank[]={"tank"};
        a3_uifonts_f[]={};
        a3_vegetation_f_argo[]={"argo"};
        a3_vegetation_f_exp[]={"expansion"};
        a3_weapons_f[]={};
        a3_weapons_f_aaf[]={};
        a3_weapons_f_acc[]={};
        a3_weapons_f_ammoboxes[]={};
        a3_weapons_f_beta[]={};
        a3_weapons_f_beta_acc[]={};
        a3_weapons_f_beta_ammoboxes[]={};
        a3_weapons_f_beta_ebr[]={};
        a3_weapons_f_beta_longrangerifles_ebr[]={};
        a3_weapons_f_beta_longrangerifles_gm6[]={};
        a3_weapons_f_beta_longrangerifles_m320[]={};
        a3_weapons_f_beta_rifles_khaybar[]={};
        a3_weapons_f_beta_rifles_mx[]={};
        a3_weapons_f_beta_rifles_trg20[]={};
        a3_weapons_f_bootcamp[]={};
        a3_weapons_f_bootcamp_ammoboxes[]={};
        a3_weapons_f_bootcamp_longrangerifles_gm6[]={};
        a3_weapons_f_bootcamp_longrangerifles_gm6_camo[]={};
        a3_weapons_f_bootcamp_longrangerifles_m320[]={};
        a3_weapons_f_bootcamp_longrangerifles_m320_camo[]={};
        a3_weapons_f_csat[]={};
        a3_weapons_f_destroyer[]={"jets"};
        a3_weapons_f_dummyweapons[]={};
        a3_weapons_f_ebr[]={};
        a3_weapons_f_epa[]={};
        a3_weapons_f_epa_acc[]={};
        a3_weapons_f_epa_ammoboxes[]={};
        a3_weapons_f_epa_ebr[]={};
        a3_weapons_f_epa_longrangerifles_dmr_01[]={};
        a3_weapons_f_epa_longrangerifles_gm6[]={};
        a3_weapons_f_epa_rifles_mx[]={};
        a3_weapons_f_epb[]={};
        a3_weapons_f_epb_acc[]={};
        a3_weapons_f_epb_ammoboxes[]={};
        a3_weapons_f_epb_longrangerifles_gm3[]={};
        a3_weapons_f_epb_longrangerifles_gm6[]={};
        a3_weapons_f_epb_longrangerifles_m320[]={};
        a3_weapons_f_epb_rifles_mx_black[]={};
        a3_weapons_f_epc[]={};
        a3_weapons_f_exp[]={"expansion"};
        a3_weapons_f_exp_launchers_rpg32[]={"expansion"};
        a3_weapons_f_exp_launchers_rpg7[]={"expansion"};
        a3_weapons_f_exp_launchers_titan[]={"expansion"};
        a3_weapons_f_exp_longrangerifles_dmr_07[]={"expansion"};
        a3_weapons_f_exp_machineguns_lmg_03[]={"expansion"};
        a3_weapons_f_exp_pistols_pistol_01[]={"expansion"};
        a3_weapons_f_exp_rifles_ak12[]={"expansion"};
        a3_weapons_f_exp_rifles_akm[]={"expansion"};
        a3_weapons_f_exp_rifles_aks[]={"expansion"};
        a3_weapons_f_exp_rifles_arx[]={"expansion"};
        a3_weapons_f_exp_rifles_ctar[]={"expansion"};
        a3_weapons_f_exp_rifles_ctars[]={"expansion"};
        a3_weapons_f_exp_rifles_spar_01[]={"expansion"};
        a3_weapons_f_exp_rifles_spar_02[]={"expansion"};
        a3_weapons_f_exp_rifles_spar_03[]={"expansion"};
        a3_weapons_f_exp_smgs_smg_05[]={"expansion"};
        a3_weapons_f_explosives[]={};
        a3_weapons_f_fia[]={};
        a3_weapons_f_gamma[]={};
        a3_weapons_f_gamma_acc[]={};
        a3_weapons_f_gamma_ammoboxes[]={};
        a3_weapons_f_gamma_items[]={};
        a3_weapons_f_gamma_longrangerifles_ebr[]={};
        a3_weapons_f_gamma_rifles_mx[]={};
        a3_weapons_f_headgear[]={};
        a3_weapons_f_itemholders[]={};
        a3_weapons_f_items[]={};
        a3_weapons_f_jets[]={"jets"};
        a3_weapons_f_kart[]={"kart"};
        a3_weapons_f_kart_pistols_pistol_signal_f[]={"kart"};
        a3_weapons_f_launchers_law[]={};
        a3_weapons_f_launchers_nlaw[]={};
        a3_weapons_f_launchers_rpg32[]={};
        a3_weapons_f_launchers_titan[]={};
        a3_weapons_f_longrangerifles_dmr_01[]={};
        a3_weapons_f_longrangerifles_ebr[]={};
        a3_weapons_f_longrangerifles_gm6[]={};
        a3_weapons_f_longrangerifles_m320[]={};
        a3_weapons_f_machineguns_m200[]={};
        a3_weapons_f_machineguns_zafir[]={};
        a3_weapons_f_mark[]={"mark"};
        a3_weapons_f_mark_acc[]={"mark"};
        a3_weapons_f_mark_ebr[]={};
        a3_weapons_f_mark_longrangerifles_dmr_01[]={"mark"};
        a3_weapons_f_mark_longrangerifles_dmr_02[]={"mark"};
        a3_weapons_f_mark_longrangerifles_dmr_03[]={"mark"};
        a3_weapons_f_mark_longrangerifles_dmr_04[]={"mark"};
        a3_weapons_f_mark_longrangerifles_dmr_05[]={"mark"};
        a3_weapons_f_mark_longrangerifles_dmr_06[]={"mark"};
        a3_weapons_f_mark_longrangerifles_ebr[]={"mark"};
        a3_weapons_f_mark_longrangerifles_gm6[]={"mark"};
        a3_weapons_f_mark_longrangerifles_gm6_camo[]={"mark"};
        a3_weapons_f_mark_longrangerifles_m320[]={"mark"};
        a3_weapons_f_mark_longrangerifles_m320_camo[]={"mark"};
        a3_weapons_f_mark_machineguns_m200[]={"mark"};
        a3_weapons_f_mark_machineguns_mmg_01[]={"mark"};
        a3_weapons_f_mark_machineguns_mmg_02[]={"mark"};
        a3_weapons_f_mark_machineguns_zafir[]={"mark"};
        a3_weapons_f_mark_rifles_khaybar[]={"mark"};
        a3_weapons_f_mark_rifles_mk20[]={"mark"};
        a3_weapons_f_mark_rifles_mx[]={"mark"};
        a3_weapons_f_mark_rifles_sdar[]={"mark"};
        a3_weapons_f_mark_rifles_trg20[]={"mark"};
        a3_weapons_f_mod[]={};
        a3_weapons_f_mod_smgs_smg_03[]={};
        a3_weapons_f_nato[]={};
        a3_weapons_f_orange[]={"orange"};
        a3_weapons_f_orange_explosives[]={"orange"};
        a3_weapons_f_orange_items[]={"orange"};
        a3_weapons_f_patrol[]={"argo"};
        a3_weapons_f_pistols_acpc2[]={};
        a3_weapons_f_pistols_p07[]={};
        a3_weapons_f_pistols_pdw2000[]={};
        a3_weapons_f_pistols_pistol_heavy_01[]={};
        a3_weapons_f_pistols_pistol_heavy_02[]={};
        a3_weapons_f_pistols_rook40[]={};
        a3_weapons_f_rifles_khaybar[]={};
        a3_weapons_f_rifles_mk20[]={};
        a3_weapons_f_rifles_mx[]={};
        a3_weapons_f_rifles_mx_black[]={};
        a3_weapons_f_rifles_sdar[]={};
        a3_weapons_f_rifles_smg_02[]={};
        a3_weapons_f_rifles_trg20[]={};
        a3_weapons_f_rifles_vector[]={};
        a3_weapons_f_sams[]={"jets"};
        a3_weapons_f_smgs_pdw2000[]={};
        a3_weapons_f_smgs_smg_01[]={};
        a3_weapons_f_smgs_smg_02[]={};
        a3_weapons_f_tank[]={"tank"};
        a3_weapons_f_tank_bags[]={"tank"};
        a3_weapons_f_tank_launchers_mraws[]={"tank"};
        a3_weapons_f_tank_launchers_vorona[]={"tank"};
        a3_weapons_f_uniforms[]={};
        a3_weapons_f_vests[]={};
        a3data[]={};
        core[]={};
        curatoronly_air_f_beta_heli_attack_01[]={};
        curatoronly_air_f_beta_heli_attack_02[]={};
        curatoronly_air_f_gamma_uav_01[]={};
        curatoronly_armor_f_amv[]={};
        curatoronly_armor_f_beta_apc_tracked_02[]={};
        curatoronly_armor_f_marid[]={};
        curatoronly_armor_f_panther[]={};
        curatoronly_armor_f_slammer[]={};
        curatoronly_armor_f_t100k[]={};
        curatoronly_boat_f_boat_armed_01[]={};
        curatoronly_characters_f_blufor[]={};
        curatoronly_characters_f_common[]={};
        curatoronly_characters_f_opfor[]={};
        curatoronly_modules_f_curator_animals[]={};
        curatoronly_modules_f_curator_chemlights[]={};
        curatoronly_modules_f_curator_effects[]={};
        curatoronly_modules_f_curator_environment[]={};
        curatoronly_modules_f_curator_flares[]={};
        curatoronly_modules_f_curator_lightning[]={};
        curatoronly_modules_f_curator_mines[]={};
        curatoronly_modules_f_curator_objectives[]={};
        curatoronly_modules_f_curator_ordnance[]={};
        curatoronly_modules_f_curator_smokeshells[]={};
        curatoronly_signs_f[]={};
        curatoronly_soft_f_crusher_ugv[]={};
        curatoronly_soft_f_mrap_01[]={};
        curatoronly_soft_f_mrap_02[]={};
        curatoronly_soft_f_quadbike[]={};
        curatoronly_static_f_gamma[]={};
        curatoronly_static_f_mortar_01[]={};
        curatoronly_structures_f_civ_ancient[]={};
        curatoronly_structures_f_civ_camping[]={};
        curatoronly_structures_f_civ_garbage[]={};
        curatoronly_structures_f_epa_civ_constructions[]={};
        curatoronly_structures_f_epb_civ_dead[]={};
        curatoronly_structures_f_ind_cargo[]={};
        curatoronly_structures_f_ind_crane[]={};
        curatoronly_structures_f_ind_reservoirtank[]={};
        curatoronly_structures_f_ind_transmitter_tower[]={};
        curatoronly_structures_f_items_vessels[]={};
        curatoronly_structures_f_mil_bagbunker[]={};
        curatoronly_structures_f_mil_bagfence[]={};
        curatoronly_structures_f_mil_cargo[]={};
        curatoronly_structures_f_mil_fortification[]={};
        curatoronly_structures_f_mil_radar[]={};
        curatoronly_structures_f_mil_shelters[]={};
        curatoronly_structures_f_research[]={};
        curatoronly_structures_f_walls[]={};
        curatoronly_structures_f_wrecks[]={};
        map_vr[]={};
    };
	//out=[];{_t=str(configSourceModList _x apply{tolower _x});_t=_t select[1,count _t-2];out pushbackunique("    " + tolower(configname _x)+'[]={'+_t+'};'+endl)}foreach('true'configClasses(configFile>>'CfgPatches'));out sort true;out=['class GAP{'+endl]+out;out pushback '};';copytoclipboard(out joinstring '');
	class OAP{
		cau_discordrichpresence[]={"@discord rich presence"};
		cau_expansion_core[]={"@connorau expansion mod"};cau_expansion_markers__0[]={"@connorau expansion mod"};cau_expansion_markers__0_0[]={"@connorau expansion mod"};cau_expansion_textures__0[]={"@connorau expansion mod"};cau_expansion_textures__0_0[]={"@connorau expansion mod"};cau_expansion_textures__1[]={"@connorau expansion mod"};cau_expansion_textures__1_0[]={"@connorau expansion mod"};cau_expansion_textures__1_1[]={"@connorau expansion mod"};cau_expansion_textures__1_2[]={"@connorau expansion mod"};cau_expansion_textures__1_3[]={"@connorau expansion mod"};cau_expansion_textures__1_4[]={"@connorau expansion mod"};cau_expansion_textures__2[]={"@connorau expansion mod"};cau_expansion_textures__2_0[]={"@connorau expansion mod"};cau_expansion_textures__2_1[]={"@connorau expansion mod"};cau_expansion_textures__3[]={"@connorau expansion mod"};cau_expansion_textures__3_0[]={"@connorau expansion mod"};cau_expansion_textures__3_1[]={"@connorau expansion mod"};cau_expansion_textures__4[]={"@connorau expansion mod"};cau_expansion_textures__4_0[]={"@connorau expansion mod"};cau_expansion_textures__4_10[]={"@connorau expansion mod"};cau_expansion_textures__4_11[]={"@connorau expansion mod"};cau_expansion_textures__4_12[]={"@connorau expansion mod"};cau_expansion_textures__4_13[]={"@connorau expansion mod"};cau_expansion_textures__4_14[]={"@connorau expansion mod"};cau_expansion_textures__4_15[]={"@connorau expansion mod"};cau_expansion_textures__4_16[]={"@connorau expansion mod"};cau_expansion_textures__4_17[]={"@connorau expansion mod"};cau_expansion_textures__4_18[]={"@connorau expansion mod"};cau_expansion_textures__4_19[]={"@connorau expansion mod"};cau_expansion_textures__4_1[]={"@connorau expansion mod"};cau_expansion_textures__4_20[]={"@connorau expansion mod"};cau_expansion_textures__4_21[]={"@connorau expansion mod"};cau_expansion_textures__4_22[]={"@connorau expansion mod"};cau_expansion_textures__4_23[]={"@connorau expansion mod"};cau_expansion_textures__4_24[]={"@connorau expansion mod"};cau_expansion_textures__4_25[]={"@connorau expansion mod"};cau_expansion_textures__4_2[]={"@connorau expansion mod"};cau_expansion_textures__4_3[]={"@connorau expansion mod"};cau_expansion_textures__4_4[]={"@connorau expansion mod"};cau_expansion_textures__4_5[]={"@connorau expansion mod"};cau_expansion_textures__4_6[]={"@connorau expansion mod"};cau_expansion_textures__4_7[]={"@connorau expansion mod"};cau_expansion_textures__4_8[]={"@connorau expansion mod"};cau_expansion_textures__4_9[]={"@connorau expansion mod"};
		jsrs_soundmod_bullethits[]={"@jsrs soundmod"};jsrs_soundmod_environment[]={"@jsrs soundmod"};jsrs_soundmod_explosions[]={"@jsrs soundmod"};jsrs_soundmod_framework[]={"@jsrs soundmod"};jsrs_soundmod_helicopters[]={"@jsrs soundmod"};jsrs_soundmod_landvehicles[]={"@jsrs soundmod"};jsrs_soundmod_movement[]={"@jsrs soundmod"};jsrs_soundmod_snd_air_vehicles[]={"@jsrs soundmod"};jsrs_soundmod_snd_environment[]={"@jsrs soundmod"};jsrs_soundmod_snd_land_vehicles[]={"@jsrs soundmod"};jsrs_soundmod_snd_movement[]={"@jsrs soundmod"};jsrs_soundmod_snd_warfare[]={"@jsrs soundmod"};jsrs_soundmod_snd_weapons[]={"@jsrs soundmod"};jsrs_soundmod_sonic_cracks[]={"@jsrs soundmod"};jsrs_soundmod_weapons[]={"@jsrs soundmod"};
        blastcore_maincore[]={"@blastcore edited (standalone version)"};blastcore_vep[]={"@blastcore edited (standalone version)"};warfxpe[]={"@blastcore edited (standalone version)"};
	};
	//_i=[[],["expansion"],["heli"],["jets"],["orange"],["kart"],["mark"],["argo"],["tacops"],["curator"],["expansion","orange"],['tank']];out=[];{if !((configSourceModList _x apply{tolower _x})in _i)then{_t=str(configSourceModList _x apply{tolower _x});_t=_t select[1,count _t-2];out pushbackunique(tolower(configname _x)+'[]={'+_t+'};')};}foreach('true'configClasses(configFile>>'CfgPatches'));out sort true;out=['class OAP{']+out;out pushback '};';copytoclipboard(out joinstring '');
	PAP[]={"a3_air_f_rtd","a3_dubbing_f_patrol","a3_editorpreviews_f_patrol","a3_music_f_patrol","jpex_mx","jsrs_rhs_soundmod_hk416","jsrs_rhs_soundmod_kar98k","jsrs_rhs_soundmod_m16a4","jsrs_rhs_soundmod_m32","jsrs_rhs_soundmod_m4","jsrs_rhs_soundmod_m590","jsrs_rhs_soundmod_mosin","jsrs_soundmod_120mm_cannon","jsrs_soundmod_155mm_amos","jsrs_soundmod_230mm_titan","jsrs_soundmod_2s9_sorcher","jsrs_soundmod_30mm_cannon","jsrs_soundmod_35mm_autocannon","jsrs_soundmod_4five45","jsrs_soundmod_acpc","jsrs_soundmod_ad97","jsrs_soundmod_afv4_gorgon","jsrs_soundmod_ah99_blackfoot","jsrs_soundmod_ah9_pawnee","jsrs_soundmod_air_weapons","jsrs_soundmod_ak103_rhs","jsrs_soundmod_ak12","jsrs_soundmod_ak74","jsrs_soundmod_ak74u","jsrs_soundmod_akm","jsrs_soundmod_akm_rhs","jsrs_soundmod_aks","jsrs_soundmod_amv7_marshal","jsrs_soundmod_armed_boat","jsrs_soundmod_asp1","jsrs_soundmod_asval","jsrs_soundmod_btrk_kamysh","jsrs_soundmod_cannon_30mm_plane_cas_02","jsrs_soundmod_cas_plane1","jsrs_soundmod_cas_plane2","jsrs_soundmod_ch49_mohawk","jsrs_soundmod_ch67_huron","jsrs_soundmod_cmr","jsrs_soundmod_ctar","jsrs_soundmod_ctws_autocannon","jsrs_soundmod_cyrus","jsrs_soundmod_dagr","jsrs_soundmod_dar","jsrs_soundmod_ebr","jsrs_soundmod_fighterplane3","jsrs_soundmod_fv720_mora","jsrs_soundmod_g36","jsrs_soundmod_gatling_30mm_plane_cas_01","jsrs_soundmod_gatling_weapons","jsrs_soundmod_globalfilters","jsrs_soundmod_glock17","jsrs_soundmod_gmg20","jsrs_soundmod_gmg40","jsrs_soundmod_hatchback","jsrs_soundmod_hmgs","jsrs_soundmod_hunter","jsrs_soundmod_ifrit","jsrs_soundmod_ifv6a_cheetah","jsrs_soundmod_ifv6c_panther","jsrs_soundmod_katiba","jsrs_soundmod_kh3a_fenghuan","jsrs_soundmod_lim85","jsrs_soundmod_lmgcoax","jsrs_soundmod_lmgrcws","jsrs_soundmod_m107","jsrs_soundmod_m1911","jsrs_soundmod_m200","jsrs_soundmod_m21","jsrs_soundmod_m240","jsrs_soundmod_m249","jsrs_soundmod_m2a1_slammer","jsrs_soundmod_m320r","jsrs_soundmod_m4_scorcher","jsrs_soundmod_m5_sandstorm","jsrs_soundmod_m6","jsrs_soundmod_m70","jsrs_soundmod_m76","jsrs_soundmod_m84","jsrs_soundmod_mar10","jsrs_soundmod_mb4wd","jsrs_soundmod_mbt52_kuma","jsrs_soundmod_mi290_taru","jsrs_soundmod_mi48_kajman","jsrs_soundmod_mk11","jsrs_soundmod_mk14","jsrs_soundmod_mk1emr","jsrs_soundmod_mk20","jsrs_soundmod_mortar","jsrs_soundmod_movement_apex","jsrs_soundmod_mq12_falcon","jsrs_soundmod_mse3_marid","jsrs_soundmod_mx2010","jsrs_soundmod_navid","jsrs_soundmod_offroad","jsrs_soundmod_p07","jsrs_soundmod_pcml","jsrs_soundmod_pdw","jsrs_soundmod_pkm","jsrs_soundmod_pm9m","jsrs_soundmod_po30_orca","jsrs_soundmod_pp2000","jsrs_soundmod_protector","jsrs_soundmod_prowler","jsrs_soundmod_quadbike","jsrs_soundmod_rahim","jsrs_soundmod_reloadingsounds","jsrs_soundmod_reloadingsoundsad97","jsrs_soundmod_reloadingsoundsapex","jsrs_soundmod_rook40","jsrs_soundmod_rpg32","jsrs_soundmod_rpg7v","jsrs_soundmod_rubber_boat","jsrs_soundmod_scorpian","jsrs_soundmod_sdar","jsrs_soundmod_skalpel_atgm","jsrs_soundmod_skyfire","jsrs_soundmod_spar16","jsrs_soundmod_speed_boat","jsrs_soundmod_spmg","jsrs_soundmod_sr25","jsrs_soundmod_strider","jsrs_soundmod_suv","jsrs_soundmod_svd","jsrs_soundmod_t100_varsuk","jsrs_soundmod_titan_mprl","jsrs_soundmod_trg20","jsrs_soundmod_truck1","jsrs_soundmod_truck2","jsrs_soundmod_truck3","jsrs_soundmod_type115","jsrs_soundmod_uav_1","jsrs_soundmod_uav_2","jsrs_soundmod_ugl","jsrs_soundmod_uh80_ghosthawk","jsrs_soundmod_v44x_blackfish","jsrs_soundmod_van","jsrs_soundmod_vector","jsrs_soundmod_veh_titan","jsrs_soundmod_wy55_hellcat","jsrs_soundmod_y32_xian","jsrs_soundmod_zafir","jsrs_soundmod_zsu39_tigris","jsrs_soundmod_zubr45","jsrs_soundmod_khaybar","jsrs_soundmod_fs2000","jsrs_soundmod_trg21","jsrs_soundmod_spar","jsrs_soundmod_ad97_mod_support","jsrs_soundmod_apcs","jsrs_soundmod_cars","jsrs_soundmod_tanks","jsrs_soundmod_trucks","a3_armor_f_aegis_apc_tracked_01","a3_armor_f_aegis_apc_wheeled_01","a3_characters_f_aegis","a3_characters_f_aegis_facewear","a3_characters_f_aegis_headgear","a3_characters_f_aegis_uniforms","a3_characters_f_aegis_vests","a3_soft_f_aegis_truck_02","a3_static_f_aegis_hmg_01","a3_structures_f_aegis_military_fortifications","a3_weapons_f_aegis","a3_weapons_f_aegis_pistols_pistol_heavy_01","a3_weapons_f_aegis_pistols_rook40","jsrs_soundmod_cas_plane1","jsrs_soundmod_uavs","jsrs_soundmod_vtols","asr_ai3_cfgcamouflage","asr_ai3_cfgvehicles","Blastcore_Extended_Fire","jsrs_soundmod_rhs_usf_vehicles","jsrs_soundmod_specialist_military_arms_weapons","jsrs_soundmod_rhs_afrf_weapons","jsrs_soundmod_rhs_usf_weapons","jsrs_soundmod_rhs_aaf_gref_weapons","jsrs_soundmod_niarms_arsenal_weapons","jsrs_soundmod_rhs_afrf_vehicles","jsrs_soundmod_cup_weapons","CALanguage_missions"};

// function addons, mods and directories
    class GFD {
        class A3 {
            class Actions {
                class packStaticWeapon {
                    f[]={"A3\functions_f\Actions\fn_packStaticWeapon.sqf",5154};
                    a[]={"a3_functions_f"};
                };
                class unpackStaticWeapon {
                    f[]={"A3\functions_f\Actions\fn_unpackStaticWeapon.sqf",4956};
                    a[]={"a3_functions_f"};
                };
            };
            class Ambient {
                class ambientFlyby {
                    f[]={"A3\functions_f\ambient\fn_ambientFlyby.sqf",1703};
                };
                class ambientAnim {
                    f[]={"A3\functions_f\ambient\fn_ambientAnim.sqf",10300};
                    a[]={"a3_functions_f"};
                };
                class ambientAnimCombat {
                    f[]={"A3\functions_f\ambient\fn_ambientAnimCombat.sqf",1884};
                    a[]={"a3_functions_f"};
                };
                class ambientAnimGetParams {
                    f[]={"A3\functions_f\ambient\fn_ambientAnimGetParams.sqf",7956};
                };
                class animalBehaviour {
                    f[]={"A3\functions_f\ambient\fn_animalBehaviour.sqf",13857};
                    a[]={"a3_functions_f"};
                };
                class animalRandomization {
                    f[]={"A3\functions_f\ambient\fn_animalRandomization.sqf",2920};
                };
            };
            class Arrays {
                class sortBy {
                    f[]={"A3\functions_f\Arrays\fn_sortBy.sqf",998};
                    a[]={"a3_functions_f"};
                };
                class arrayShuffle {
                    f[]={"A3\functions_f\Arrays\fn_arrayShuffle.sqf",306};
                };
                class updatePlayerArray {
                    f[]={"A3\functions_f\Arrays\fn_updatePlayerArray.sqf",396};
                };
                class consolidateArray {
                    f[]={"A3\functions_f\Arrays\fn_consolidateArray.sqf",393};
                };
                class findInPairs {
                    f[]={"A3\functions_f\Arrays\fn_findInPairs.sqf",401};
                };
                class getFromPairs {
                    f[]={"A3\functions_f\Arrays\fn_getFromPairs.sqf",429};
                };
                class addToPairs {
                    f[]={"A3\functions_f\Arrays\fn_addToPairs.sqf",899};
                };
                class removeFromPairs {
                    f[]={"A3\functions_f\Arrays\fn_removeFromPairs.sqf",460};
                };
                class setToPairs {
                    f[]={"A3\functions_f\Arrays\fn_setToPairs.sqf",525};
                };
                class sortAlphabetically {
                    f[]={"A3\functions_f\Arrays\fn_sortAlphabetically.sqf",184};
                };
                class findAllNestedElements {
                    f[]={"A3\functions_f\Arrays\fn_findAllNestedElements.sqf",719};
                };
                class priorityQueue_Init {
                    f[]={"A3\functions_f\Arrays\fn_priorityQueue_Init.sqf",744};
                };
                class priorityQueue_PushItem {
                    f[]={"A3\functions_f\Arrays\fn_priorityQueue_PushItem.sqf",1377};
                };
                class priorityQueue_PopItem {
                    f[]={"A3\functions_f\Arrays\fn_priorityQueue_PopItem.sqf",929};
                };
                class priorityQueue_IsEmpty {
                    f[]={"A3\functions_f\Arrays\fn_priorityQueue_IsEmpty.sqf",224};
                };
                class priorityQueue_IsFull {
                    f[]={"A3\functions_f\Arrays\fn_priorityQueue_IsFull.sqf",307};
                };
                class priorityQueue_GetHighestPriority {
                    f[]={"A3\functions_f\Arrays\fn_priorityQueue_GetHighestPriority.sqf",554};
                };
                class priorityQueue_GetLowestPriority {
                    f[]={"A3\functions_f\Arrays\fn_priorityQueue_GetLowestPriority.sqf",541};
                };
            };
            class Bitwise {
                class bitwiseAND {
                    f[]={"A3\functions_f\Bitwise\fn_bitwiseAND.sqf",405};
                };
                class bitwiseOR {
                    f[]={"A3\functions_f\Bitwise\fn_bitwiseOR.sqf",346};
                };
                class bitwiseXOR {
                    f[]={"A3\functions_f\Bitwise\fn_bitwiseXOR.sqf",330};
                };
                class bitwiseNOT {
                    f[]={"A3\functions_f\Bitwise\fn_bitwiseNOT.sqf",224};
                };
                class bitflagsSet {
                    f[]={"A3\functions_f\Bitwise\fn_bitflagsSet.sqf",250};
                };
                class bitflagsUnset {
                    f[]={"A3\functions_f\Bitwise\fn_bitflagsUnset.sqf",276};
                };
                class bitflagsFlip {
                    f[]={"A3\functions_f\Bitwise\fn_bitflagsFlip.sqf",252};
                };
                class bitflagsCheck {
                    f[]={"A3\functions_f\Bitwise\fn_bitflagsCheck.sqf",259};
                };
                class bitflagsToArray {
                    f[]={"A3\functions_f\Bitwise\fn_bitflagsToArray.sqf",370};
                };
            };
            class Briefing {
                class briefingAnimate {
                    f[]={"A3\functions_f\Briefing\fn_briefingAnimate.sqf",2196};
                    a[]={"a3_functions_f"};
                };
                class briefingInit {
                    f[]={"A3\functions_f\Briefing\fn_briefingInit.sqf",577};
                    a[]={"a3_functions_f"};
                };
            };
            class Combat {
                class enemyTargets {
                    f[]={"A3\functions_f\Combat\fn_enemyTargets.sqf",456};
                    a[]={"a3_functions_f"};
                };
                class enemyDetected {
                    f[]={"A3\functions_f\Combat\fn_enemyDetected.sqf",537};
                    a[]={"a3_functions_f"};
                };
                class fireSupport {
                    f[]={"A3\functions_f\Combat\fn_fireSupport.sqf",4704};
                    a[]={"a3_functions_f"};
                };
                class fireSupportCluster {
                    f[]={"A3\functions_f\Combat\fn_fireSupportCluster.sqf",3779};
                    a[]={"a3_functions_f"};
                };
                class fireSupportVirtual {
                    f[]={"A3\functions_f\Combat\fn_fireSupportVirtual.sqf",3624};
                    a[]={"a3_functions_f"};
                };
                class stalk {
                    f[]={"A3\functions_f\Combat\fn_stalk.sqf",4226};
                    a[]={"a3_functions_f"};
                };
            };
            class Configs {
                class configPath {
                    f[]={"A3\functions_f\Configs\fn_configPath.sqf",2614};
                    a[]={"a3_functions_f"};
                };
                class subClasses {
                    f[]={"A3\functions_f\Configs\fn_subClasses.sqf",879};
                };
                class uniqueClasses {
                    f[]={"A3\functions_f\Configs\fn_uniqueClasses.sqf",1211};
                };
                class loadClass {
                    f[]={"A3\functions_f\Configs\fn_loadClass.sqf",730};
                };
                class loadEntry {
                    f[]={"A3\functions_f\Configs\fn_loadEntry.sqf",785};
                };
                class unitAddon {
                    f[]={"A3\functions_f\Configs\fn_unitAddon.sqf",257};
                };
                class weaponAddon {
                    f[]={"A3\functions_f\Configs\fn_weaponAddon.sqf",377};
                };
                class returnChildren {
                    f[]={"A3\functions_f\Configs\fn_returnChildren.sqf",879};
                };
                class configExtremes {
                    f[]={"A3\functions_f\Configs\fn_configExtremes.sqf",5178};
                };
                class weaponsEntityType {
                    f[]={"A3\functions_f\Configs\fn_weaponsEntityType.sqf",648};
                };
                class magazinesEntityType {
                    f[]={"A3\functions_f\Configs\fn_magazinesEntityType.sqf",591};
                };
                class getCfg {
                    f[]={"A3\functions_f\Configs\fn_getCfg.sqf",367};
                };
                class getCfgIsClass {
                    f[]={"A3\functions_f\Configs\fn_getCfgIsClass.sqf",68};
                    a[]={"a3_functions_f"};
                };
                class getCfgSubClasses {
                    f[]={"A3\functions_f\Configs\fn_getCfgSubClasses.sqf",102};
                    a[]={"a3_functions_f"};
                };
                class getCfgDataArray {
                    f[]={"A3\functions_f\Configs\fn_getCfgDataArray.sqf",211};
                    a[]={"a3_functions_f"};
                };
                class getCfgDataObject {
                    f[]={"A3\functions_f\Configs\fn_getCfgDataObject.sqf",162};
                    a[]={"a3_functions_f"};
                };
                class getCfgDataBool {
                    f[]={"A3\functions_f\Configs\fn_getCfgDataBool.sqf",128};
                    a[]={"a3_functions_f"};
                };
                class getCfgData {
                    f[]={"A3\functions_f\Configs\fn_getCfgData.sqf",209};
                    a[]={"a3_functions_f"};
                };
                class getCfgDataPool {
                    f[]={"A3\functions_f\Configs\fn_getCfgDataPool.sqf",666};
                    a[]={"a3_functions_f"};
                };
            };
            class DateTime {
                class CalculateDateTime {
                    f[]={"A3\functions_f\Datetime\fn_CalculateDateTime.sqf",593};
                    a[]={"a3_functions_f"};
                };
                class CompareDateTimes {
                    f[]={"A3\functions_f\Datetime\fn_CompareDateTimes.sqf",275};
                    a[]={"a3_functions_f"};
                };
                class IsDateTimeNewer {
                    f[]={"A3\functions_f\Datetime\fn_IsDateTimeNewer.sqf",237};
                    a[]={"a3_functions_f"};
                };
            };
            class Debug {
                class debugProfile {
                    f[]={"A3\functions_f\Debug\fn_debugProfile.sqf",1112};
                };
                class functionMeta {
                    f[]={"A3\functions_f\Debug\fn_functionMeta.sqf",554};
                };
                class camera {
                    f[]={"A3\functions_f\Debug\fn_camera.sqf",31086};
                };
                class cameraOld {
                    f[]={"A3\functions_f\Debug\fn_cameraOld.sqf",5444};
                };
                class isDemo {
                    f[]={"A3\functions_f\Debug\fn_isDemo.sqf",50};
                };
                class animViewer {
                    f[]={"A3\functions_f\Debug\fn_animViewer.sqf",18548};
                };
                class logFormat {
                    f[]={"A3\functions_f\Debug\fn_logFormat.sqf",772};
                    a[]={"a3_functions_f"};
                };
                class logFormatServer {
                    f[]={"A3\functions_f\Debug\fn_logFormatServer.sqf",896};
                    a[]={"a3_functions_f"};
                };
                class preload {
                    f[]={"A3\functions_f\Debug\fn_preload.sqf",1063};
                };
                class errorParamsType {
                    f[]={"A3\functions_f\Debug\fn_errorParamsType.sqf",2731};
                    a[]={"a3_functions_f"};
                };
                class isDebugConsoleAllowed {
                    f[]={"A3\functions_f\Debug\fn_isDebugConsoleAllowed.sqf",1739};
                };
                class debugConsoleExec {
                    f[]={"A3\functions_f\Debug\fn_debugConsoleExec.sqf",1713};
                };
            };
            class Diagnostic {
                class diagAAR {
                    f[]={"A3\functions_f\Diagnostic\fn_diagAAR.sqf",13095};
                    a[]={"a3_functions_f"};
                };
                class diagHit {
                    f[]={"A3\functions_f\Diagnostic\fn_diagHit.sqf",2422};
                    a[]={"a3_functions_f"};
                };
                class diagKey {
                    f[]={"A3\functions_f\Diagnostic\fn_diagKey.sqf",1948};
                    a[]={"a3_functions_f"};
                };
                class diagRadio {
                    f[]={"A3\functions_f\Diagnostic\fn_diagRadio.sqf",795};
                    a[]={"a3_functions_f"};
                };
                class diagMissionWeapons {
                    f[]={"A3\functions_f\Diagnostic\fn_diagMissionWeapons.sqf",2175};
                    a[]={"a3_functions_f"};
                };
                class diagMissionPositions {
                    f[]={"A3\functions_f\Diagnostic\fn_diagMissionPositions.sqf",6750};
                    a[]={"a3_functions_f"};
                };
                class diagPreview {
                    f[]={"A3\functions_f\Diagnostic\fn_diagPreview.sqf",2625};
                    a[]={"a3_functions_f"};
                };
                class diagPreviewVehicleCrew {
                    f[]={"A3\functions_f\Diagnostic\fn_diagPreviewVehicleCrew.sqf",1059};
                    a[]={"a3_functions_f"};
                };
                class diagPreviewCycle {
                    f[]={"A3\functions_f\Diagnostic\fn_diagPreviewCycle.sqf",7433};
                };
                class diagKeyLayout {
                    f[]={"A3\functions_f\Diagnostic\fn_diagKeyLayout.sqf",3862};
                    a[]={"a3_functions_f"};
                };
                class diagKeyTest {
                    f[]={"A3\functions_f\Diagnostic\fn_diagKeyTest.sqf",16954};
                    a[]={"a3_functions_f"};
                };
                class diagWiki {
                    f[]={"A3\functions_f\Diagnostic\fn_diagWiki.sqf",35216};
                    a[]={"a3_functions_f"};
                };
                class diagVehicleIcons {
                    f[]={"A3\functions_f\Diagnostic\fn_diagVehicleIcons.sqf",2988};
                    a[]={"a3_functions_f"};
                };
                class diagConfig {
                    f[]={"A3\functions_f\Diagnostic\fn_diagConfig.sqf",2833};
                    a[]={"a3_functions_f"};
                };
                class diagLoop {
                    f[]={"A3\functions_f\Diagnostic\fn_diagLoop.sqf",321};
                    a[]={"a3_functions_f"};
                };
                class locWeaponInfo {
                    f[]={"A3\functions_f\Diagnostic\fn_locWeaponInfo.sqf",4192};
                    a[]={"a3_functions_f"};
                };
                class diagKnownTargets {
                    f[]={"A3\functions_f\Diagnostic\fn_diagKnownTargets.sqf",4811};
                    a[]={"a3_functions_f"};
                };
                class diagKnownAsTarget {
                    f[]={"A3\functions_f\Diagnostic\fn_diagKnownAsTarget.sqf",5294};
                    a[]={"a3_functions_f"};
                };
                class diagBulletCam {
                    f[]={"A3\functions_f\Diagnostic\fn_diagBulletCam.sqf",850};
                };
                class diagMacros {
                    f[]={"A3\functions_f\Diagnostic\fn_diagMacros.sqf",1707};
                };
                class diagMacrosVerify {
                    f[]={"A3\functions_f\Diagnostic\fn_diagMacrosVerify.sqf",531};
                };
                class diagMacrosMapSize {
                    f[]={"A3\functions_f\Diagnostic\fn_diagMacrosMapSize.sqf",5442};
                };
                class diagMacrosNameSound {
                    f[]={"A3\functions_f\Diagnostic\fn_diagMacrosNameSound.sqf",5764};
                };
                class diagMacrosSimpleObject {
                    f[]={"A3\functions_f\Diagnostic\fn_diagMacrosSimpleObject.sqf",11374};
                };
                class diagMacrosAuthor {
                    f[]={"A3\functions_f\Diagnostic\fn_diagMacrosAuthor.sqf",768};
                };
                class diagMacrosEditorPreview {
                    f[]={"A3\functions_f\Diagnostic\fn_diagMacrosEditorPreview.sqf",9185};
                };
                class diagFindMissingAuthors {
                    f[]={"A3\functions_f\Diagnostic\fn_diagFindMissingAuthors.sqf",665};
                };
                class diagObjectPerformance {
                    f[]={"A3\functions_f\Diagnostic\fn_diagObjectPerformance.sqf",9001};
                };
                class exportGroupFormations {
                    f[]={"A3\functions_f\Diagnostic\fn_exportGroupFormations.sqf",3711};
                };
                class exportCfgVehicles {
                    f[]={"A3\functions_f\Diagnostic\fn_exportCfgVehicles.sqf",7538};
                };
                class exportCfgVehiclesAssetDB {
                    f[]={"A3\functions_f\Diagnostic\fn_exportCfgVehiclesAssetDB.sqf",16408};
                };
                class exportCfgWeapons {
                    f[]={"A3\functions_f\Diagnostic\fn_exportCfgWeapons.sqf",10568};
                };
                class exportCfgMagazines {
                    f[]={"A3\functions_f\Diagnostic\fn_exportCfgMagazines.sqf",3403};
                };
                class exportCfgPatches {
                    f[]={"A3\functions_f\Diagnostic\fn_exportCfgPatches.sqf",3068};
                };
                class exportCfgHints {
                    f[]={"A3\functions_f\Diagnostic\fn_exportCfgHints.sqf",3261};
                };
                class exportEditorPreviews {
                    f[]={"A3\functions_f\Diagnostic\fn_exportEditorPreviews.sqf",8400};
                };
                class exportConfigHierarchy {
                    f[]={"A3\functions_f\Diagnostic\fn_exportConfigHierarchy.sqf",2179};
                };
                class importImageLinks {
                    f[]={"A3\functions_f\Diagnostic\fn_importImageLinks.sqf",641};
                };
                class exportFunctionsToWiki {
                    f[]={"A3\functions_f\Diagnostic\fn_exportFunctionsToWiki.sqf",5700};
                };
                class diagJIRAlink {
                    f[]={"A3\functions_f\Diagnostic\fn_diagJIRAlink.sqf",6419};
                    a[]={"a3_functions_f"};
                };
            };
            class Effects {
                class effectFired {
                    f[]={"A3\functions_f\Effects\fn_effectFired.sqf",111};
                    a[]={"a3_functions_f"};
                };
                class effectKilled {
                    f[]={"A3\functions_f\Effects\fn_effectKilled.sqf",508};
                    a[]={"a3_functions_f"};
                };
                class effectPlankton {
                    f[]={"A3\functions_f\Effects\fn_effectPlankton.sqf",982};
                    a[]={"a3_functions_f"};
                };
                class effectFiredLongSmoke {
                    f[]={"A3\functions_f\Effects\fn_effectFiredLongSmoke.sqf",12};
                    a[]={"a3_functions_f"};
                };
                class effectFiredRifle {
                    f[]={"A3\functions_f\Effects\fn_effectFiredRifle.sqf",1042};
                    a[]={"a3_functions_f"};
                };
                class effectFiredArtillery {
                    f[]={"A3\functions_f\Effects\fn_effectFiredArtillery.sqf",5833};
                    a[]={"a3_functions_f"};
                };
                class effectFiredRocket {
                    f[]={"A3\functions_f\Effects\fn_effectFiredRocket.sqf",1246};
                    a[]={"a3_functions_f"};
                };
                class effectFiredCruiseMissile {
                    f[]={"A3\functions_f\Effects\fn_effectFiredCruiseMissile.sqf",913};
                    a[]={"a3_functions_f"};
                };
                class effectFiredSmokeLauncher {
                    f[]={"A3\functions_f\Effects\fn_effectFiredSmokeLauncher.sqf",2740};
                    a[]={"a3_functions_f"};
                };
                class effectFiredSmokeLauncher_boat {
                    f[]={"A3\functions_f\Effects\fn_effectFiredSmokeLauncher_boat.sqf",2570};
                    a[]={"a3_functions_f"};
                };
                class effectFiredFlares {
                    f[]={"A3\functions_f\Effects\fn_effectFiredFlares.sqf",2567};
                    a[]={"a3_functions_f"};
                };
                class effectFiredHeliRocket {
                    f[]={"A3\functions_f\Effects\fn_effectFiredHeliRocket.sqf",1264};
                    a[]={"a3_functions_f"};
                };
                class effectKilledAirDestruction {
                    f[]={"A3\functions_f\Effects\fn_effectKilledAirDestruction.sqf",2026};
                    a[]={"a3_functions_f"};
                };
                class effectKilledAirDestructionStage2 {
                    f[]={"A3\functions_f\Effects\fn_effectKilledAirDestructionStage2.sqf",2125};
                    a[]={"a3_functions_f"};
                };
                class effectKilledSecondaries {
                    f[]={"A3\functions_f\Effects\fn_effectKilledSecondaries.sqf",517};
                    a[]={"a3_functions_f"};
                };
            };
            class Environment {
                class setPPeffectTemplate {
                    f[]={"A3\functions_f\Environment\fn_setPPeffectTemplate.sqf",1309};
                };
                class initWorldScene {
                    f[]={"A3\functions_f\Environment\fn_initWorldScene.sqf",678};
                };
            };
            class Feedback {
                class bloodEffect {
                    f[]={"A3\functions_f\Feedback\fn_bloodEffect.sqf",3243};
                    a[]={"a3_functions_f"};
                };
                class damageChanged {
                    f[]={"A3\functions_f\Feedback\fn_damageChanged.sqf",871};
                    a[]={"a3_functions_f"};
                };
                class damagePulsing {
                    f[]={"A3\functions_f\Feedback\fn_damagePulsing.sqf",4025};
                    a[]={"a3_functions_f"};
                };
                class dirtEffect {
                    f[]={"A3\functions_f\Feedback\fn_dirtEffect.sqf",2351};
                    a[]={"a3_functions_f"};
                };
                class fatigueEffect {
                    f[]={"A3\functions_f\Feedback\fn_fatigueEffect.sqf",1853};
                    a[]={"a3_functions_f"};
                };
                class feedbackInit {
                    f[]={"A3\functions_f\Feedback\fn_feedbackInit.sqf",4050};
                    a[]={"a3_functions_f"};
                };
                class flamesEffect {
                    f[]={"A3\functions_f\Feedback\fn_flamesEffect.sqf",993};
                    a[]={"a3_functions_f"};
                };
                class healing {
                    f[]={"A3\functions_f\Feedback\fn_healing.sqf",1179};
                    a[]={"a3_functions_f"};
                };
                class incapacitatedEffect {
                    f[]={"A3\functions_f\Feedback\fn_incapacitatedEffect.sqf",61};
                    a[]={"a3_functions_f"};
                };
                class indicateBleeding {
                    f[]={"A3\functions_f\Feedback\fn_indicateBleeding.sqf",585};
                    a[]={"a3_functions_f"};
                };
                class radialRed {
                    f[]={"A3\functions_f\Feedback\fn_radialRed.sqf",2630};
                    a[]={"a3_functions_f"};
                };
                class radialRedOut {
                    f[]={"A3\functions_f\Feedback\fn_radialRedOut.sqf",691};
                    a[]={"a3_functions_f"};
                };
            };
            class Geometry {
                class relScaledDist {
                    f[]={"A3\functions_f\Geometry\fn_relScaledDist.sqf",863};
                    a[]={"a3_functions_f"};
                };
                class terrainGradAngle {
                    f[]={"A3\functions_f\Geometry\fn_terrainGradAngle.sqf",578};
                    a[]={"a3_functions_f"};
                };
            };
            class GUI {
                class groupIndicator {
                    f[]={"A3\functions_f\GUI\fn_groupIndicator.sqf",3400};
                    a[]={"a3_functions_f"};
                };
                class rscLayer {
                    f[]={"A3\functions_f\GUI\fn_rscLayer.sqf",504};
                    a[]={"a3_functions_f"};
                };
                class guiEffectTiles {
                    f[]={"A3\functions_f\GUI\fn_guiEffectTiles.sqf",2671};
                    a[]={"a3_functions_f"};
                };
                class cinemaBorder {
                    f[]={"A3\functions_f\GUI\fn_cinemaBorder.sqf",5511};
                    a[]={"a3_functions_f"};
                };
                class textTiles {
                    f[]={"A3\functions_f\GUI\fn_textTiles.sqf",4426};
                    a[]={"a3_functions_f"};
                };
                class titlecard {
                    f[]={"A3\functions_f\GUI\fn_titlecard.sqf",3849};
                    a[]={"a3_functions_f"};
                };
                class liveFeed {
                    f[]={"A3\functions_f\GUI\fn_liveFeed.sqf",1743};
                    a[]={"a3_functions_f"};
                };
                class liveFeedEffects {
                    f[]={"A3\functions_f\GUI\fn_liveFeedEffects.sqf",463};
                    a[]={"a3_functions_f"};
                };
                class liveFeedSetSource {
                    f[]={"A3\functions_f\GUI\fn_liveFeedSetSource.sqf",770};
                    a[]={"a3_functions_f"};
                };
                class liveFeedSetTarget {
                    f[]={"A3\functions_f\GUI\fn_liveFeedSetTarget.sqf",708};
                    a[]={"a3_functions_f"};
                };
                class liveFeedTerminate {
                    f[]={"A3\functions_f\GUI\fn_liveFeedTerminate.sqf",689};
                    a[]={"a3_functions_f"};
                };
                class establishingShot {
                    f[]={"A3\functions_f\GUI\fn_establishingShot.sqf",12825};
                    a[]={"a3_functions_f"};
                };
                class showNotification {
                    f[]={"A3\functions_f\GUI\fn_showNotification.sqf",5249};
                };
                class ctrlFitToTextHeight {
                    f[]={"A3\functions_f\GUI\fn_ctrlFitToTextHeight.sqf",626};
                };
                class setIDCStreamFriendly {
                    f[]={"A3\functions_f\GUI\fn_setIDCStreamFriendly.sqf",324};
                    a[]={"a3_functions_f"};
                };
                class typeText {
                    f[]={"A3\functions_f\GUI\fn_typeText.sqf",2287};
                    a[]={"a3_functions_f"};
                };
                class typeText2 {
                    f[]={"A3\functions_f\GUI\fn_typeText2.sqf",4547};
                };
                class ctrlSetScale {
                    f[]={"A3\functions_f\GUI\fn_ctrlSetScale.sqf",932};
                };
                class credits_movie {
                    f[]={"A3\functions_f\GUI\fn_credits_movie.sqf",6727};
                    a[]={"a3_functions_f"};
                };
                class credits_movieConfig {
                    f[]={"A3\functions_f\GUI\fn_credits_movieConfig.sqf",1402};
                    a[]={"a3_functions_f"};
                };
                class credits_movieSupport {
                    f[]={"A3\functions_f\GUI\fn_credits_movieSupport.sqf",1623};
                    a[]={"a3_functions_f"};
                };
                class showUnitInfo {
                    f[]={"A3\functions_f\GUI\fn_showUnitInfo.sqf",459};
                    a[]={"a3_functions_f"};
                };
                class toUpperDisplayTexts {
                    f[]={"A3\functions_f\GUI\fn_toUpperDisplayTexts.sqf",2023};
                    a[]={"a3_functions_f"};
                };
                class createLogRecord {
                    f[]={"A3\functions_f\GUI\fn_createLogRecord.sqf",383};
                };
                class showMissionStatus {
                    f[]={"A3\functions_f\GUI\fn_showMissionStatus.sqf",94};
                };
                class setMissionStatusSlot {
                    f[]={"A3\functions_f\GUI\fn_setMissionStatusSlot.sqf",685};
                };
                class openFieldManual {
                    f[]={"A3\functions_f\GUI\fn_openFieldManual.sqf",981};
                    a[]={"a3_functions_f"};
                };
                class initDisplay {
                    f[]={"A3\functions_f\GUI\fn_initDisplay.sqf",2505};
                    a[]={"a3_functions_f"};
                };
                class controlConfigs {
                    f[]={"A3\functions_f\GUI\fn_controlConfigs.sqf",746};
                };
                class showWelcomeScreen {
                    f[]={"A3\functions_f\GUI\fn_showWelcomeScreen.sqf",2193};
                };
                class versionInfo {
                    f[]={"A3\functions_f\GUI\fn_versionInfo.sqf",1386};
                    a[]={"a3_functions_f"};
                };
                class exportGUIBaseClasses {
                    f[]={"A3\functions_f\GUI\fn_exportGUIBaseClasses.sqf",10007};
                };
            };
            class Hints {
                class advHint {
                    f[]={"A3\functions_f\Hints\fn_advHint.sqf",6955};
                    a[]={"a3_functions_f"};
                };
                class advHintArg {
                    f[]={"A3\functions_f\Hints\fn_advHintArg.sqf",4802};
                    a[]={"a3_functions_f"};
                };
                class advHintCall {
                    f[]={"A3\functions_f\Hints\fn_advHintCall.sqf",4566};
                    a[]={"a3_functions_f"};
                };
                class advHintCredits {
                    f[]={"A3\functions_f\Hints\fn_advHintCredits.sqf",1453};
                    a[]={"a3_functions_f"};
                };
                class advHintFormat {
                    f[]={"A3\functions_f\Hints\fn_advHintFormat.sqf",2095};
                };
            };
            class HoldActions {
                class holdActionAdd {
                    f[]={"A3\functions_f\HoldActions\fn_holdActionAdd.sqf",6615};
                };
                class holdActionRemove {
                    f[]={"A3\functions_f\HoldActions\fn_holdActionRemove.sqf",134};
                };
            };
            class Inventory {
                class addWeapon {
                    f[]={"A3\functions_f\inventory\fn_addWeapon.sqf",1137};
                    a[]={"a3_functions_f"};
                };
                class itemType {
                    f[]={"A3\functions_f\inventory\fn_itemType.sqf",3915};
                };
                class basicBackpack {
                    f[]={"A3\functions_f\inventory\fn_basicBackpack.sqf",5104};
                };
                class loadInventory {
                    f[]={"A3\functions_f\inventory\fn_loadInventory.sqf",8759};
                };
                class unitHeadgear {
                    f[]={"A3\functions_f\inventory\fn_unitHeadgear.sqf",4051};
                };
                class isThrowable {
                    f[]={"A3\functions_f\inventory\fn_isThrowable.sqf",518};
                };
                class limitAmmunition {
                    f[]={"A3\functions_f\inventory\fn_limitAmmunition.sqf",3261};
                };
                class limitItems {
                    f[]={"A3\functions_f\inventory\fn_limitItems.sqf",2739};
                };
                class limitWeaponItems {
                    f[]={"A3\functions_f\inventory\fn_limitWeaponItems.sqf",4394};
                };
                class inventoryExists {
                    f[]={"a3\functions_f_mp_mark\inventory\fn_inventoryExists.sqf",344};
                    a[]={"a3_functions_f_mp_mark"};
                    m[]={"mark"};
                };
            };
            class Map {
                class markWaypoints {
                    f[]={"A3\functions_f\Map\fn_markWaypoints.sqf",1643};
                    a[]={"a3_functions_f"};
                };
                class mapSize {
                    f[]={"A3\functions_f\Map\fn_mapSize.sqf",356};
                    a[]={"a3_functions_f"};
                };
                class mapGridSize {
                    f[]={"A3\functions_f\Map\fn_mapGridSize.sqf",498};
                    a[]={"a3_functions_f"};
                };
                class markerToTrigger {
                    f[]={"A3\functions_f\Map\fn_markerToTrigger.sqf",1110};
                    a[]={"a3_functions_f"};
                };
                class triggerToMarker {
                    f[]={"A3\functions_f\Map\fn_triggerToMarker.sqf",539};
                    a[]={"a3_functions_f"};
                };
                class exportMapToBiTXT {
                    f[]={"A3\functions_f\Map\fn_exportMapToBiTXT.sqf",5779};
                };
                class drawArrow {
                    f[]={"A3\functions_f\Map\fn_drawArrow.sqf",1520};
                };
            };
            class Missions {
                class basicTask {
                    f[]={"A3\functions_f\Missions\fn_basicTask.sqf",1566};
                    a[]={"a3_functions_f"};
                };
                class missionTasks {
                    f[]={"A3\functions_f\Missions\fn_missionTasks.sqf",783};
                    a[]={"a3_functions_f"};
                };
                class missionTasksLocal {
                    f[]={"missionTasks.sqf",0};
                    a[]={"a3_functions_f"};
                };
                class missionConversations {
                    f[]={"A3\functions_f\Missions\fn_missionConversations.sqf",499};
                    a[]={"a3_functions_f"};
                };
                class missionConversationsLocal {
                    f[]={"missionConversations.sqf",0};
                    a[]={"a3_functions_f"};
                };
                class isCampaign {
                    f[]={"A3\functions_f\Missions\fn_isCampaign.sqf",52};
                    a[]={"a3_functions_f"};
                };
                class missionHandlers {
                    f[]={"A3\functions_f\Missions\fn_missionHandlers.sqf",956};
                    a[]={"a3_functions_f"};
                };
                class trackMissionTime {
                    f[]={"A3\functions_f\Missions\fn_trackMissionTime.sqf",679};
                };
                class forceEnd {
                    f[]={"A3\functions_f\Missions\fn_forceEnd.sqf",192};
                };
            };
            class Misc {
                class fadeEffect {
                    f[]={"A3\functions_f\Misc\fn_fadeEffect.sqf",2267};
                    a[]={"a3_functions_f"};
                };
                class findOverwatch {
                    f[]={"A3\functions_f\Misc\fn_findOverwatch.sqf",2061};
                    a[]={"a3_functions_f"};
                };
                class onDiaryChanged {
                    f[]={"A3\functions_f\Misc\fn_onDiaryChanged.sqf",747};
                    a[]={"a3_functions_f"};
                };
                class colorRGBAtoHTML {
                    f[]={"A3\functions_f\Misc\fn_colorRGBAtoHTML.sqf",1789};
                    a[]={"a3_functions_f"};
                };
                class rankParams {
                    f[]={"A3\functions_f\Misc\fn_rankParams.sqf",1137};
                    a[]={"a3_functions_f"};
                };
                class colorRGBAtoTexture {
                    f[]={"A3\functions_f\Misc\fn_colorRGBAtoTexture.sqf",414};
                    a[]={"a3_functions_f"};
                };
                class healthEffects {
                    f[]={"A3\functions_f\Misc\fn_healthEffects.sqf",5063};
                    a[]={"a3_functions_f"};
                };
                class textureMarker {
                    f[]={"A3\functions_f\Misc\fn_textureMarker.sqf",256};
                    a[]={"a3_functions_f"};
                };
                class textureVehicleIcon {
                    f[]={"A3\functions_f\Misc\fn_textureVehicleIcon.sqf",263};
                    a[]={"a3_functions_f"};
                };
                class localize {
                    f[]={"A3\functions_f\Misc\fn_localize.sqf",202};
                    a[]={"a3_functions_f"};
                };
                class colorConfigToRGBA {
                    f[]={"A3\functions_f\Misc\fn_colorConfigToRGBA.sqf",595};
                    a[]={"a3_functions_f"};
                };
                class keyCode {
                    f[]={"A3\functions_f\Misc\fn_keyCode.sqf",2743};
                };
                class addScriptedEventHandler {
                    f[]={"A3\functions_f\Misc\fn_addScriptedEventHandler.sqf",895};
                };
                class removeScriptedEventHandler {
                    f[]={"A3\functions_f\Misc\fn_removeScriptedEventHandler.sqf",599};
                };
                class removeAllScriptedEventHandlers {
                    f[]={"A3\functions_f\Misc\fn_removeAllScriptedEventHandlers.sqf",633};
                };
                class callScriptedEventHandler {
                    f[]={"A3\functions_f\Misc\fn_callScriptedEventHandler.sqf",921};
                };
                class startLoadingScreen {
                    f[]={"A3\functions_f\Misc\fn_startLoadingScreen.sqf",499};
                };
                class endLoadingScreen {
                    f[]={"A3\functions_f\Misc\fn_endLoadingScreen.sqf",463};
                };
                class progressLoadingScreen {
                    f[]={"A3\functions_f\Misc\fn_progressLoadingScreen.sqf",539};
                };
                class groupVehicles {
                    f[]={"A3\functions_f\Misc\fn_groupVehicles.sqf",863};
                };
                class nearestRoad {
                    f[]={"A3\functions_f\Misc\fn_nearestRoad.sqf",471};
                };
                class addCommMenuItem {
                    f[]={"A3\functions_f\Misc\fn_addCommMenuItem.sqf",3010};
                };
                class removeCommMenuItem {
                    f[]={"A3\functions_f\Misc\fn_removeCommMenuItem.sqf",796};
                };
                class refreshCommMenu {
                    f[]={"A3\functions_f\Misc\fn_refreshCommMenu.sqf",726};
                };
                class interpolateWeather {
                    f[]={"A3\functions_f\Misc\fn_interpolateWeather.sqf",2046};
                    a[]={"a3_functions_f"};
                };
                class weaponComponents {
                    f[]={"A3\functions_f\Misc\fn_weaponComponents.sqf",1135};
                    a[]={"a3_functions_f"};
                };
                class jukebox {
                    f[]={"A3\functions_f\Misc\fn_jukebox.sqf",11021};
                };
                class loop {
                    f[]={"A3\functions_f\Misc\fn_loop.sqf",5413};
                };
                class runLater {
                    f[]={"A3\functions_f\Misc\fn_runLater.sqf",347};
                };
                class fixDate {
                    f[]={"A3\functions_f\Misc\fn_fixDate.sqf",1392};
                };
                class isLeapYear {
                    f[]={"A3\functions_f\Misc\fn_isLeapYear.sqf",185};
                };
                class monthDays {
                    f[]={"A3\functions_f\Misc\fn_monthDays.sqf",359};
                };
                class disableLoading {
                    f[]={"A3\functions_f\Misc\fn_disableLoading.sqf",165};
                };
                class gridToPos {
                    f[]={"A3\functions_f\Misc\fn_gridToPos.sqf",2528};
                };
                class encodeFlags {
                    f[]={"A3\functions_f\Misc\fn_encodeFlags.sqf",504};
                };
                class decodeFlags {
                    f[]={"A3\functions_f\Misc\fn_decodeFlags.sqf",404};
                };
                class encodeFlags2 {
                    f[]={"A3\functions_f\Misc\fn_encodeFlags2.sqf",469};
                };
                class decodeFlags2 {
                    f[]={"A3\functions_f\Misc\fn_decodeFlags2.sqf",785};
                };
                class encodeFlags4 {
                    f[]={"A3\functions_f\Misc\fn_encodeFlags4.sqf",486};
                };
                class decodeFlags4 {
                    f[]={"A3\functions_f\Misc\fn_decodeFlags4.sqf",789};
                };
                class encodeFlags8 {
                    f[]={"A3\functions_f\Misc\fn_encodeFlags8.sqf",512};
                };
                class decodeFlags8 {
                    f[]={"A3\functions_f\Misc\fn_decodeFlags8.sqf",770};
                };
                class deleteCounter {
                    f[]={"A3\functions_f\Misc\fn_deleteCounter.sqf",536};
                };
                class sunriseSunsetTime {
                    f[]={"A3\functions_f\Misc\fn_sunriseSunsetTime.sqf",745};
                };
                class getArea {
                    f[]={"A3\functions_f\Misc\fn_getArea.sqf",1086};
                };
                class animateFlag {
                    f[]={"A3\functions_f\Misc\fn_animateFlag.sqf",891};
                };
                class fire {
                    f[]={"A3\functions_f\Misc\fn_fire.sqf",2520};
                };
            };
            class Modules {
                class initModules {
                    f[]={"A3\functions_f\Modules\fn_initModules.sqf",1671};
                };
                class moduleInit {
                    f[]={"A3\functions_f\Modules\fn_moduleInit.sqf",6079};
                };
                class moduleModules {
                    f[]={"A3\functions_f\Modules\fn_moduleModules.sqf",210};
                };
                class moduleTriggers {
                    f[]={"A3\functions_f\Modules\fn_moduleTriggers.sqf",215};
                };
                class moduleUnits {
                    f[]={"A3\functions_f\Modules\fn_moduleUnits.sqf",754};
                };
                class moduleExecute {
                    f[]={"A3\functions_f\Modules\fn_moduleExecute.sqf",1927};
                };
            };
            class MP {
                class initMultiplayer {
                    f[]={"A3\functions_f\MP\fn_initMultiplayer.sqf",0};
                };
                class call {
                    f[]={"A3\functions_f\MP\fn_call.sqf",299};
                };
                class spawn {
                    f[]={"A3\functions_f\MP\fn_spawn.sqf",299};
                };
                class execFSM {
                    f[]={"A3\functions_f\MP\fn_execFSM.sqf",306};
                };
                class execVM {
                    f[]={"A3\functions_f\MP\fn_execVM.sqf",311};
                };
                class execRemote {
                    f[]={"A3\functions_f\MP\fn_execRemote.sqf",1295};
                };
                class addScore {
                    f[]={"A3\functions_f\MP\fn_addScore.sqf",246};
                };
                class setRespawnDelay {
                    f[]={"A3\functions_f\MP\fn_setRespawnDelay.sqf",707};
                };
                class onPlayerConnected {
                    f[]={"A3\functions_f\MP\fn_onPlayerConnected.sqf",773};
                };
                class initPlayable {
                    f[]={"A3\functions_f\MP\fn_initPlayable.sqf",530};
                };
                class missionTimeLeft {
                    f[]={"A3\functions_f\MP\fn_missionTimeLeft.sqf",229};
                };
                class deleteVehicleCrew {
                    f[]={"A3\functions_f\MP\fn_deleteVehicleCrew.sqf",252};
                };
                class admin {
                    f[]={"A3\functions_f\MP\fn_admin.sqf",115};
                };
            };
            class Network {
                class netId {
                    f[]={"A3\functions_f\Network\fn_netId.sqf",521};
                };
                class groupFromNetId {
                    f[]={"A3\functions_f\Network\fn_groupFromNetId.sqf",441};
                };
                class objectFromNetId {
                    f[]={"A3\functions_f\Network\fn_objectFromNetId.sqf",442};
                };
            };
            class Numbers {
                class countdown {
                    f[]={"A3\functions_f\Numbers\fn_countdown.sqf",943};
                };
            };
            class Strings {
                class filterString {
                    f[]={"A3\functions_f\Strings\fn_filterString.sqf",354};
                    a[]={"a3_functions_f"};
                };
                class inString {
                    f[]={"A3\functions_f\Strings\fn_inString.sqf",337};
                    a[]={"a3_functions_f"};
                };
                class ordinalNumber {
                    f[]={"A3\functions_f\Strings\fn_ordinalNumber.sqf",801};
                };
                class romanNumeral {
                    f[]={"A3\functions_f\Strings\fn_romanNumeral.sqf",693};
                };
                class phoneticalWord {
                    f[]={"A3\functions_f\Strings\fn_phoneticalWord.sqf",1164};
                };
                class teamColor {
                    f[]={"A3\functions_f\Strings\fn_teamColor.sqf",984};
                };
                class alignTabs {
                    f[]={"A3\functions_f\Strings\fn_alignTabs.sqf",852};
                };
                class splitString {
                    f[]={"A3\functions_f\Strings\fn_splitString.sqf",633};
                };
                class trimString {
                    f[]={"A3\functions_f\Strings\fn_trimString.sqf",633};
                    a[]={"a3_functions_f"};
                };
            };
            class Supports {
                class addSupportLink {
                    f[]={"A3\functions_f\Supports\fn_addSupportLink.sqf",637};
                };
                class changeSupportRadioChannel {
                    f[]={"A3\functions_f\Supports\fn_changeSupportRadioChannel.sqf",642};
                };
                class limitSupport {
                    f[]={"A3\functions_f\Supports\fn_limitSupport.sqf",334};
                };
                class removeSupportLink {
                    f[]={"A3\functions_f\Supports\fn_removeSupportLink.sqf",279};
                };
            };
            class Objects {
                class getTurrets {
                    f[]={"A3\functions_f\Objects\fn_getTurrets.sqf",1030};
                };
                class objectVar {
                    f[]={"A3\functions_f\Objects\fn_objectVar.sqf",959};
                };
                class allSynchronizedObjects {
                    f[]={"A3\functions_f\Objects\fn_allSynchronizedObjects.sqf",456};
                };
                class setRank {
                    f[]={"A3\functions_f\Objects\fn_setRank.sqf",899};
                };
                class spawnObjects {
                    f[]={"A3\functions_f\Objects\fn_spawnObjects.sqf",2802};
                };
                class objectHeight {
                    f[]={"A3\functions_f\Objects\fn_objectHeight.sqf",1037};
                };
                class objectType {
                    f[]={"A3\functions_f\Objects\fn_objectType.sqf",3759};
                };
                class crewCount {
                    f[]={"A3\functions_f\Objects\fn_crewCount.sqf",904};
                };
                class setIdentity {
                    f[]={"A3\functions_f\Objects\fn_setIdentity.sqf",993};
                };
                class setObjectRotation {
                    f[]={"A3\functions_f\Objects\fn_setObjectRotation.sqf",1019};
                };
                class cargoTurretIndex {
                    f[]={"A3\functions_f\Objects\fn_cargoTurretIndex.sqf",739};
                };
                class switchLamp {
                    f[]={"A3\functions_f\Objects\fn_switchLamp.sqf",295};
                };
                class attachToRelative {
                    f[]={"A3\functions_f\Objects\fn_attachToRelative.sqf",393};
                };
                class setHitPointDamage {
                    f[]={"A3\functions_f\Objects\fn_setHitPointDamage.sqf",1077};
                };
                class allTurrets {
                    f[]={"A3\functions_f\Objects\fn_allTurrets.sqf",1126};
                };
                class synchronizedObjectsQueue {
                    f[]={"A3\functions_f\Objects\fn_synchronizedObjectsQueue.sqf",1786};
                };
            };
            class SimpleObjects {
                class createSimpleObject {
                    f[]={"A3\functions_f\SimpleObjects\fn_createSimpleObject.sqf",1525};
                };
                class adjustSimpleObject {
                    f[]={"A3\functions_f\SimpleObjects\fn_adjustSimpleObject.sqf",1163};
                };
                class simpleObjectData {
                    f[]={"A3\functions_f\SimpleObjects\fn_simpleObjectData.sqf",4750};
                };
                class replaceWithSimpleObject {
                    f[]={"A3\functions_f\SimpleObjects\fn_replaceWithSimpleObject.sqf",881};
                };
            };
            class OO {
                class addClassOO {
                    f[]={"A3\functions_f\OO\fn_addClassOO.sqf",1953};
                    a[]={"a3_functions_f"};
                };
                class createObjectOO {
                    f[]={"A3\functions_f\OO\fn_createObjectOO.sqf",2949};
                    a[]={"a3_functions_f"};
                };
                class validateParametersOO {
                    f[]={"A3\functions_f\OO\fn_validateParametersOO.sqf",2102};
                    a[]={"a3_functions_f"};
                };
            };
            class Params {
                class storeParamsValues {
                    f[]={"A3\functions_f\Params\fn_storeParamsValues.sqf",1168};
                    a[]={"a3_functions_f"};
                };
                class initParams {
                    f[]={"A3\functions_f\Params\fn_initParams.sqf",2135};
                    a[]={"a3_functions_f"};
                };
                class getParamValue {
                    f[]={"A3\functions_f\Params\fn_getParamValue.sqf",352};
                };
                class paramDaytime {
                    f[]={"A3\functions_f\Params\fn_paramDaytime.sqf",219};
                };
                class paramWeather {
                    f[]={"A3\functions_f\Params\fn_paramWeather.sqf",181};
                };
                class paramCountdown {
                    f[]={"A3\functions_f\Params\fn_paramCountdown.sqf",217};
                };
                class paramRespawnTickets {
                    f[]={"A3\functions_f\Params\fn_paramRespawnTickets.sqf",255};
                };
                class paramGuerFriendly {
                    f[]={"A3\functions_f\Params\fn_paramGuerFriendly.sqf",416};
                };
                class paramReviveUnconsciousStateMode {
                    f[]={"A3\functions_f\Params\fn_paramReviveUnconsciousStateMode.sqf",71};
                };
                class paramReviveMode {
                    f[]={"A3\functions_f\Params\fn_paramReviveMode.sqf",55};
                };
                class paramReviveDuration {
                    f[]={"A3\functions_f\Params\fn_paramReviveDuration.sqf",59};
                };
                class paramReviveRequiredTrait {
                    f[]={"A3\functions_f\Params\fn_paramReviveRequiredTrait.sqf",64};
                };
                class paramReviveRequiredItems {
                    f[]={"A3\functions_f\Params\fn_paramReviveRequiredItems.sqf",64};
                };
                class paramReviveMedicSpeedMultiplier {
                    f[]={"A3\functions_f\Params\fn_paramReviveMedicSpeedMultiplier.sqf",71};
                };
                class paramReviveBleedOutDuration {
                    f[]={"A3\functions_f\Params\fn_paramReviveBleedOutDuration.sqf",67};
                };
                class paramReviveForceRespawnDuration {
                    f[]={"A3\functions_f\Params\fn_paramReviveForceRespawnDuration.sqf",71};
                };
                class paramTimeAcceleration {
                    f[]={"a3\functions_f_mp_mark\params\fn_paramTimeAcceleration.sqf",110};
                    a[]={"a3_functions_f_mp_mark"};
                    m[]={"mark"};
                };
            };
            class Strategic {
                class ORBATOpen {
                    f[]={"A3\functions_f\Strategic\fn_ORBATOpen.sqf",16013};
                    a[]={"a3_functions_f"};
                };
                class ORBATAnimate {
                    f[]={"A3\functions_f\Strategic\fn_ORBATAnimate.sqf",1673};
                    a[]={"a3_functions_f"};
                };
                class ORBATTooltip {
                    f[]={"A3\functions_f\Strategic\fn_ORBATTooltip.sqf",3989};
                    a[]={"a3_functions_f"};
                };
                class ORBATSetGroupFade {
                    f[]={"A3\functions_f\Strategic\fn_ORBATSetGroupFade.sqf",1766};
                    a[]={"a3_functions_f"};
                };
                class ORBATSetGroupParams {
                    f[]={"A3\functions_f\Strategic\fn_ORBATSetGroupParams.sqf",1325};
                    a[]={"a3_functions_f"};
                };
                class ORBATGetGroupParams {
                    f[]={"A3\functions_f\Strategic\fn_ORBATGetGroupParams.sqf",10198};
                    a[]={"a3_functions_f"};
                };
                class ORBATAddGroupOverlay {
                    f[]={"A3\functions_f\Strategic\fn_ORBATAddGroupOverlay.sqf",1127};
                    a[]={"a3_functions_f"};
                };
                class ORBATRemoveGroupOverlay {
                    f[]={"A3\functions_f\Strategic\fn_ORBATRemoveGroupOverlay.sqf",995};
                    a[]={"a3_functions_f"};
                };
                class ORBATConfigPreview {
                    f[]={"A3\functions_f\Strategic\fn_ORBATConfigPreview.sqf",1081};
                    a[]={"a3_functions_f"};
                };
                class StrategicMapOpen {
                    f[]={"A3\functions_f\Strategic\fn_StrategicMapOpen.sqf",17010};
                    a[]={"a3_functions_f"};
                };
                class StrategicMapAnimate {
                    f[]={"A3\functions_f\Strategic\fn_StrategicMapAnimate.sqf",1179};
                    a[]={"a3_functions_f"};
                };
                class StrategicMapMouseButtonClick {
                    f[]={"A3\functions_f\Strategic\fn_StrategicMapMouseButtonClick.sqf",2263};
                };
                class setUnitInsignia {
                    f[]={"A3\functions_f\Strategic\fn_setUnitInsignia.sqf",1458};
                };
                class getUnitInsignia {
                    f[]={"A3\functions_f\Strategic\fn_getUnitInsignia.sqf",94};
                };
            };
            class Respawn {
                class selectRespawnTemplate {
                    f[]={"A3\functions_f\respawn\fn_selectRespawnTemplate.sqf",5087};
                };
                class initRespawn {
                    f[]={"A3\functions_f\respawn\fn_initRespawn.sqf",1527};
                    a[]={"a3_functions_f"};
                };
                class showRespawnMenu {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenu.sqf",11396};
                };
                class setRespawnInventory {
                    f[]={"A3\functions_f\respawn\fn_setRespawnInventory.sqf",1197};
                };
                class addRespawnInventory {
                    f[]={"A3\functions_f\respawn\fn_addRespawnInventory.sqf",2613};
                };
                class removeRespawnInventory {
                    f[]={"A3\functions_f\respawn\fn_removeRespawnInventory.sqf",389};
                };
                class getRespawnInventories {
                    f[]={"A3\functions_f\respawn\fn_getRespawnInventories.sqf",3584};
                };
                class addRespawnPosition {
                    f[]={"A3\functions_f\respawn\fn_addRespawnPosition.sqf",2052};
                };
                class removeRespawnPosition {
                    f[]={"A3\functions_f\respawn\fn_removeRespawnPosition.sqf",251};
                };
                class getRespawnPositions {
                    f[]={"A3\functions_f\respawn\fn_getRespawnPositions.sqf",3432};
                };
                class getRespawnMarkers {
                    f[]={"A3\functions_f\respawn\fn_getRespawnMarkers.sqf",668};
                };
                class missionRespawnType {
                    f[]={"A3\functions_f\respawn\fn_missionRespawnType.sqf",638};
                };
                class moveToRespawnPosition {
                    f[]={"A3\functions_f\respawn\fn_moveToRespawnPosition.sqf",2747};
                };
                class respawnNone {
                    f[]={"A3\functions_f\respawn\fn_respawnNone.sqf",7077};
                };
                class respawnSpectator {
                    f[]={"A3\functions_f\respawn\fn_respawnSpectator.sqf",1961};
                };
                class respawnInstant {
                    f[]={"A3\functions_f\respawn\fn_respawnInstant.sqf",0};
                };
                class respawnBase {
                    f[]={"A3\functions_f\respawn\fn_respawnBase.sqf",0};
                };
                class respawnGroup {
                    f[]={"A3\functions_f\respawn\fn_respawnGroup.sqf",1151};
                };
                class respawnSide {
                    f[]={"A3\functions_f\respawn\fn_respawnSide.sqf",1151};
                };
                class respawnEndMission {
                    f[]={"A3\functions_f\respawn\fn_respawnEndMission.sqf",490};
                };
                class respawnSeagull {
                    f[]={"A3\functions_f\respawn\fn_respawnSeagull.sqf",2020};
                };
                class respawnTimePenalty {
                    f[]={"A3\functions_f\respawn\fn_respawnTimePenalty.sqf",1377};
                };
                class respawnWave {
                    f[]={"A3\functions_f\respawn\fn_respawnWave.sqf",463};
                };
                class respawnCounter {
                    f[]={"A3\functions_f\respawn\fn_respawnCounter.sqf",742};
                };
                class respawnConfirm {
                    f[]={"A3\functions_f\respawn\fn_respawnConfirm.sqf",541};
                };
                class respawnTickets {
                    f[]={"A3\functions_f\respawn\fn_respawnTickets.sqf",4109};
                };
                class respawnMenuPosition {
                    f[]={"A3\functions_f\respawn\fn_respawnMenuPosition.sqf",1560};
                };
                class respawnMenuInventory {
                    f[]={"A3\functions_f\respawn\fn_respawnMenuInventory.sqf",2833};
                };
                class showRespawnMenuDisableItem {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuDisableItem.sqf",5438};
                };
                class showRespawnMenuDisableItemDraw {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuDisableItemDraw.sqf",2098};
                };
                class showRespawnMenuDisableItemCheck {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuDisableItemCheck.sqf",2709};
                };
                class showRespawnMenuHeader {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuHeader.sqf",6881};
                };
                class showRespawnMenuInventory {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuInventory.sqf",6249};
                };
                class showRespawnMenuInventoryDetails {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuInventoryDetails.sqf",8043};
                };
                class showRespawnMenuInventoryItems {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuInventoryItems.sqf",5633};
                };
                class showRespawnMenuInventoryList {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuInventoryList.sqf",4244};
                };
                class showRespawnMenuInventoryLimit {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuInventoryLimit.sqf",4626};
                };
                class showRespawnMenuInventoryLimitRefresh {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuInventoryLimitRefresh.sqf",2703};
                };
                class showRespawnMenuInventoryLimitRespawn {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuInventoryLimitRespawn.sqf",1632};
                };
                class showRespawnMenuInventoryLoadout {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuInventoryLoadout.sqf",1167};
                };
                class showRespawnMenuInventoryMetadata {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuInventoryMetadata.sqf",3200};
                };
                class showRespawnMenuPosition {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuPosition.sqf",2881};
                };
                class showRespawnMenuPositionList {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuPositionList.sqf",3085};
                };
                class showRespawnMenuPositionMap {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuPositionMap.sqf",1931};
                };
                class showRespawnMenuPositionMapDraw {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuPositionMapDraw.sqf",1909};
                };
                class showRespawnMenuPositionMapHandle {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuPositionMapHandle.sqf",1201};
                };
                class showRespawnMenuPositionMetadata {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuPositionMetadata.sqf",1527};
                };
                class showRespawnMenuPositionName {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuPositionName.sqf",2155};
                };
                class showRespawnMenuPositionRefresh {
                    f[]={"A3\functions_f\respawn\fn_showRespawnMenuPositionRefresh.sqf",3205};
                };
            };
            class Sides {
                class enemySides {
                    f[]={"A3\functions_f\sides\fn_enemySides.sqf",407};
                };
                class friendlySides {
                    f[]={"A3\functions_f\sides\fn_friendlySides.sqf",420};
                };
                class areFriendly {
                    f[]={"A3\functions_f\sides\fn_areFriendly.sqf",392};
                };
                class sideID {
                    f[]={"A3\functions_f\sides\fn_sideID.sqf",328};
                };
                class sideColor {
                    f[]={"A3\functions_f\sides\fn_sideColor.sqf",954};
                };
                class sideName {
                    f[]={"A3\functions_f\sides\fn_sideName.sqf",640};
                };
                class sideType {
                    f[]={"A3\functions_f\sides\fn_sideType.sqf",324};
                };
                class objectSide {
                    f[]={"A3\functions_f\sides\fn_objectSide.sqf",447};
                };
                class playerSideFaction {
                    f[]={"A3\functions_f\sides\fn_playerSideFaction.sqf",428};
                };
                class sideIsFriendly {
                    f[]={"A3\functions_f\sides\fn_sideIsFriendly.sqf",549};
                };
                class sideIsEnemy {
                    f[]={"A3\functions_f\sides\fn_sideIsEnemy.sqf",548};
                };
                class sideNameUnlocalized {
                    f[]={"A3\functions_f\sides\fn_sideNameUnlocalized.sqf",459};
                };
            };
            class Systems {
                class InstructorFigure {
                    f[]={"A3\functions_f\systems\fn_InstructorFigure.sqf",10328};
                    a[]={"a3_functions_f"};
                };
                class bleedTickets {
                    f[]={"A3\functions_f\systems\fn_bleedTickets.sqf",2531};
                };
            };
            class Tasks {
                class setTask {
                    f[]={"A3\functions_f\Tasks\fn_setTask.sqf",13821};
                };
                class setTaskLocal {
                    f[]={"A3\functions_f\Tasks\fn_setTaskLocal.sqf",13016};
                };
                class taskVar {
                    f[]={"A3\functions_f\Tasks\fn_taskVar.sqf",121};
                };
                class deleteTask {
                    f[]={"A3\functions_f\Tasks\fn_deleteTask.sqf",3715};
                };
                class sharedObjectives {
                    f[]={"A3\functions_f\Tasks\fn_sharedObjectives.sqf",7152};
                };
                class taskTypeIcon {
                    f[]={"A3\functions_f\Tasks\fn_taskTypeIcon.sqf",393};
                };
                class taskSetType {
                    f[]={"A3\functions_f\Tasks\fn_taskSetType.sqf",293};
                };
                class taskType {
                    f[]={"A3\functions_f\Tasks\fn_taskType.sqf",903};
                };
                class taskSetAlwaysVisible {
                    f[]={"A3\functions_f\Tasks\fn_taskSetAlwaysVisible.sqf",338};
                    a[]={"a3_functions_f"};
                };
                class taskAlwaysVisible {
                    f[]={"A3\functions_f\Tasks\fn_taskAlwaysVisible.sqf",911};
                    a[]={"a3_functions_f"};
                };
                class taskChildren {
                    f[]={"A3\functions_f\Tasks\fn_taskChildren.sqf",857};
                    a[]={"a3_functions_f"};
                };
                class taskCompleted {
                    f[]={"A3\functions_f\Tasks\fn_taskCompleted.sqf",876};
                    a[]={"a3_functions_f"};
                };
                class taskCreate {
                    f[]={"A3\functions_f\Tasks\fn_taskCreate.sqf",5139};
                    a[]={"a3_functions_f"};
                };
                class taskCurrent {
                    f[]={"A3\functions_f\Tasks\fn_taskCurrent.sqf",290};
                    a[]={"a3_functions_f"};
                };
                class taskDescription {
                    f[]={"A3\functions_f\Tasks\fn_taskDescription.sqf",1926};
                    a[]={"a3_functions_f"};
                };
                class taskDestination {
                    f[]={"A3\functions_f\Tasks\fn_taskDestination.sqf",848};
                    a[]={"a3_functions_f"};
                };
                class taskExists {
                    f[]={"A3\functions_f\Tasks\fn_taskExists.sqf",229};
                    a[]={"a3_functions_f"};
                };
                class taskHint {
                    f[]={"A3\functions_f\Tasks\fn_taskHint.sqf",3672};
                    a[]={"a3_functions_f"};
                };
                class taskParent {
                    f[]={"A3\functions_f\Tasks\fn_taskParent.sqf",863};
                    a[]={"a3_functions_f"};
                };
                class taskReal {
                    f[]={"A3\functions_f\Tasks\fn_taskReal.sqf",212};
                    a[]={"a3_functions_f"};
                };
                class tasksUnit {
                    f[]={"A3\functions_f\Tasks\fn_tasksUnit.sqf",135};
                    a[]={"a3_functions_f"};
                };
                class taskSetCurrent {
                    f[]={"A3\functions_f\Tasks\fn_taskSetCurrent.sqf",173};
                    a[]={"a3_functions_f"};
                };
                class taskSetDescription {
                    f[]={"A3\functions_f\Tasks\fn_taskSetDescription.sqf",165};
                    a[]={"a3_functions_f"};
                };
                class taskSetDestination {
                    f[]={"A3\functions_f\Tasks\fn_taskSetDestination.sqf",247};
                    a[]={"a3_functions_f"};
                };
                class taskSetState {
                    f[]={"A3\functions_f\Tasks\fn_taskSetState.sqf",213};
                    a[]={"a3_functions_f"};
                };
                class taskState {
                    f[]={"A3\functions_f\Tasks\fn_taskState.sqf",772};
                    a[]={"a3_functions_f"};
                };
            };
            class Vehicles {
                class vehicleRoles {
                    f[]={"A3\functions_f\Vehicles\fn_vehicleRoles.sqf",584};
                };
                class missileLaunchPositionFix {
                    f[]={"A3\functions_f\Vehicles\fn_missileLaunchPositionFix.sqf",653};
                    a[]={"a3_functions_f"};
                };
            };
            class Variables {
                class loadFunctions {
                    f[]={"A3\functions_f\Variables\fn_loadFunctions.sqf",894};
                };
                class areEqualNotNil {
                    f[]={"A3\functions_f\Variables\fn_areEqualNotNil.sqf",227};
                };
            };
            class Vectors {
                class vectorDirAndUpRelative {
                    f[]={"A3\functions_f\Vectors\fn_vectorDirAndUpRelative.sqf",479};
                };
                class weaponDirectionRelative {
                    f[]={"A3\functions_f\Vectors\fn_weaponDirectionRelative.sqf",379};
                };
                class multiplySquareMatrixByVector {
                    f[]={"A3\functions_f\Vectors\fn_multiplySquareMatrixByVector.sqf",304};
                };
                class rotateVector3D {
                    f[]={"A3\functions_f\Vectors\fn_rotateVector3D.sqf",1119};
                };
            };
            class Waypoints {
                class scriptedWaypointType {
                    f[]={"A3\functions_f\Waypoints\fn_scriptedWaypointType.sqf",1219};
                };
                class wpLand {
                    f[]={"A3\functions_f\Waypoints\fn_wpLand.sqf",1050};
                };
                class wpPatrol {
                    f[]={"A3\functions_f\Waypoints\fn_wpPatrol.sqf",204};
                };
                class wpRelax {
                    f[]={"A3\functions_f\Waypoints\fn_wpRelax.sqf",204};
                };
                class wpArtillery {
                    f[]={"A3\functions_f\Waypoints\fn_wpArtillery.sqf",1690};
                };
                class wpSuppress {
                    f[]={"A3\functions_f\Waypoints\fn_wpSuppress.sqf",204};
                };
            };
            class Math {
                class bezierLength {
                    f[]={"A3\functions_f\Animation\Math\fn_bezierLength.sqf",562};
                    a[]={"a3_functions_f"};
                };
                class clamp {
                    f[]={"A3\functions_f\Animation\Math\fn_clamp.sqf",173};
                    a[]={"a3_functions_f"};
                };
                class clampVector {
                    f[]={"A3\functions_f\Animation\Math\fn_clampVector.sqf",230};
                    a[]={"a3_functions_f"};
                };
                class deltaTime {
                    f[]={"A3\functions_f\Animation\Math\fn_deltaTime.sqf",275};
                    a[]={"a3_functions_f"};
                };
                class findLookAt {
                    f[]={"A3\functions_f\Animation\Math\fn_findLookAt.sqf",420};
                    a[]={"a3_functions_f"};
                };
                class isEqualVector {
                    f[]={"A3\functions_f\Animation\Math\fn_isEqualVector.sqf",332};
                    a[]={"a3_functions_f"};
                };
                class nearestPoint {
                    f[]={"A3\functions_f\Animation\Math\fn_nearestPoint.sqf",640};
                    a[]={"a3_functions_f"};
                };
                class pow {
                    f[]={"A3\functions_f\Animation\Math\fn_pow.sqf",93};
                    a[]={"a3_functions_f"};
                };
                class pulsate {
                    f[]={"A3\functions_f\Animation\Math\fn_pulsate.sqf",105};
                    a[]={"a3_functions_f"};
                };
                class vectorDivide {
                    f[]={"A3\functions_f\Animation\Math\fn_vectorDivide.sqf",187};
                    a[]={"a3_functions_f"};
                };
            };
            class Interp {
                class berp {
                    f[]={"A3\functions_f\Animation\Interp\fn_berp.sqf",378};
                    a[]={"a3_functions_f"};
                };
                class berpVector {
                    f[]={"A3\functions_f\Animation\Interp\fn_berpVector.sqf",345};
                    a[]={"a3_functions_f"};
                };
                class bezierInterpolate {
                    f[]={"A3\functions_f\Animation\Interp\fn_bezierInterpolate.sqf",561};
                    a[]={"a3_functions_f"};
                };
                class bezierInterpolateVector {
                    f[]={"A3\functions_f\Animation\Interp\fn_bezierInterpolateVector.sqf",533};
                    a[]={"a3_functions_f"};
                };
                class bounceIn {
                    f[]={"A3\functions_f\Animation\Interp\fn_bounceIn.sqf",592};
                    a[]={"a3_functions_f"};
                };
                class bounceOut {
                    f[]={"A3\functions_f\Animation\Interp\fn_bounceOut.sqf",566};
                    a[]={"a3_functions_f"};
                };
                class bounceInOut {
                    f[]={"A3\functions_f\Animation\Interp\fn_bounceInOut.sqf",335};
                    a[]={"a3_functions_f"};
                };
                class bounceInVector {
                    f[]={"A3\functions_f\Animation\Interp\fn_bounceInVector.sqf",335};
                    a[]={"a3_functions_f"};
                };
                class bounceOutVector {
                    f[]={"A3\functions_f\Animation\Interp\fn_bounceOutVector.sqf",338};
                    a[]={"a3_functions_f"};
                };
                class bounceInOutVector {
                    f[]={"A3\functions_f\Animation\Interp\fn_bounceInOutVector.sqf",344};
                    a[]={"a3_functions_f"};
                };
                class clerp {
                    f[]={"A3\functions_f\Animation\Interp\fn_clerp.sqf",517};
                    a[]={"a3_functions_f"};
                };
                class easeIn {
                    f[]={"A3\functions_f\Animation\Interp\fn_easeIn.sqf",265};
                    a[]={"a3_functions_f"};
                };
                class easeOut {
                    f[]={"A3\functions_f\Animation\Interp\fn_easeOut.sqf",281};
                    a[]={"a3_functions_f"};
                };
                class easeInOut {
                    f[]={"A3\functions_f\Animation\Interp\fn_easeInOut.sqf",406};
                    a[]={"a3_functions_f"};
                };
                class easeInOutVector {
                    f[]={"A3\functions_f\Animation\Interp\fn_easeInOutVector.sqf",401};
                    a[]={"a3_functions_f"};
                };
                class easeInVector {
                    f[]={"A3\functions_f\Animation\Interp\fn_easeInVector.sqf",392};
                    a[]={"a3_functions_f"};
                };
                class easeOutVector {
                    f[]={"A3\functions_f\Animation\Interp\fn_easeOutVector.sqf",395};
                    a[]={"a3_functions_f"};
                };
                class hermite {
                    f[]={"A3\functions_f\Animation\Interp\fn_hermite.sqf",213};
                    a[]={"a3_functions_f"};
                };
                class hermiteVector {
                    f[]={"A3\functions_f\Animation\Interp\fn_hermiteVector.sqf",354};
                    a[]={"a3_functions_f"};
                };
                class interpolate {
                    f[]={"A3\functions_f\Animation\Interp\fn_interpolate.sqf",387};
                    a[]={"a3_functions_f"};
                };
                class interpolateConstant {
                    f[]={"A3\functions_f\Animation\Interp\fn_interpolateConstant.sqf",374};
                    a[]={"a3_functions_f"};
                };
                class interpolateVector {
                    f[]={"A3\functions_f\Animation\Interp\fn_interpolateVector.sqf",447};
                    a[]={"a3_functions_f"};
                };
                class interpolateVectorConstant {
                    f[]={"A3\functions_f\Animation\Interp\fn_interpolateVectorConstant.sqf",559};
                    a[]={"a3_functions_f"};
                };
                class inverseLerp {
                    f[]={"A3\functions_f\Animation\Interp\fn_inverseLerp.sqf",191};
                    a[]={"a3_functions_f"};
                };
                class lerp {
                    f[]={"A3\functions_f\Animation\Interp\fn_lerp.sqf",115};
                    a[]={"a3_functions_f"};
                };
                class lerpVector {
                    f[]={"A3\functions_f\Animation\Interp\fn_lerpVector.sqf",169};
                    a[]={"a3_functions_f"};
                };
                class quinticIn {
                    f[]={"A3\functions_f\Animation\Interp\fn_quinticIn.sqf",217};
                    a[]={"a3_functions_f"};
                };
                class quinticOut {
                    f[]={"A3\functions_f\Animation\Interp\fn_quinticOut.sqf",229};
                    a[]={"a3_functions_f"};
                };
                class quinticInOut {
                    f[]={"A3\functions_f\Animation\Interp\fn_quinticInOut.sqf",360};
                    a[]={"a3_functions_f"};
                };
                class quinticInVector {
                    f[]={"A3\functions_f\Animation\Interp\fn_quinticInVector.sqf",338};
                    a[]={"a3_functions_f"};
                };
                class quinticOutVector {
                    f[]={"A3\functions_f\Animation\Interp\fn_quinticOutVector.sqf",341};
                    a[]={"a3_functions_f"};
                };
                class quinticInOutVector {
                    f[]={"A3\functions_f\Animation\Interp\fn_quinticInOutVector.sqf",347};
                    a[]={"a3_functions_f"};
                };
                class slerp {
                    f[]={"A3\functions_f\Animation\Interp\fn_slerp.sqf",397};
                    a[]={"a3_functions_f"};
                };
            };
            class Timeline {
                class timeline_cleanup {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_cleanup.sqf",632};
                    a[]={"a3_functions_f"};
                };
                class timeline_deleted {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_deleted.sqf",519};
                    a[]={"a3_functions_f"};
                };
                class timeline_finish {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_finish.sqf",548};
                    a[]={"a3_functions_f"};
                };
                class timeline_getAlpha {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_getAlpha.sqf",153};
                    a[]={"a3_functions_f"};
                };
                class timeline_getCurrentTime {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_getCurrentTime.sqf",281};
                    a[]={"a3_functions_f"};
                };
                class timeline_getInterpMode {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_getInterpMode.sqf",212};
                    a[]={"a3_functions_f"};
                };
                class timeline_getLength {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_getLength.sqf",232};
                    a[]={"a3_functions_f"};
                };
                class timeline_getPlayFromStart {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_getPlayFromStart.sqf",251};
                    a[]={"a3_functions_f"};
                };
                class timeline_getPlayRate {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_getPlayRate.sqf",236};
                    a[]={"a3_functions_f"};
                };
                class timeline_getPlayTime {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_getPlayTime.sqf",156};
                    a[]={"a3_functions_f"};
                };
                class timeline_getPosition {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_getPosition.sqf",150};
                    a[]={"a3_functions_f"};
                };
                class timeline_getSimulatedCurves {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_getSimulatedCurves.sqf",415};
                    a[]={"a3_functions_f"};
                };
                class timeline_getStopTime {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_getStopTime.sqf",156};
                    a[]={"a3_functions_f"};
                };
                class timeline_getTimeLeft {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_getTimeLeft.sqf",396};
                    a[]={"a3_functions_f"};
                };
                class timeline_init {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_init.sqf",2200};
                    a[]={"a3_functions_f"};
                };
                class timeline_isFinished {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_isFinished.sqf",158};
                    a[]={"a3_functions_f"};
                };
                class timeline_isLooping {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_isLooping.sqf",195};
                    a[]={"a3_functions_f"};
                };
                class timeline_isPaused {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_isPaused.sqf",235};
                    a[]={"a3_functions_f"};
                };
                class timeline_isPlaying {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_isPlaying.sqf",209};
                    a[]={"a3_functions_f"};
                };
                class timeline_isReverse {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_isReverse.sqf",237};
                    a[]={"a3_functions_f"};
                };
                class timeline_play {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_play.sqf",1052};
                    a[]={"a3_functions_f"};
                };
                class timeline_setInterpMode {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_setInterpMode.sqf",258};
                    a[]={"a3_functions_f"};
                };
                class timeline_setLength {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_setLength.sqf",166};
                    a[]={"a3_functions_f"};
                };
                class timeline_setLoop {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_setLoop.sqf",197};
                    a[]={"a3_functions_f"};
                };
                class timeline_setPause {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_setPause.sqf",167};
                    a[]={"a3_functions_f"};
                };
                class timeline_setPlayRate {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_setPlayRate.sqf",162};
                    a[]={"a3_functions_f"};
                };
                class timeline_setPosition {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_setPosition.sqf",202};
                    a[]={"a3_functions_f"};
                };
                class timeline_setReverse {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_setReverse.sqf",205};
                    a[]={"a3_functions_f"};
                };
                class timeline_simulateCurves {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_simulateCurves.sqf",3741};
                    a[]={"a3_functions_f"};
                };
                class timeline_stop {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_stop.sqf",265};
                    a[]={"a3_functions_f"};
                };
                class timeline_tick {
                    f[]={"A3\functions_f\Animation\Timeline\fn_timeline_tick.sqf",2617};
                    a[]={"a3_functions_f"};
                };
            };
            class Timeline3DEN {
                class timeline_edenAttributesChanged {
                    f[]={"A3\functions_f\Animation\Timeline\3DEN\fn_timeline_edenAttributesChanged.sqf",213};
                    a[]={"a3_functions_f"};
                };
                class timeline_edenConnectionChanged {
                    f[]={"A3\functions_f\Animation\Timeline\3DEN\fn_timeline_edenConnectionChanged.sqf",107};
                    a[]={"a3_functions_f"};
                };
                class timeline_edenDeleted {
                    f[]={"A3\functions_f\Animation\Timeline\3DEN\fn_timeline_edenDeleted.sqf",152};
                    a[]={"a3_functions_f"};
                };
                class timeline_edenInit {
                    f[]={"A3\functions_f\Animation\Timeline\3DEN\fn_timeline_edenInit.sqf",382};
                    a[]={"a3_functions_f"};
                };
                class timeline_edenIsSelected {
                    f[]={"A3\functions_f\Animation\Timeline\3DEN\fn_timeline_edenIsSelected.sqf",331};
                    a[]={"a3_functions_f"};
                };
                class timeline_edenDragged {
                    f[]={"A3\functions_f\Animation\Timeline\3DEN\fn_timeline_edenDragged.sqf",172};
                    a[]={"a3_functions_f"};
                };
            };
            class Curve {
                class richCurve_compute {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_compute.sqf",891};
                    a[]={"a3_functions_f"};
                };
                class richCurve_computeCurveArcLength {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_computeCurveArcLength.sqf",1327};
                    a[]={"a3_functions_f"};
                };
                class richCurve_computeKeys {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_computeKeys.sqf",613};
                    a[]={"a3_functions_f"};
                };
                class richCurve_computeOwnerTimeline {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_computeOwnerTimeline.sqf",457};
                    a[]={"a3_functions_f"};
                };
                class richCurve_computeSimulatedObjects {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_computeSimulatedObjects.sqf",545};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getCurveLength {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getCurveLength.sqf",153};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getCurvePoints {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getCurvePoints.sqf",146};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getCurveValueFloat {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getCurveValueFloat.sqf",2180};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getCurveValueVector {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getCurveValueVector.sqf",3185};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getFirstKey {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getFirstKey.sqf",241};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getKeyFromIndex {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getKeyFromIndex.sqf",334};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getKeyIndex {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getKeyIndex.sqf",272};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getKeys {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getKeys.sqf",141};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getKeysAtTime {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getKeysAtTime.sqf",1201};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getKeyTime {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getKeyTime.sqf",523};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getLastKey {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getLastKey.sqf",310};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getLookAtPosition {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getLookAtPosition.sqf",494};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getNextKey {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getNextKey.sqf",444};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getOrientationMode {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getOrientationMode.sqf",236};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getOwnerTimeline {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getOwnerTimeline.sqf",160};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getPreviousKey {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getPreviousKey.sqf",433};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getSimulatedObjects {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getSimulatedObjects.sqf",153};
                    a[]={"a3_functions_f"};
                };
                class richCurve_getTimeRange {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_getTimeRange.sqf",487};
                    a[]={"a3_functions_f"};
                };
                class richCurve_isTimeInSeconds {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_isTimeInSeconds.sqf",197};
                    a[]={"a3_functions_f"};
                };
                class richCurve_numKeys {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_numKeys.sqf",156};
                    a[]={"a3_functions_f"};
                };
                class richCurve_reset {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_reset.sqf",402};
                    a[]={"a3_functions_f"};
                };
                class richCurve_resetKeysEventState {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_resetKeysEventState.sqf",201};
                    a[]={"a3_functions_f"};
                };
                class richCurve_setKeys {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_setKeys.sqf",151};
                    a[]={"a3_functions_f"};
                };
                class richCurve_setOrientationMode {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\fn_richCurve_setOrientationMode.sqf",279};
                    a[]={"a3_functions_f"};
                };
            };
            class Curve3DEN {
                class richCurve_edenAttributesChanged {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\3DEN\fn_richCurve_edenAttributesChanged.sqf",180};
                    a[]={"a3_functions_f"};
                };
                class richCurve_edenBakeCurve3D {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\3DEN\fn_richCurve_edenBakeCurve3D.sqf",569};
                    a[]={"a3_functions_f"};
                };
                class richCurve_edenComputeNearestSegment {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\3DEN\fn_richCurve_edenComputeNearestSegment.sqf",831};
                    a[]={"a3_functions_f"};
                };
                class richCurve_edenConnectionChanged {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\3DEN\fn_richCurve_edenConnectionChanged.sqf",116};
                    a[]={"a3_functions_f"};
                };
                class richCurve_edenDrawControlPoints3D {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\3DEN\fn_richCurve_edenDrawControlPoints3D.sqf",702};
                    a[]={"a3_functions_f"};
                };
                class richCurve_edenDrawCurve3D {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\3DEN\fn_richCurve_edenDrawCurve3D.sqf",490};
                    a[]={"a3_functions_f"};
                };
                class richCurve_edenIsSelected {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\3DEN\fn_richCurve_edenIsSelected.sqf",306};
                    a[]={"a3_functions_f"};
                };
                class richCurve_edenMarkStateDirty {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\3DEN\fn_richCurve_edenMarkStateDirty.sqf",200};
                    a[]={"a3_functions_f"};
                };
                class richCurve_edenTick {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\3DEN\fn_richCurve_edenTick.sqf",2019};
                    a[]={"a3_functions_f"};
                };
                class richCurve_edenDragged {
                    f[]={"A3\functions_f\Animation\Curve\RichCurve\3DEN\fn_richCurve_edenDragged.sqf",209};
                    a[]={"a3_functions_f"};
                };
            };
            class Key {
                class key_compute {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_compute.sqf",470};
                    a[]={"a3_functions_f"};
                };
                class key_computeOwnerCurve {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_computeOwnerCurve.sqf",412};
                    a[]={"a3_functions_f"};
                };
                class key_computeTime {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_computeTime.sqf",288};
                    a[]={"a3_functions_f"};
                };
                class key_getArriveControlPoint {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_getArriveControlPoint.sqf",506};
                    a[]={"a3_functions_f"};
                };
                class key_getArriveTangent {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_getArriveTangent.sqf",385};
                    a[]={"a3_functions_f"};
                };
                class key_getArriveTangentWeight {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_getArriveTangentWeight.sqf",201};
                    a[]={"a3_functions_f"};
                };
                class key_getConfigTime {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_getConfigTime.sqf",203};
                    a[]={"a3_functions_f"};
                };
                class key_getFOV {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_getFOV.sqf",183};
                    a[]={"a3_functions_f"};
                };
                class key_getInterpMode {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_getInterpMode.sqf",197};
                    a[]={"a3_functions_f"};
                };
                class key_getLeaveControlPoint {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_getLeaveControlPoint.sqf",509};
                    a[]={"a3_functions_f"};
                };
                class key_getLeaveTangent {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_getLeaveTangent.sqf",382};
                    a[]={"a3_functions_f"};
                };
                class key_getLeaveTangentWeight {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_getLeaveTangentWeight.sqf",199};
                    a[]={"a3_functions_f"};
                };
                class key_getOwnerCurve {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_getOwnerCurve.sqf",151};
                    a[]={"a3_functions_f"};
                };
                class key_getTime {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_getTime.sqf",80};
                    a[]={"a3_functions_f"};
                };
                class key_getValue {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_getValue.sqf",427};
                    a[]={"a3_functions_f"};
                };
                class key_isFloat {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_isFloat.sqf",119};
                    a[]={"a3_functions_f"};
                };
                class key_isVector {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_isVector.sqf",204};
                    a[]={"a3_functions_f"};
                };
                class key_setArriveTangent {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_setArriveTangent.sqf",270};
                    a[]={"a3_functions_f"};
                };
                class key_setArriveTangentWeight {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_setArriveTangentWeight.sqf",298};
                    a[]={"a3_functions_f"};
                };
                class key_setInterpMode {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_setInterpMode.sqf",245};
                    a[]={"a3_functions_f"};
                };
                class key_setLeaveTangent {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_setLeaveTangent.sqf",263};
                    a[]={"a3_functions_f"};
                };
                class key_setLeaveTangentWeight {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_setLeaveTangentWeight.sqf",291};
                    a[]={"a3_functions_f"};
                };
                class key_setTime {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_setTime.sqf",314};
                    a[]={"a3_functions_f"};
                };
                class key_setValue {
                    f[]={"A3\functions_f\Animation\Curve\Key\fn_key_setValue.sqf",740};
                    a[]={"a3_functions_f"};
                };
            };
            class Key3DEN {
                class key_edenAreControlPointsLocked {
                    f[]={"A3\functions_f\Animation\Curve\Key\3DEN\fn_key_edenAreControlPointsLocked.sqf",196};
                    a[]={"a3_functions_f"};
                };
                class key_edenAttributesChanged {
                    f[]={"A3\functions_f\Animation\Curve\Key\3DEN\fn_key_edenAttributesChanged.sqf",308};
                    a[]={"a3_functions_f"};
                };
                class key_edenConnectionChanged {
                    f[]={"A3\functions_f\Animation\Curve\Key\3DEN\fn_key_edenConnectionChanged.sqf",212};
                    a[]={"a3_functions_f"};
                };
                class key_edenIsSelected {
                    f[]={"A3\functions_f\Animation\Curve\Key\3DEN\fn_key_edenIsSelected.sqf",542};
                    a[]={"a3_functions_f"};
                };
                class key_edenRegisteredToWorld {
                    f[]={"A3\functions_f\Animation\Curve\Key\3DEN\fn_key_edenRegisteredToWorld.sqf",271};
                    a[]={"a3_functions_f"};
                };
                class key_edenUnregisteredFromWorld {
                    f[]={"A3\functions_f\Animation\Curve\Key\3DEN\fn_key_edenUnregisteredFromWorld.sqf",212};
                    a[]={"a3_functions_f"};
                };
                class key_edenDragged {
                    f[]={"A3\functions_f\Animation\Curve\Key\3DEN\fn_key_edenDragged.sqf",309};
                    a[]={"a3_functions_f"};
                };
            };
            class ControlPoint {
                class controlPoint_compute {
                    f[]={"A3\functions_f\Animation\Curve\ControlPoint\fn_controlPoint_compute.sqf",249};
                    a[]={"a3_functions_f"};
                };
                class controlPoint_computeOwnerKey {
                    f[]={"A3\functions_f\Animation\Curve\ControlPoint\fn_controlPoint_computeOwnerKey.sqf",432};
                    a[]={"a3_functions_f"};
                };
                class controlPoint_getOwnerKey {
                    f[]={"A3\functions_f\Animation\Curve\ControlPoint\fn_controlPoint_getOwnerKey.sqf",176};
                    a[]={"a3_functions_f"};
                };
                class controlPoint_isArrive {
                    f[]={"A3\functions_f\Animation\Curve\ControlPoint\fn_controlPoint_isArrive.sqf",269};
                    a[]={"a3_functions_f"};
                };
                class controlPoint_setIsArrive {
                    f[]={"A3\functions_f\Animation\Curve\ControlPoint\fn_controlPoint_setIsArrive.sqf",368};
                    a[]={"a3_functions_f"};
                };
            };
            class ControlPoint3DEN {
                class controlPoint_edenAttributesChanged {
                    f[]={"A3\functions_f\Animation\Curve\ControlPoint\3DEN\fn_controlPoint_edenAttributesChanged.sqf",517};
                    a[]={"a3_functions_f"};
                };
                class controlPoint_edenConnectionChanged {
                    f[]={"A3\functions_f\Animation\Curve\ControlPoint\3DEN\fn_controlPoint_edenConnectionChanged.sqf",378};
                    a[]={"a3_functions_f"};
                };
                class controlPoint_edenIsSelected {
                    f[]={"A3\functions_f\Animation\Curve\ControlPoint\3DEN\fn_controlPoint_edenIsSelected.sqf",103};
                    a[]={"a3_functions_f"};
                };
                class controlPoint_edenRegisteredToWorld {
                    f[]={"A3\functions_f\Animation\Curve\ControlPoint\3DEN\fn_controlPoint_edenRegisteredToWorld.sqf",443};
                    a[]={"a3_functions_f"};
                };
                class controlPoint_edenUnregisteredFromWorld {
                    f[]={"A3\functions_f\Animation\Curve\ControlPoint\3DEN\fn_controlPoint_edenUnregisteredFromWorld.sqf",384};
                    a[]={"a3_functions_f"};
                };
                class controlPoint_edenDragged {
                    f[]={"A3\functions_f\Animation\Curve\ControlPoint\3DEN\fn_controlPoint_edenDragged.sqf",1085};
                    a[]={"a3_functions_f"};
                };
            };
            class Camera {
                class camera_deleted {
                    f[]={"A3\functions_f\Animation\Camera\fn_camera_deleted.sqf",646};
                    a[]={"a3_functions_f"};
                };
                class camera_getCam {
                    f[]={"A3\functions_f\Animation\Camera\fn_camera_getCam.sqf",81};
                    a[]={"a3_functions_f"};
                };
                class camera_getCinemaBordersEnabled {
                    f[]={"A3\functions_f\Animation\Camera\fn_camera_getCinemaBordersEnabled.sqf",248};
                    a[]={"a3_functions_f"};
                };
                class camera_getFOV {
                    f[]={"A3\functions_f\Animation\Camera\fn_camera_getFOV.sqf",218};
                    a[]={"a3_functions_f"};
                };
                class camera_getFocus {
                    f[]={"A3\functions_f\Animation\Camera\fn_camera_getFocus.sqf",310};
                    a[]={"a3_functions_f"};
                };
                class camera_getHUDEnabled {
                    f[]={"A3\functions_f\Animation\Camera\fn_camera_getHUDEnabled.sqf",232};
                    a[]={"a3_functions_f"};
                };
                class camera_getVisionMode {
                    f[]={"A3\functions_f\Animation\Camera\fn_camera_getVisionMode.sqf",226};
                    a[]={"a3_functions_f"};
                };
                class camera_init {
                    f[]={"A3\functions_f\Animation\Camera\fn_camera_init.sqf",977};
                    a[]={"a3_functions_f"};
                };
                class camera_setCam {
                    f[]={"A3\functions_f\Animation\Camera\fn_camera_setCam.sqf",314};
                    a[]={"a3_functions_f"};
                };
                class camera_setCinemaBordersEnabled {
                    f[]={"A3\functions_f\Animation\Camera\fn_camera_setCinemaBordersEnabled.sqf",283};
                    a[]={"a3_functions_f"};
                };
                class camera_setFOV {
                    f[]={"A3\functions_f\Animation\Camera\fn_camera_setFOV.sqf",186};
                    a[]={"a3_functions_f"};
                };
                class camera_setFocus {
                    f[]={"A3\functions_f\Animation\Camera\fn_camera_setFocus.sqf",160};
                    a[]={"a3_functions_f"};
                };
                class camera_setHUDEnabled {
                    f[]={"A3\functions_f\Animation\Camera\fn_camera_setHUDEnabled.sqf",265};
                    a[]={"a3_functions_f"};
                };
                class camera_setVisionMode {
                    f[]={"A3\functions_f\Animation\Camera\fn_camera_setVisionMode.sqf",567};
                    a[]={"a3_functions_f"};
                };
                class camera_tick {
                    f[]={"A3\functions_f\Animation\Camera\fn_camera_tick.sqf",655};
                    a[]={"a3_functions_f"};
                };
            };
            class Camera3DEN {
                class camera_edenAttributesChanged {
                    f[]={"A3\functions_f\Animation\Camera\3DEN\fn_camera_edenAttributesChanged.sqf",417};
                    a[]={"a3_functions_f"};
                };
                class camera_edenConnectionChanged {
                    f[]={"A3\functions_f\Animation\Camera\3DEN\fn_camera_edenConnectionChanged.sqf",68};
                    a[]={"a3_functions_f"};
                };
                class camera_edenDeleted {
                    f[]={"A3\functions_f\Animation\Camera\3DEN\fn_camera_edenDeleted.sqf",240};
                    a[]={"a3_functions_f"};
                };
                class camera_edenInit {
                    f[]={"A3\functions_f\Animation\Camera\3DEN\fn_camera_edenInit.sqf",432};
                    a[]={"a3_functions_f"};
                };
                class camera_edenIsSelected {
                    f[]={"A3\functions_f\Animation\Camera\3DEN\fn_camera_edenIsSelected.sqf",166};
                    a[]={"a3_functions_f"};
                };
                class camera_edenRegisteredToWorld {
                    f[]={"A3\functions_f\Animation\Camera\3DEN\fn_camera_edenRegisteredToWorld.sqf",0};
                    a[]={"a3_functions_f"};
                };
                class camera_edenReset {
                    f[]={"A3\functions_f\Animation\Camera\3DEN\fn_camera_edenReset.sqf",385};
                    a[]={"a3_functions_f"};
                };
                class camera_edenSelectionChanged {
                    f[]={"A3\functions_f\Animation\Camera\3DEN\fn_camera_edenSelectionChanged.sqf",1825};
                    a[]={"a3_functions_f"};
                };
                class camera_edenUnregisteredFromWorld {
                    f[]={"A3\functions_f\Animation\Camera\3DEN\fn_camera_edenUnregisteredFromWorld.sqf",493};
                    a[]={"a3_functions_f"};
                };
            };
            class 3DEN {
                class 3den_init {
                    f[]={"A3\functions_f\Animation\3DEN\fn_3den_init.sqf",300};
                    a[]={"a3_functions_f"};
                };
                class 3den_onKeyDown {
                    f[]={"A3\functions_f\Animation\3DEN\fn_3den_onKeyDown.sqf",2684};
                    a[]={"a3_functions_f"};
                };
                class 3den_onKeyUp {
                    f[]={"A3\functions_f\Animation\3DEN\fn_3den_onKeyUp.sqf",835};
                    a[]={"a3_functions_f"};
                };
                class 3den_onSelectionChange {
                    f[]={"A3\functions_f\Animation\3DEN\fn_3den_onSelectionChange.sqf",1454};
                    a[]={"a3_functions_f"};
                };
                class 3den_onMissionLoad {
                    f[]={"A3\functions_f\Animation\3DEN\fn_3den_onMissionLoad.sqf",129};
                    a[]={"a3_functions_f"};
                };
                class 3den_onMissionNew {
                    f[]={"A3\functions_f\Animation\3DEN\fn_3den_onMissionNew.sqf",47};
                    a[]={"a3_functions_f"};
                };
                class 3den_onMissionPreviewEnd {
                    f[]={"A3\functions_f\Animation\3DEN\fn_3den_onMissionPreviewEnd.sqf",129};
                    a[]={"a3_functions_f"};
                };
            };
            class KeyframeAnimation {
                class keyframeAnimation_deltaTime {
                    f[]={"A3\functions_f\Animation\KeyframeAnimation\fn_keyframeAnimation_deltaTime.sqf",183};
                    a[]={"a3_functions_f"};
                };
                class keyframeAnimation_init {
                    f[]={"A3\functions_f\Animation\KeyframeAnimation\fn_keyframeAnimation_init.sqf",152};
                    a[]={"a3_functions_f"};
                };
            };
            class MapAnimation {
                class mapAnimAdd {
                    f[]={"A3\functions_f\Animation\MapAnimation\fn_mapAnimAdd.sqf",3912};
                };
                class mapAnimClear {
                    f[]={"A3\functions_f\Animation\MapAnimation\fn_mapAnimClear.sqf",437};
                };
                class mapAnimDone {
                    f[]={"A3\functions_f\Animation\MapAnimation\fn_mapAnimDone.sqf",87};
                };
            };
            class ModuleFiringDrills {
                class moduleFDCPClear {
                    f[]={"A3\modules_f_beta\FiringDrills\functions\fn_moduleFDCPClear.sqf",2460};
                    a[]={"a3_modules_f_beta_firingdrills"};
                };
                class moduleFDStatsClear {
                    f[]={"A3\modules_f_beta\FiringDrills\functions\fn_moduleFDStatsClear.sqf",743};
                    a[]={"a3_modules_f_beta_firingdrills"};
                };
                class moduleFDSkeetDestruction {
                    f[]={"A3\modules_f_beta\FiringDrills\functions\fn_moduleFDSkeetDestruction.sqf",3429};
                    a[]={"a3_modules_f_beta_firingdrills"};
                };
                class moduleFDFadeMarker {
                    f[]={"A3\modules_f_beta\FiringDrills\functions\fn_moduleFDFadeMarker.sqf",356};
                    a[]={"a3_modules_f_beta_firingdrills"};
                };
            };
            class MissionTypes {
            };
            class ModuleTimeTrials {
                class moduleTTCPTrigger {
                    f[]={"A3\modules_f_kart\TimeTrials\functions\fn_moduleTTCPTrigger.sqf",3534};
                    a[]={"a3_modules_f_kart_timetrials"};
                    m[]={"kart"};
                };
                class moduleTTStatsClear {
                    f[]={"A3\modules_f_kart\TimeTrials\functions\fn_moduleTTStatsClear.sqf",622};
                    a[]={"a3_modules_f_kart_timetrials"};
                    m[]={"kart"};
                };
                class moduleTTCPTriggerBehind {
                    f[]={"A3\modules_f_kart\TimeTrials\functions\fn_moduleTTCPTriggerBehind.sqf",300};
                    a[]={"a3_modules_f_kart_timetrials"};
                    m[]={"kart"};
                };
            };
            class ModuleFiringDrills_Mark {
                class moduleFDBalloonAirDestruction {
                    f[]={"A3\Modules_F_Mark\FiringDrills\functions\fn_moduleFDBalloonAirDestruction.sqf",1764};
                    a[]={"a3_modules_f_mark_firingdrills"};
                    m[]={"mark"};
                };
                class moduleFDBalloonWaterDestruction {
                    f[]={"A3\Modules_F_Mark\FiringDrills\functions\fn_moduleFDBalloonWaterDestruction.sqf",4108};
                    a[]={"a3_modules_f_mark_firingdrills"};
                    m[]={"mark"};
                };
            };
        };
        class HSim {
            class Ambient {
                class ambientBlacklist {
                    f[]={"A3\functions_f\ambient\fn_ambientBlacklist.sqf",534};
                    a[]={"a3_functions_f"};
                };
                class ambientBlacklistAdd {
                    f[]={"A3\functions_f\ambient\fn_ambientBlacklistAdd.sqf",569};
                    a[]={"a3_functions_f"};
                };
                class ambientPostprocess {
                    f[]={"A3\functions_f\ambient\fn_ambientPostprocess.sqf",1115};
                    a[]={"a3_functions_f"};
                };
            };
            class Conversations {
                class kbTell {
                    f[]={"A3\functions_f\Conversations\fn_kbTell.sqf",11126};
                    a[]={"a3_functions_f"};
                };
                class kbTellLocal {
                    f[]={"A3\functions_f\Conversations\fn_kbTellLocal.sqf",2256};
                };
                class kbMenu {
                    f[]={"A3\functions_f\Conversations\fn_kbMenu.sqf",1600};
                    a[]={"a3_functions_f"};
                };
                class kbSentence {
                    f[]={"A3\functions_f\Conversations\fn_kbSentence.sqf",524};
                    a[]={"a3_functions_f"};
                };
                class kbTopicConfig {
                    f[]={"A3\functions_f\Conversations\fn_kbTopicConfig.sqf",691};
                    a[]={"a3_functions_f"};
                };
                class kbPriority {
                    f[]={"A3\functions_f\Conversations\fn_kbPriority.sqf",876};
                    a[]={"a3_functions_f"};
                };
                class kbCanSpeak {
                    f[]={"A3\functions_f\Conversations\fn_kbCanSpeak.sqf",120};
                    a[]={"a3_functions_f"};
                };
                class kbSkip {
                    f[]={"A3\functions_f\Conversations\fn_kbSkip.sqf",774};
                    a[]={"a3_functions_f"};
                };
                class kbCreateDummy {
                    f[]={"A3\functions_f\Conversations\fn_kbCreateDummy.sqf",653};
                    a[]={"a3_functions_f"};
                };
                class kbIsSpeaking {
                    f[]={"A3\functions_f\Conversations\fn_kbIsSpeaking.sqf",99};
                    a[]={"a3_functions_f"};
                };
                class genericSentence {
                    f[]={"A3\functions_f\Conversations\fn_genericSentence.sqf",1657};
                    a[]={"a3_functions_f"};
                };
                class genericSentenceInit {
                    f[]={"A3\functions_f\Conversations\fn_genericSentenceInit.sqf",346};
                    a[]={"a3_functions_f"};
                };
            };
            class Database {
                class dbSymbolClass {
                    f[]={"A3\functions_f\database\fn_dbSymbolClass.sqf",3};
                    a[]={"a3_functions_f"};
                };
                class dbSymbolValue {
                    f[]={"A3\functions_f\database\fn_dbSymbolValue.sqf",3};
                    a[]={"a3_functions_f"};
                };
                class dbisClass {
                    f[]={"A3\functions_f\database\fn_dbisClass.sqf",249};
                    a[]={"a3_functions_f"};
                };
                class dbisValue {
                    f[]={"A3\functions_f\database\fn_dbisValue.sqf",249};
                    a[]={"a3_functions_f"};
                };
                class dbClassId {
                    f[]={"A3\functions_f\database\fn_dbClassId.sqf",558};
                    a[]={"a3_functions_f"};
                };
                class dbClassSet {
                    f[]={"A3\functions_f\database\fn_dbClassSet.sqf",965};
                    a[]={"a3_functions_f"};
                };
                class dbClassCheck {
                    f[]={"A3\functions_f\database\fn_dbClassCheck.sqf",57};
                    a[]={"a3_functions_f"};
                };
                class dbClassIndex {
                    f[]={"A3\functions_f\database\fn_dbClassIndex.sqf",443};
                    a[]={"a3_functions_f"};
                };
                class dbClassRemove {
                    f[]={"A3\functions_f\database\fn_dbClassRemove.sqf",913};
                    a[]={"a3_functions_f"};
                };
                class dbClassReturn {
                    f[]={"A3\functions_f\database\fn_dbClassReturn.sqf",455};
                    a[]={"a3_functions_f"};
                };
                class dbClassList {
                    f[]={"A3\functions_f\database\fn_dbClassList.sqf",301};
                    a[]={"a3_functions_f"};
                };
                class dbValueId {
                    f[]={"A3\functions_f\database\fn_dbValueId.sqf",567};
                    a[]={"a3_functions_f"};
                };
                class dbValueSet {
                    f[]={"A3\functions_f\database\fn_dbValueSet.sqf",971};
                    a[]={"a3_functions_f"};
                };
                class dbValueCheck {
                    f[]={"A3\functions_f\database\fn_dbValueCheck.sqf",57};
                    a[]={"a3_functions_f"};
                };
                class dbValueIndex {
                    f[]={"A3\functions_f\database\fn_dbValueIndex.sqf",443};
                    a[]={"a3_functions_f"};
                };
                class dbValueRemove {
                    f[]={"A3\functions_f\database\fn_dbValueRemove.sqf",917};
                    a[]={"a3_functions_f"};
                };
                class dbValueReturn {
                    f[]={"A3\functions_f\database\fn_dbValueReturn.sqf",556};
                    a[]={"a3_functions_f"};
                };
                class dbValueList {
                    f[]={"A3\functions_f\database\fn_dbValueList.sqf",301};
                    a[]={"a3_functions_f"};
                };
                class dbImportConfig {
                    f[]={"A3\functions_f\database\fn_dbImportConfig.sqf",321};
                    a[]={"a3_functions_f"};
                };
                class dbImportXML {
                    f[]={"A3\functions_f\database\fn_dbImportXML.sqf",5148};
                    a[]={"a3_functions_f"};
                };
                class dbConfigPath {
                    f[]={"A3\functions_f\database\fn_dbConfigPath.sqf",180};
                    a[]={"a3_functions_f"};
                };
                class dbPrint {
                    f[]={"A3\functions_f\database\fn_dbPrint.sqf",1060};
                    a[]={"a3_functions_f"};
                };
            };
            class Debug {
                class error {
                    f[]={"A3\functions_f\Debug\fn_error.sqf",1453};
                    a[]={"a3_functions_f"};
                };
                class errorMsg {
                    f[]={"A3\functions_f\Debug\fn_errorMsg.sqf",723};
                    a[]={"a3_functions_f"};
                };
                class halt {
                    f[]={"A3\functions_f\Debug\fn_halt.sqf",396};
                    a[]={"a3_functions_f"};
                };
                class param {
                    f[]={"A3\functions_f\Debug\fn_param.sqf",1357};
                    a[]={"a3_functions_f"};
                };
                class paramIn {
                    f[]={"A3\functions_f\Debug\fn_paramIn.sqf",1358};
                    a[]={"a3_functions_f"};
                };
                class log {
                    f[]={"A3\functions_f\Debug\fn_log.sqf",627};
                    a[]={"a3_functions_f"};
                };
                class functionsDebug {
                    f[]={"A3\functions_f\Debug\fn_functionsDebug.sqf",394};
                    a[]={"a3_functions_f"};
                };
                class functionPath {
                    f[]={"A3\functions_f\Debug\fn_functionPath.sqf",345};
                    a[]={"a3_functions_f"};
                };
                class codePerformance {
                    f[]={"A3\functions_f\Debug\fn_codePerformance.sqf",2315};
                    a[]={"a3_functions_f"};
                };
                class GC {
                    f[]={"A3\functions_f\Debug\fn_GC.sqf",890};
                    a[]={"a3_functions_f"};
                };
                class shutdown {
                    f[]={"A3\functions_f\Debug\fn_shutdown.sqf",145};
                    a[]={"a3_functions_f"};
                };
            };
            class GUI {
                class getIDD {
                    f[]={"A3\functions_f\GUI\fn_getIDD.sqf",70};
                    a[]={"a3_functions_f"};
                };
                class getIDC {
                    f[]={"A3\functions_f\GUI\fn_getIDC.sqf",557};
                    a[]={"a3_functions_f"};
                };
                class GUIeditor {
                    f[]={"A3\functions_f\GUI\fn_GUIeditor.sqf",145};
                    a[]={"a3_functions_f"};
                };
                class GUIbackground {
                    f[]={"A3\functions_f\GUI\fn_GUIbackground.sqf",770};
                    a[]={"a3_functions_f"};
                };
                class GUImessage {
                    f[]={"A3\functions_f\GUI\fn_GUImessage.sqf",7023};
                    a[]={"a3_functions_f"};
                };
                class GUIhint {
                    f[]={"A3\functions_f\GUI\fn_GUIhint.sqf",17937};
                    a[]={"a3_functions_f"};
                };
                class GUIgrid {
                    f[]={"A3\functions_f\GUI\fn_GUIgrid.sqf",573};
                    a[]={"a3_functions_f"};
                };
                class GUIgridToProfile {
                    f[]={"A3\functions_f\GUI\fn_GUIgridToProfile.sqf",1629};
                    a[]={"a3_functions_f"};
                };
                class GUInewsfeed {
                    f[]={"A3\functions_f\GUI\fn_GUInewsfeed.sqf",1079};
                    a[]={"a3_functions_f"};
                };
                class PIP {
                    f[]={"A3\functions_f\GUI\fn_PIP.sqf",3893};
                    a[]={"a3_functions_f"};
                };
                class camFollow {
                    f[]={"A3\functions_f\GUI\fn_camFollow.sqf",726};
                    a[]={"a3_functions_f"};
                };
                class displayColorSet {
                    f[]={"A3\functions_f\GUI\fn_displayColorSet.sqf",1505};
                    a[]={"a3_functions_f"};
                };
                class displayColorGet {
                    f[]={"A3\functions_f\GUI\fn_displayColorGet.sqf",3356};
                    a[]={"a3_functions_f"};
                };
                class displayControls {
                    f[]={"A3\functions_f\GUI\fn_displayControls.sqf",1141};
                    a[]={"a3_functions_f"};
                };
                class displayResize {
                    f[]={"A3\functions_f\GUI\fn_displayResize.sqf",3421};
                    a[]={"a3_functions_f"};
                };
                class displayClouds {
                    f[]={"A3\functions_f\GUI\fn_displayClouds.sqf",2170};
                    a[]={"a3_functions_f"};
                };
                class displayLoading {
                    f[]={"A3\functions_f\GUI\fn_displayLoading.sqf",4300};
                    a[]={"a3_functions_f"};
                };
                class displayMission {
                    f[]={"A3\functions_f\GUI\fn_displayMission.sqf",473};
                    a[]={"a3_functions_f"};
                };
                class overviewTimeTrial {
                    f[]={"A3\functions_f\GUI\fn_overviewTimeTrial.sqf",2000};
                    a[]={"a3_functions_f"};
                };
                class overviewMission {
                    f[]={"A3\functions_f\GUI\fn_overviewMission.sqf",2461};
                    a[]={"a3_functions_f"};
                };
                class overviewAuthor {
                    f[]={"A3\functions_f\GUI\fn_overviewAuthor.sqf",861};
                    a[]={"a3_functions_f"};
                };
                class overviewTerrain {
                    f[]={"A3\functions_f\GUI\fn_overviewTerrain.sqf",799};
                    a[]={"a3_functions_f"};
                };
                class overviewDifficulty {
                    f[]={"A3\functions_f\GUI\fn_overviewDifficulty.sqf",1291};
                    a[]={"a3_functions_f"};
                };
                class diaryHints {
                    f[]={"A3\functions_f\GUI\fn_diaryHints.sqf",2343};
                    a[]={"a3_functions_f"};
                };
                class diaryMaps {
                    f[]={"A3\functions_f\GUI\fn_diaryMaps.sqf",1646};
                    a[]={"a3_functions_f"};
                };
                class HUDLimits {
                    f[]={"A3\functions_f\GUI\fn_HUDLimits.sqf",1624};
                    a[]={"a3_functions_f"};
                };
                class credits {
                    f[]={"A3\functions_f\GUI\fn_credits.sqf",1312};
                    a[]={"a3_functions_f"};
                };
                class titleText {
                    f[]={"A3\functions_f\GUI\fn_titleText.sqf",304};
                    a[]={"a3_functions_f"};
                };
                class ctrlTextHeight {
                    f[]={"A3\functions_f\GUI\fn_ctrlTextHeight.sqf",264};
                    a[]={"a3_functions_f"};
                };
                class shakeGauges {
                    f[]={"A3\functions_f\GUI\fn_shakeGauges.sqf",1001};
                    a[]={"a3_functions_f"};
                };
            };
            class Helicopters {
                class helicopterDamage {
                    f[]={"A3\functions_f\helicopters\fn_helicopterDamage.sqf",313};
                    a[]={"a3_functions_f"};
                };
                class helicopterSeat {
                    f[]={"A3\functions_f\helicopters\fn_helicopterSeat.sqf",262};
                    a[]={"a3_functions_f"};
                };
                class helicopterSeatMove {
                    f[]={"A3\functions_f\helicopters\fn_helicopterSeatMove.sqf",1665};
                    a[]={"a3_functions_f"};
                };
                class helicopterType {
                    f[]={"A3\functions_f\helicopters\fn_helicopterType.sqf",421};
                    a[]={"a3_functions_f"};
                };
                class helicopterGetHitpoints {
                    f[]={"A3\functions_f\helicopters\fn_helicopterGetHitpoints.sqf",486};
                    a[]={"a3_functions_f"};
                };
            };
            class Map {
                class KMLimport {
                    f[]={"A3\functions_f\Map\fn_KMLimport.sqf",2209};
                    a[]={"a3_functions_f"};
                };
                class noFlyZonesCreate {
                    f[]={"A3\functions_f\Map\fn_noFlyZonesCreate.sqf",4699};
                    a[]={"a3_functions_f"};
                };
                class noFlyZonesExport {
                    f[]={"A3\functions_f\Map\fn_noFlyZonesExport.sqf",1703};
                    a[]={"a3_functions_f"};
                };
                class noFlyZone {
                    f[]={"A3\functions_f\Map\fn_noFlyZone.sqf",298};
                    a[]={"a3_functions_f"};
                };
                class keypointsExport {
                    f[]={"A3\functions_f\Map\fn_keypointsExport.sqf",3183};
                    a[]={"a3_functions_f"};
                };
                class keypointsExportFromKML {
                    f[]={"A3\functions_f\Map\fn_keypointsExportFromKML.sqf",2782};
                    a[]={"a3_functions_f"};
                };
                class worldArea {
                    f[]={"A3\functions_f\Map\fn_worldArea.sqf",241};
                    a[]={"a3_functions_f"};
                };
                class randomPos {
                    f[]={"A3\functions_f\Map\fn_randomPos.sqf",1245};
                    a[]={"a3_functions_f"};
                };
                class randomPosTrigger {
                    f[]={"A3\functions_f\Map\fn_randomPosTrigger.sqf",466};
                    a[]={"a3_functions_f"};
                };
                class markerCreate {
                    f[]={"A3\functions_f\Map\fn_markerCreate.sqf",4097};
                    a[]={"a3_functions_f"};
                };
                class markerParams {
                    f[]={"A3\functions_f\Map\fn_markerParams.sqf",245};
                    a[]={"a3_functions_f"};
                };
                class markerPath {
                    f[]={"A3\functions_f\Map\fn_markerPath.sqf",2560};
                    a[]={"a3_functions_f"};
                };
                class posDegtoUTM {
                    f[]={"A3\functions_f\Map\fn_posDegtoUTM.sqf",2001};
                    a[]={"a3_functions_f"};
                };
                class posDegToWorld {
                    f[]={"A3\functions_f\Map\fn_posDegToWorld.sqf",1203};
                    a[]={"a3_functions_f"};
                };
                class posUTMToDeg {
                    f[]={"A3\functions_f\Map\fn_posUTMToDeg.sqf",2298};
                    a[]={"a3_functions_f"};
                };
                class nearestHelipad {
                    f[]={"A3\functions_f\Map\fn_nearestHelipad.sqf",881};
                    a[]={"a3_functions_f"};
                };
            };
            class Misc {
                class endMission {
                    f[]={"A3\functions_f\Misc\fn_endMission.sqf",4237};
                    a[]={"a3_functions_f"};
                };
                class onLoad {
                    f[]={"A3\functions_f\Misc\fn_onLoad.sqf",267};
                    a[]={"a3_functions_f"};
                };
                class onEnd {
                    f[]={"A3\functions_f\Misc\fn_onEnd.sqf",1068};
                    a[]={"a3_functions_f"};
                };
                class displayName {
                    f[]={"A3\functions_f\Misc\fn_displayName.sqf",229};
                    a[]={"a3_functions_f"};
                };
                class counter {
                    f[]={"A3\functions_f\Misc\fn_counter.sqf",713};
                    a[]={"a3_functions_f"};
                };
                class isLocalized {
                    f[]={"A3\functions_f\Misc\fn_isLocalized.sqf",162};
                    a[]={"a3_functions_f"};
                };
                class roundDir {
                    f[]={"A3\functions_f\Misc\fn_roundDir.sqf",298};
                    a[]={"a3_functions_f"};
                };
                class saveGame {
                    f[]={"A3\functions_f\Misc\fn_saveGame.sqf",657};
                    a[]={"a3_functions_f"};
                };
                class animType {
                    f[]={"A3\functions_f\Misc\fn_animType.sqf",5754};
                    a[]={"a3_functions_f"};
                };
                class position {
                    f[]={"A3\functions_f\Misc\fn_position.sqf",1244};
                    a[]={"a3_functions_f"};
                };
                class assignPlayerRole {
                    f[]={"A3\functions_f\Misc\fn_assignPlayerRole.sqf",682};
                    a[]={"a3_functions_f"};
                };
                class convertUnits {
                    f[]={"A3\functions_f\Misc\fn_convertUnits.sqf",4005};
                    a[]={"a3_functions_f"};
                };
                class moveIn {
                    f[]={"A3\functions_f\Misc\fn_moveIn.sqf",1198};
                    a[]={"a3_functions_f"};
                };
                class setHeight {
                    f[]={"A3\functions_f\Misc\fn_setHeight.sqf",732};
                    a[]={"a3_functions_f"};
                };
                class playerName {
                    f[]={"A3\functions_f\Misc\fn_playerName.sqf",25};
                    a[]={"a3_functions_f"};
                };
            };
            class Missions {
                class singleMissionName {
                    f[]={"A3\functions_f\Missions\fn_singleMissionName.sqf",102};
                    a[]={"a3_functions_f"};
                };
                class singleMissionConfig {
                    f[]={"A3\functions_f\Missions\fn_singleMissionConfig.sqf",457};
                    a[]={"a3_functions_f"};
                };
                class singleMissionKeys {
                    f[]={"A3\functions_f\Missions\fn_singleMissionKeys.sqf",399};
                    a[]={"a3_functions_f"};
                };
            };
            class MP {
                class MP {
                    f[]={"A3\functions_f\MP\fn_MP.sqf",1295};
                    a[]={"a3_functions_f"};
                };
                class MPexec {
                    f[]={"A3\functions_f\MP\fn_MPexec.sqf",0};
                    a[]={"a3_functions_f"};
                };
            };
            class Numbers {
                class numberDigits {
                    f[]={"A3\functions_f\Numbers\fn_numberDigits.sqf",657};
                    a[]={"a3_functions_f"};
                };
                class numberText {
                    f[]={"A3\functions_f\Numbers\fn_numberText.sqf",473};
                    a[]={"a3_functions_f"};
                };
            };
            class Radio {
                class radioSetChannel {
                    f[]={"A3\functions_f\radio\fn_radioSetChannel.sqf",886};
                    a[]={"a3_functions_f"};
                };
                class radioSetPlaylist {
                    f[]={"A3\functions_f\radio\fn_radioSetPlaylist.sqf",766};
                    a[]={"a3_functions_f"};
                };
                class radioSetTrack {
                    f[]={"A3\functions_f\radio\fn_radioSetTrack.sqf",1431};
                    a[]={"a3_functions_f"};
                };
            };
            class Strings {
                class secondsToString {
                    f[]={"A3\functions_f\Strings\fn_secondsToString.sqf",1639};
                    a[]={"a3_functions_f"};
                };
            };
        };
        class A2PMC {
            class GUI {
                class customGPS {
                    f[]={"A3\functions_f\GUI\fn_customGPS.sqf",921};
                    a[]={"a3_functions_f"};
                };
                class customGPSVideo {
                    f[]={"A3\functions_f\GUI\fn_customGPSVideo.sqf",2410};
                    a[]={"a3_functions_f"};
                };
                class 3Dcredits {
                    f[]={"A3\functions_f\GUI\fn_3Dcredits.sqf",1446};
                    a[]={"a3_functions_f"};
                };
                class dirIndicator {
                    f[]={"A3\functions_f\GUI\fn_dirIndicator.sqf",5940};
                    a[]={"a3_functions_f"};
                };
                class playVideo {
                    f[]={"A3\functions_f\GUI\fn_playVideo.sqf",2039};
                    a[]={"a3_functions_f"};
                };
            };
            class Environment {
                class sandstorm {
                    f[]={"A3\functions_f\Environment\fn_sandstorm.sqf",2338};
                    a[]={"a3_functions_f"};
                };
                class crows {
                    f[]={"A3\functions_f\Environment\fn_crows.sqf",1183};
                    a[]={"a3_functions_f"};
                };
                class destroyCity {
                    f[]={"A3\functions_f\Environment\fn_destroyCity.sqf",1606};
                    a[]={"a3_functions_f"};
                };
                class flies {
                    f[]={"A3\functions_f\Environment\fn_flies.sqf",753};
                    a[]={"a3_functions_f"};
                };
            };
            class Spawning {
                class spawnEnemy {
                    f[]={"A3\functions_f\Spawning\fn_spawnEnemy.sqf",1558};
                    a[]={"a3_functions_f"};
                };
            };
        };
        class A2OA {
            class Arrays {
                class findExtreme {
                    f[]={"A3\functions_f\arrays\fn_findExtreme.sqf",254};
                    a[]={"a3_functions_f"};
                };
            };
            class Debug {
                class configviewer {
                    f[]={"A3\functions_f\debug\fn_configviewer.sqf",31589};
                    a[]={"a3_functions_f"};
                };
            };
            class GUI {
                class AAN {
                    f[]={"A3\functions_f\GUI\fn_AAN.sqf",1621};
                    a[]={"a3_functions_f"};
                };
                class infoText {
                    f[]={"A3\functions_f\GUI\fn_infoText.sqf",1697};
                    a[]={"a3_functions_f"};
                };
                class dynamicText {
                    f[]={"A3\functions_f\GUI\fn_dynamicText.sqf",2163};
                    a[]={"a3_functions_f"};
                };
            };
            class Misc {
                class halo {
                    f[]={"A3\functions_f\misc\fn_halo.sqf",6554};
                    a[]={"a3_functions_f"};
                };
                class music {
                    f[]={"A3\functions_f\misc\fn_music.sqf",1557};
                    a[]={"a3_functions_f"};
                };
                class scriptedMove {
                    f[]={"A3\functions_f\misc\fn_scriptedMove.sqf",1987};
                    a[]={"a3_functions_f"};
                };
            };
            class Objects {
                class boundingBoxCorner {
                    f[]={"A3\functions_f\objects\fn_boundingBoxCorner.sqf",948};
                    a[]={"a3_functions_f"};
                };
                class boundingBoxMarker {
                    f[]={"A3\functions_f\objects\fn_boundingBoxMarker.sqf",2680};
                    a[]={"a3_functions_f"};
                };
                class boundingBoxDimensions {
                    f[]={"A3\functions_f\objects\fn_boundingBoxDimensions.sqf",343};
                    a[]={"a3_functions_f"};
                };
                class boundingCircle {
                    f[]={"A3\functions_f\objects\fn_boundingCircle.sqf",225};
                    a[]={"a3_functions_f"};
                };
            };
            class Scenes {
                class UnitCapture {
                    f[]={"A3\functions_f\scenes\fn_UnitCapture.sqf",3616};
                    a[]={"a3_functions_f"};
                };
                class UnitCaptureFiring {
                    f[]={"A3\functions_f\scenes\fn_UnitCaptureFiring.sqf",1916};
                    a[]={"a3_functions_f"};
                };
                class UnitCaptureSimple {
                    f[]={"A3\functions_f\scenes\fn_UnitCaptureSimple.sqf",3659};
                    a[]={"a3_functions_f"};
                };
                class UnitPlay {
                    f[]={"A3\functions_f\scenes\fn_UnitPlay.sqf",2622};
                    a[]={"a3_functions_f"};
                };
                class UnitPlaySimple {
                    f[]={"A3\functions_f\scenes\fn_UnitPlaySimple.sqf",4284};
                    a[]={"a3_functions_f"};
                };
                class UnitPlayFiring {
                    f[]={"A3\functions_f\scenes\fn_UnitPlayFiring.sqf",1016};
                    a[]={"a3_functions_f"};
                };
            };
            class Systems {
                class FTLmanager {
                    f[]={"A3\functions_f\systems\fn_FTLmanager.sqf",11209};
                    a[]={"a3_functions_f"};
                };
                class RespawnManager {
                    f[]={"A3\functions_f\systems\fn_RespawnManager.sqf",19734};
                    a[]={"a3_functions_f"};
                };
                class spotter {
                    f[]={"A3\functions_f\systems\fn_spotter.sqf",1877};
                    a[]={"a3_functions_f"};
                };
            };
            class Numbers {
                class linearConversion {
                    f[]={"A3\functions_f\numbers\fn_linearConversion.sqf",459};
                    a[]={"a3_functions_f"};
                };
            };
        };
        class A2 {
            class Arrays {
                class selectRandomWeighted {
                    f[]={"A3\functions_f\arrays\fn_selectRandomWeighted.sqf",327};
                    a[]={"a3_functions_f"};
                };
                class findNestedElement {
                    f[]={"A3\functions_f\arrays\fn_findNestedElement.sqf",1058};
                    a[]={"a3_functions_f"};
                };
                class returnNestedElement {
                    f[]={"A3\functions_f\arrays\fn_returnNestedElement.sqf",725};
                    a[]={"a3_functions_f"};
                };
                class setNestedElement {
                    f[]={"A3\functions_f\arrays\fn_setNestedElement.sqf",985};
                    a[]={"a3_functions_f"};
                };
                class removeNestedElement {
                    f[]={"A3\functions_f\arrays\fn_removeNestedElement.sqf",518};
                    a[]={"a3_functions_f"};
                };
                class maxDiffArray {
                    f[]={"A3\functions_f\arrays\fn_maxDiffArray.sqf",389};
                    a[]={"a3_functions_f"};
                };
                class removeIndex {
                    f[]={"A3\functions_f\arrays\fn_removeIndex.sqf",474};
                    a[]={"a3_functions_f"};
                };
                class selectRandom {
                    f[]={"A3\functions_f\arrays\fn_selectRandom.sqf",161};
                    a[]={"a3_functions_f"};
                };
                class randomIndex {
                    f[]={"A3\functions_f\arrays\fn_randomIndex.sqf",168};
                    a[]={"a3_functions_f"};
                };
                class arrayPush {
                    f[]={"A3\functions_f\arrays\fn_arrayPush.sqf",223};
                    a[]={"a3_functions_f"};
                };
                class arrayPushStack {
                    f[]={"A3\functions_f\arrays\fn_arrayPushStack.sqf",227};
                    a[]={"a3_functions_f"};
                };
                class arrayPop {
                    f[]={"A3\functions_f\arrays\fn_arrayPop.sqf",180};
                    a[]={"a3_functions_f"};
                };
                class arrayShift {
                    f[]={"A3\functions_f\arrays\fn_arrayShift.sqf",197};
                    a[]={"a3_functions_f"};
                };
                class arrayUnShift {
                    f[]={"A3\functions_f\arrays\fn_arrayUnShift.sqf",267};
                    a[]={"a3_functions_f"};
                };
                class arrayCompare {
                    f[]={"A3\functions_f\arrays\fn_arrayCompare.sqf",211};
                    a[]={"a3_functions_f"};
                };
                class arrayFindDeep {
                    f[]={"A3\functions_f\arrays\fn_arrayFindDeep.sqf",370};
                    a[]={"a3_functions_f"};
                };
                class conditionalSelect {
                    f[]={"A3\functions_f\arrays\fn_conditionalSelect.sqf",299};
                    a[]={"a3_functions_f"};
                };
                class subSelect {
                    f[]={"A3\functions_f\arrays\fn_subSelect.sqf",545};
                    a[]={"a3_functions_f"};
                };
                class arrayInsert {
                    f[]={"A3\functions_f\arrays\fn_arrayInsert.sqf",418};
                    a[]={"a3_functions_f"};
                };
            };
            class Configs {
                class classWeapon {
                    f[]={"A3\functions_f\configs\fn_classWeapon.sqf",301};
                    a[]={"a3_functions_f"};
                };
                class classMagazine {
                    f[]={"A3\functions_f\configs\fn_classMagazine.sqf",310};
                    a[]={"a3_functions_f"};
                };
                class returnConfigEntry {
                    f[]={"A3\functions_f\configs\fn_returnConfigEntry.sqf",567};
                    a[]={"a3_functions_f"};
                };
                class returnParents {
                    f[]={"A3\functions_f\configs\fn_returnParents.sqf",522};
                    a[]={"a3_functions_f"};
                };
            };
            class Debug {
                class help {
                    f[]={"A3\functions_f\debug\fn_help.sqf",716};
                    a[]={"a3_functions_f"};
                };
                class recompile {
                    f[]={"A3\functions_f\debug\fn_recompile.sqf",294};
                    a[]={"a3_functions_f"};
                };
            };
            class Diagnostic {
                class diagAnim {
                    f[]={"A3\functions_f\diagnostic\fn_diagAnim.sqf",728};
                    a[]={"a3_functions_f"};
                };
                class fps {
                    f[]={"A3\functions_f\diagnostic\fn_fps.sqf",1749};
                    a[]={"a3_functions_f"};
                };
            };
            class Geometry {
                class dirTo {
                    f[]={"A3\functions_f\geometry\fn_dirTo.sqf",333};
                    a[]={"a3_functions_f"};
                };
                class relativeDirTo {
                    f[]={"A3\functions_f\geometry\fn_relativeDirTo.sqf",324};
                    a[]={"a3_functions_f"};
                };
                class relPos {
                    f[]={"A3\functions_f\geometry\fn_relPos.sqf",477};
                    a[]={"a3_functions_f"};
                };
                class distance2D {
                    f[]={"A3\functions_f\geometry\fn_distance2D.sqf",336};
                    a[]={"a3_functions_f"};
                };
                class distance2Dsqr {
                    f[]={"A3\functions_f\geometry\fn_distance2Dsqr.sqf",347};
                    a[]={"a3_functions_f"};
                };
                class getLineDist {
                    f[]={"A3\functions_f\geometry\fn_getLineDist.sqf",153};
                    a[]={"a3_functions_f"};
                };
                class inAngleSector {
                    f[]={"A3\functions_f\geometry\fn_inAngleSector.sqf",349};
                    a[]={"a3_functions_f"};
                };
            };
            class Inventory {
                class inv {
                    f[]={"A3\functions_f\inventory\fn_inv.sqf",276};
                    a[]={"a3_functions_f"};
                };
                class invAdd {
                    f[]={"A3\functions_f\inventory\fn_invAdd.sqf",3603};
                    a[]={"a3_functions_f"};
                };
                class invRemove {
                    f[]={"A3\functions_f\inventory\fn_invRemove.sqf",2426};
                    a[]={"a3_functions_f"};
                };
                class invCodeToArray {
                    f[]={"A3\functions_f\inventory\fn_invCodeToArray.sqf",664};
                    a[]={"a3_functions_f"};
                };
                class invString {
                    f[]={"A3\functions_f\inventory\fn_invString.sqf",126};
                    a[]={"a3_functions_f"};
                };
                class invSlots {
                    f[]={"A3\functions_f\inventory\fn_invSlots.sqf",864};
                    a[]={"a3_functions_f"};
                };
                class invSlotsEmpty {
                    f[]={"A3\functions_f\inventory\fn_invSlotsEmpty.sqf",1378};
                    a[]={"a3_functions_f"};
                };
                class invSlotType {
                    f[]={"A3\functions_f\inventory\fn_invSlotType.sqf",659};
                    a[]={"a3_functions_f"};
                };
            };
            class Misc {
                class findSafePos {
                    f[]={"A3\functions_f\misc\fn_findSafePos.sqf",3055};
                    a[]={"a3_functions_f"};
                };
                class getFactions {
                    f[]={"A3\functions_f\misc\fn_getFactions.sqf",1622};
                    a[]={"a3_functions_f"};
                };
                class inTrigger {
                    f[]={"A3\functions_f\misc\fn_inTrigger.sqf",2076};
                    a[]={"a3_functions_f"};
                };
                class isPosBlacklisted {
                    f[]={"A3\functions_f\misc\fn_isPosBlacklisted.sqf",811};
                    a[]={"a3_functions_f"};
                };
                class listPlayers {
                    f[]={"A3\functions_f\misc\fn_listPlayers.sqf",51};
                    a[]={"a3_functions_f"};
                };
                class PosToGrid {
                    f[]={"A3\functions_f\misc\fn_PosToGrid.sqf",449};
                    a[]={"a3_functions_f"};
                };
                class nearestPosition {
                    f[]={"A3\functions_f\misc\fn_nearestPosition.sqf",507};
                    a[]={"a3_functions_f"};
                };
                class createmenu {
                    f[]={"A3\functions_f\misc\fn_createmenu.sqf",2055};
                    a[]={"a3_functions_f"};
                };
                class colorRGBtoHTML {
                    f[]={"A3\functions_f\misc\fn_colorRGBtoHTML.sqf",1719};
                    a[]={"a3_functions_f"};
                };
                class addEvidence {
                    f[]={"A3\functions_f\misc\fn_addEvidence.sqf",1853};
                    a[]={"a3_functions_f"};
                };
                class taskHandler {
                    f[]={"A3\functions_f\misc\fn_taskHandler.sqf",2663};
                    a[]={"a3_functions_f"};
                };
                class threat {
                    f[]={"A3\functions_f\misc\fn_threat.sqf",467};
                    a[]={"a3_functions_f"};
                };
                class commsMenuCreate {
                    f[]={"A3\functions_f\misc\fn_commsMenuCreate.sqf",2826};
                    a[]={"a3_functions_f"};
                };
                class commsMenuToggleVisibility {
                    f[]={"A3\functions_f\misc\fn_commsMenuToggleVisibility.sqf",2616};
                    a[]={"a3_functions_f"};
                };
                class commsMenuToggleAvailability {
                    f[]={"A3\functions_f\misc\fn_commsMenuToggleAvailability.sqf",2468};
                    a[]={"a3_functions_f"};
                };
                class version {
                    f[]={"A3\functions_f\misc\fn_version.sqf",633};
                    a[]={"a3_functions_f"};
                };
            };
            class Numbers {
                class randomNum {
                    f[]={"A3\functions_f\numbers\fn_randomNum.sqf",234};
                    a[]={"a3_functions_f"};
                };
                class randomInt {
                    f[]={"A3\functions_f\numbers\fn_randomInt.sqf",262};
                    a[]={"a3_functions_f"};
                };
                class arithmeticMean {
                    f[]={"A3\functions_f\numbers\fn_arithmeticMean.sqf",343};
                    a[]={"a3_functions_f"};
                };
                class geometricMean {
                    f[]={"A3\functions_f\numbers\fn_geometricMean.sqf",354};
                    a[]={"a3_functions_f"};
                };
                class cutDecimals {
                    f[]={"A3\functions_f\numbers\fn_cutDecimals.sqf",214};
                    a[]={"a3_functions_f"};
                };
                class greatestNum {
                    f[]={"A3\functions_f\numbers\fn_greatestNum.sqf",161};
                    a[]={"a3_functions_f"};
                };
                class lowestNum {
                    f[]={"A3\functions_f\numbers\fn_lowestNum.sqf",161};
                    a[]={"a3_functions_f"};
                };
                class nearestNum {
                    f[]={"A3\functions_f\numbers\fn_nearestNum.sqf",589};
                    a[]={"a3_functions_f"};
                };
                class sortNum {
                    f[]={"A3\functions_f\numbers\fn_sortNum.sqf",167};
                    a[]={"a3_functions_f"};
                };
                class roundNum {
                    f[]={"A3\functions_f\numbers\fn_roundNum.sqf",850};
                    a[]={"a3_functions_f"};
                };
                class parseNumber {
                    f[]={"A3\functions_f\numbers\fn_parseNumber.sqf",526};
                    a[]={"a3_functions_f"};
                };
            };
            class Objects {
                class isInFrontOf {
                    f[]={"A3\functions_f\objects\fn_isInFrontOf.sqf",334};
                    a[]={"a3_functions_f"};
                };
                class setPitchBank {
                    f[]={"A3\functions_f\objects\fn_setPitchBank.sqf",209};
                    a[]={"a3_functions_f"};
                };
                class getPitchBank {
                    f[]={"A3\functions_f\objects\fn_getPitchBank.sqf",627};
                    a[]={"a3_functions_f"};
                };
            };
            class Scenes {
                class sceneGetParticipants {
                    f[]={"A3\functions_f\scenes\fn_sceneGetParticipants.sqf",488};
                    a[]={"a3_functions_f"};
                };
                class sceneGetPositionByAngle {
                    f[]={"A3\functions_f\scenes\fn_sceneGetPositionByAngle.sqf",1409};
                    a[]={"a3_functions_f"};
                };
                class sceneSetPosFormation {
                    f[]={"A3\functions_f\scenes\fn_sceneSetPosFormation.sqf",4675};
                    a[]={"a3_functions_f"};
                };
                class sceneSetAnimationsForGroup {
                    f[]={"A3\functions_f\scenes\fn_sceneSetAnimationsForGroup.sqf",1860};
                    a[]={"a3_functions_f"};
                };
                class sceneSetBehaviour {
                    f[]={"A3\functions_f\scenes\fn_sceneSetBehaviour.sqf",1538};
                    a[]={"a3_functions_f"};
                };
                class sceneCreateSceneTrigger {
                    f[]={"A3\functions_f\scenes\fn_sceneCreateSceneTrigger.sqf",1554};
                    a[]={"a3_functions_f"};
                };
                class miscanim {
                    f[]={"A3\functions_f\scenes\fn_miscanim.sqf",17514};
                    a[]={"a3_functions_f"};
                };
                class sceneRotate {
                    f[]={"A3\functions_f\scenes\fn_sceneRotate.sqf",973};
                    a[]={"a3_functions_f"};
                };
                class sceneSetObjects {
                    f[]={"A3\functions_f\scenes\fn_sceneSetObjects.sqf",3564};
                    a[]={"a3_functions_f"};
                };
                class sceneGetObjects {
                    f[]={"A3\functions_f\scenes\fn_sceneGetObjects.sqf",2378};
                    a[]={"a3_functions_f"};
                };
                class sceneMiscStuff {
                    f[]={"A3\functions_f\scenes\fn_sceneMiscStuff.sqf",7751};
                    a[]={"a3_functions_f"};
                };
                class zzRotate {
                    f[]={"A3\functions_f\scenes\fn_zzRotate.sqf",2066};
                    a[]={"a3_functions_f"};
                };
                class sceneCheckWeapons {
                    f[]={"A3\functions_f\scenes\fn_sceneCheckWeapons.sqf",4151};
                    a[]={"a3_functions_f"};
                };
                class sceneCreateSoundEntities {
                    f[]={"A3\functions_f\scenes\fn_sceneCreateSoundEntities.sqf",1242};
                    a[]={"a3_functions_f"};
                };
                class sceneAreaClearance {
                    f[]={"A3\functions_f\scenes\fn_sceneAreaClearance.sqf",4182};
                    a[]={"a3_functions_f"};
                };
                class sceneIntruderDetector {
                    f[]={"A3\functions_f\scenes\fn_sceneIntruderDetector.sqf",3273};
                    a[]={"a3_functions_f"};
                };
            };
            class Strings {
                class timeToString {
                    f[]={"A3\functions_f\strings\fn_timeToString.sqf",1081};
                    a[]={"a3_functions_f"};
                };
            };
            class Systems {
                class transportService {
                    f[]={"A3\functions_f\systems\fn_transportService.sqf",2951};
                    a[]={"a3_functions_f"};
                };
                class supplydropService {
                    f[]={"A3\functions_f\systems\fn_supplydropService.sqf",1631};
                    a[]={"a3_functions_f"};
                };
                class supplydrop {
                    f[]={"A3\functions_f\systems\fn_supplydrop.sqf",5216};
                    a[]={"a3_functions_f"};
                };
                class respect {
                    f[]={"A3\functions_f\systems\fn_respect.sqf",2959};
                    a[]={"a3_functions_f"};
                };
                class showTime {
                    f[]={"A3\functions_f\systems\fn_showTime.sqf",2941};
                    a[]={"a3_functions_f"};
                };
                class locations {
                    f[]={"A3\functions_f\systems\fn_locations.sqf",8338};
                    a[]={"a3_functions_f"};
                };
            };
            class Variables {
                class areEqual {
                    f[]={"A3\functions_f\variables\fn_areEqual.sqf",1188};
                    a[]={"a3_functions_f"};
                };
                class swapVars {
                    f[]={"A3\functions_f\variables\fn_swapVars.sqf",693};
                    a[]={"a3_functions_f"};
                };
                class variableSpaceAdd {
                    f[]={"A3\functions_f\variables\fn_variableSpaceAdd.sqf",1266};
                    a[]={"a3_functions_f"};
                };
                class variableSpaceRemove {
                    f[]={"A3\functions_f\variables\fn_variableSpaceRemove.sqf",1423};
                    a[]={"a3_functions_f"};
                };
            };
            class Vectors {
                class crossProduct {
                    f[]={"A3\functions_f\vectors\fn_crossProduct.sqf",212};
                    a[]={"a3_functions_f"};
                };
                class dotProduct {
                    f[]={"A3\functions_f\vectors\fn_dotProduct.sqf",338};
                    a[]={"a3_functions_f"};
                };
                class magnitude {
                    f[]={"A3\functions_f\vectors\fn_magnitude.sqf",268};
                    a[]={"a3_functions_f"};
                };
                class magnitudeSqr {
                    f[]={"A3\functions_f\vectors\fn_magnitudeSqr.sqf",266};
                    a[]={"a3_functions_f"};
                };
                class unitVector {
                    f[]={"A3\functions_f\vectors\fn_unitVector.sqf",356};
                    a[]={"a3_functions_f"};
                };
                class vectorMultiply {
                    f[]={"A3\functions_f\vectors\fn_vectorMultiply.sqf",332};
                    a[]={"a3_functions_f"};
                };
                class vectorDiff {
                    f[]={"A3\functions_f\vectors\fn_vectorDiff.sqf",340};
                    a[]={"a3_functions_f"};
                };
                class vectorAdd {
                    f[]={"A3\functions_f\vectors\fn_vectorAdd.sqf",340};
                    a[]={"a3_functions_f"};
                };
                class vectorFromXToY {
                    f[]={"A3\functions_f\vectors\fn_vectorFromXToY.sqf",310};
                    a[]={"a3_functions_f"};
                };
                class rotateVector2D {
                    f[]={"A3\functions_f\vectors\fn_rotateVector2D.sqf",310};
                    a[]={"a3_functions_f"};
                };
            };
            class Vehicles {
                class absSpeed {
                    f[]={"A3\functions_f\vehicles\fn_absSpeed.sqf",190};
                    a[]={"a3_functions_f"};
                };
            };
            class Spawning {
                class spawnGroup {
                    f[]={"A3\functions_f\spawning\fn_spawnGroup.sqf",5736};
                    a[]={"a3_functions_f"};
                };
                class returnGroupComposition {
                    f[]={"A3\functions_f\spawning\fn_returnGroupComposition.sqf",3963};
                    a[]={"a3_functions_f"};
                };
                class spawnVehicle {
                    f[]={"A3\functions_f\spawning\fn_spawnVehicle.sqf",1814};
                    a[]={"a3_functions_f"};
                };
                class spawnCrew {
                    f[]={"A3\functions_f\spawning\fn_spawnCrew.sqf",2598};
                    a[]={"a3_functions_f"};
                };
                class selectCrew {
                    f[]={"A3\functions_f\spawning\fn_selectCrew.sqf",1095};
                    a[]={"a3_functions_f"};
                };
                class taskPatrol {
                    f[]={"A3\functions_f\spawning\fn_taskPatrol.sqf",1412};
                    a[]={"a3_functions_f"};
                };
                class taskDefend {
                    f[]={"A3\functions_f\spawning\fn_taskDefend.sqf",1224};
                    a[]={"a3_functions_f"};
                };
                class taskAttack {
                    f[]={"A3\functions_f\spawning\fn_taskAttack.sqf",589};
                    a[]={"a3_functions_f"};
                };
                class returnVehicleTurrets {
                    f[]={"A3\functions_f\spawning\fn_returnVehicleTurrets.sqf",943};
                    a[]={"a3_functions_f"};
                };
                class ObjectsMapper {
                    f[]={"A3\functions_f\spawning\fn_ObjectsMapper.sqf",4101};
                    a[]={"a3_functions_f"};
                };
                class ObjectsGrabber {
                    f[]={"A3\functions_f\spawning\fn_ObjectsGrabber.sqf",2567};
                    a[]={"a3_functions_f"};
                };
            };
        };
        class A3_EPA {
            class Misc {
                class blackOut {
                    f[]={"A3\functions_f_EPA\Misc\fn_blackOut.sqf",2447};
                };
                class blackIn {
                    f[]={"A3\functions_f_EPA\Misc\fn_blackIn.sqf",2426};
                };
                class buildingPositions {
                    f[]={"A3\functions_f_EPA\Misc\fn_buildingPositions.sqf",424};
                };
                class isBuildingEnterable {
                    f[]={"A3\functions_f_EPA\Misc\fn_isBuildingEnterable.sqf",326};
                };
                class addStackedEventHandler {
                    f[]={"A3\functions_f_EPA\Misc\fn_addStackedEventHandler.sqf",2867};
                };
                class executeStackedEventHandler {
                    f[]={"A3\functions_f_EPA\Misc\fn_executeStackedEventHandler.sqf",16};
                };
                class removeStackedEventHandler {
                    f[]={"A3\functions_f_EPA\Misc\fn_removeStackedEventHandler.sqf",1137};
                };
                class initExpo {
                    f[]={"A3\functions_f_EPA\Misc\fn_initExpo.sqf",1141};
                };
                class enableSaving {
                    f[]={"A3\functions_f_EPA\Misc\fn_enableSaving.sqf",629};
                };
                class disableSaving {
                    f[]={"A3\functions_f_EPA\Misc\fn_disableSaving.sqf",631};
                };
            };
            class Spawning {
                class prepareAO {
                    f[]={"A3\functions_f_EPA\Spawning\fn_prepareAO.sqf",8758};
                };
            };
            class GUI {
                class quotations {
                    f[]={"A3\functions_f_EPA\GUI\fn_quotations.sqf",4645};
                };
                class showMarkers {
                    f[]={"A3\functions_f_EPA\GUI\fn_showMarkers.sqf",526};
                };
                class isInZoom {
                    f[]={"A3\functions_f_EPA\GUI\fn_isInZoom.sqf",343};
                };
            };
            class Geometry {
                class isInsideArea {
                    f[]={"A3\functions_f_EPA\Geometry\fn_isInsideArea.sqf",752};
                };
                class relPosObject {
                    f[]={"A3\functions_f_EPA\Geometry\fn_relPosObject.sqf",666};
                };
            };
        };
        class A3_EPC {
            class Misc {
                class earthquake {
                    f[]={"\A3\Functions_F_EPC\Misc\fn_earthquake.sqf",1584};
                };
            };
        };
        class A3_Functions_F_Curator {
            class Curator {
                class forceCuratorInterface {
                    f[]={"A3\functions_f_curator\Curator\fn_forceCuratorInterface.sqf",430};
                };
                class isForcedCuratorInterface {
                    f[]={"A3\functions_f_curator\Curator\fn_isForcedCuratorInterface.sqf",88};
                };
                class curatorObjectRegistered {
                    f[]={"A3\functions_f_curator\Curator\fn_curatorObjectRegistered.sqf",2037};
                };
                class curatorObjectRegisteredTable {
                    f[]={"A3\functions_f_curator\Curator\fn_curatorObjectRegisteredTable.sqf",908};
                };
                class registerCuratorObject {
                    f[]={"A3\functions_f_curator\Curator\fn_registerCuratorObject.sqf",267};
                };
                class showCuratorFeedbackMessage {
                    f[]={"A3\functions_f_curator\Curator\fn_showCuratorFeedbackMessage.sqf",6852};
                };
                class isCurator {
                    f[]={"A3\functions_f_curator\Curator\fn_isCurator.sqf",166};
                };
                class removeDestroyedCuratorEditableObjects {
                    f[]={"A3\functions_f_curator\Curator\fn_removeDestroyedCuratorEditableObjects.sqf",1030};
                };
                class curatorPinged {
                    f[]={"A3\functions_f_curator\Curator\fn_curatorPinged.sqf",1429};
                };
                class curatorWaypointPlaced {
                    f[]={"A3\functions_f_curator\Curator\fn_curatorWaypointPlaced.sqf",229};
                };
                class curatorObjectPlaced {
                    f[]={"A3\functions_f_curator\Curator\fn_curatorObjectPlaced.sqf",598};
                };
                class curatorObjectEdited {
                    f[]={"A3\functions_f_curator\Curator\fn_curatorObjectEdited.sqf",2567};
                };
                class curatorAttachObject {
                    f[]={"A3\functions_f_curator\Curator\fn_curatorAttachObject.sqf",1342};
                };
                class curatorRespawn {
                    f[]={"A3\functions_f_curator\Curator\fn_curatorRespawn.sqf",906};
                };
                class manageCuratorAddons {
                    f[]={"A3\functions_f_curator\Curator\fn_manageCuratorAddons.sqf",1893};
                };
                class listCuratorPlayers {
                    f[]={"A3\functions_f_curator\Curator\fn_listCuratorPlayers.sqf",229};
                };
                class addCuratorAreaFromTrigger {
                    f[]={"A3\functions_f_curator\Curator\fn_addCuratorAreaFromTrigger.sqf",2004};
                };
                class setCuratorVisionModes {
                    f[]={"A3\functions_f_curator\Curator\fn_setCuratorVisionModes.sqf",611};
                };
                class curatorVisionModes {
                    f[]={"A3\functions_f_curator\Curator\fn_curatorVisionModes.sqf",147};
                };
                class toggleCuratorVisionMode {
                    f[]={"A3\functions_f_curator\Curator\fn_toggleCuratorVisionMode.sqf",847};
                };
                class mirrorCuratorSettings {
                    f[]={"A3\functions_f_curator\Curator\fn_mirrorCuratorSettings.sqf",2226};
                };
                class drawCuratorLocations {
                    f[]={"A3\functions_f_curator\Curator\fn_drawCuratorLocations.sqf",365};
                };
                class drawCuratorRespawnMarkers {
                    f[]={"A3\functions_f_curator\Curator\fn_drawCuratorRespawnMarkers.sqf",541};
                };
                class drawCuratorDeaths {
                    f[]={"A3\functions_f_curator\Curator\fn_drawCuratorDeaths.sqf",1009};
                };
                class addCuratorIcon {
                    f[]={"A3\functions_f_curator\Curator\fn_addCuratorIcon.sqf",468};
                };
                class removeCuratorIcon {
                    f[]={"A3\functions_f_curator\Curator\fn_removeCuratorIcon.sqf",351};
                };
                class isCuratorEditable {
                    f[]={"A3\functions_f_curator\Curator\fn_isCuratorEditable.sqf",174};
                };
                class curatorAutomatic {
                    f[]={"A3\functions_f_curator\Curator\fn_curatorAutomatic.sqf",10107};
                };
                class curatorAutomaticPositions {
                    f[]={"A3\functions_f_curator\Curator\fn_curatorAutomaticPositions.sqf",1131};
                };
                class setCuratorAttributes {
                    f[]={"A3\functions_f_curator\Curator\fn_setCuratorAttributes.sqf",927};
                };
                class curatorAttributes {
                    f[]={"A3\functions_f_curator\Curator\fn_curatorAttributes.sqf",953};
                };
                class showCuratorAttributes {
                    f[]={"A3\functions_f_curator\Curator\fn_showCuratorAttributes.sqf",1334};
                };
                class initCuratorAttribute {
                    f[]={"A3\functions_f_curator\Curator\fn_initCuratorAttribute.sqf",1338};
                };
                class setCuratorCamera {
                    f[]={"A3\functions_f_curator\Curator\fn_setCuratorCamera.sqf",1591};
                };
                class shakeCuratorCamera {
                    f[]={"A3\functions_f_curator\Curator\fn_shakeCuratorCamera.sqf",1102};
                };
                class curatorHint {
                    f[]={"A3\functions_f_curator\Curator\fn_curatorHint.sqf",6375};
                };
                class curatorSayMessage {
                    f[]={"A3\functions_f_curator\Curator\fn_curatorSayMessage.sqf",490};
                };
                class exportCuratorCostTable {
                    f[]={"A3\functions_f_curator\Curator\fn_exportCuratorCostTable.sqf",220658};
                };
            };
            class CuratorChallenges {
                class addCuratorChallenge {
                    f[]={"A3\functions_f_curator\CuratorChallenges\fn_addCuratorChallenge.sqf",7596};
                };
                class finishCuratorChallenge {
                    f[]={"A3\functions_f_curator\CuratorChallenges\fn_finishCuratorChallenge.sqf",861};
                };
                class manageCuratorChallenges {
                    f[]={"A3\functions_f_curator\CuratorChallenges\fn_manageCuratorChallenges.sqf",1321};
                };
                class formatCuratorChallengeObjects {
                    f[]={"A3\functions_f_curator\CuratorChallenges\fn_formatCuratorChallengeObjects.sqf",1579};
                };
                class completedCuratorChallengesCount {
                    f[]={"A3\functions_f_curator\CuratorChallenges\fn_completedCuratorChallengesCount.sqf",154};
                };
                class curatorChallengeFireWeapon {
                    f[]={"A3\functions_f_curator\CuratorChallenges\fn_curatorChallengeFireWeapon.sqf",2330};
                };
                class curatorChallengeGetInVehicle {
                    f[]={"A3\functions_f_curator\CuratorChallenges\fn_curatorChallengeGetInVehicle.sqf",1672};
                };
                class curatorChallengeDestroyVehicle {
                    f[]={"A3\functions_f_curator\CuratorChallenges\fn_curatorChallengeDestroyVehicle.sqf",1823};
                };
                class curatorChallengeFindIntel {
                    f[]={"A3\functions_f_curator\CuratorChallenges\fn_curatorChallengeFindIntel.sqf",822};
                };
                class curatorChallengeSpawnLightning {
                    f[]={"A3\functions_f_curator\CuratorChallenges\fn_curatorChallengeSpawnLightning.sqf",451};
                };
                class curatorChallengeIlluminate {
                    f[]={"A3\functions_f_curator\CuratorChallenges\fn_curatorChallengeIlluminate.sqf",907};
                };
            };
            class Environment {
                class setOvercast {
                    f[]={"A3\functions_f_curator\Environment\fn_setOvercast.sqf",203};
                };
                class setFog {
                    f[]={"A3\functions_f_curator\Environment\fn_setFog.sqf",359};
                };
                class setDate {
                    f[]={"A3\functions_f_curator\Environment\fn_setDate.sqf",3335};
                };
            };
            class Map {
                class locationDescription {
                    f[]={"A3\functions_f_curator\Map\fn_locationDescription.sqf",1242};
                };
                class drawAO {
                    f[]={"A3\functions_f_curator\Map\fn_drawAO.sqf",3963};
                };
                class drawMinefields {
                    f[]={"A3\functions_f_curator\Map\fn_drawMinefields.sqf",3743};
                };
                class drawRespawnPositions {
                    f[]={"A3\functions_f_curator\Map\fn_drawRespawnPositions.sqf",1346};
                };
            };
            class Misc {
                class activateAddons {
                    f[]={"A3\functions_f_curator\Misc\fn_activateAddons.sqf",599};
                };
                class playEndMusic {
                    f[]={"A3\functions_f_curator\Misc\fn_playEndMusic.sqf",694};
                };
                class neutralizeUnit {
                    f[]={"A3\functions_f_curator\Misc\fn_neutralizeUnit.sqf",1887};
                };
                class isLoading {
                    f[]={"A3\functions_f_curator\Misc\fn_isLoading.sqf",123};
                };
                class isUnitVirtual {
                    f[]={"A3\functions_f_curator\Misc\fn_isUnitVirtual.sqf",104};
                };
                class endMissionServer {
                    f[]={"A3\functions_f_curator\Misc\fn_endMissionServer.sqf",3336};
                };
                class exportCfgGroups {
                    f[]={"A3\functions_f_curator\Misc\fn_exportCfgGroups.sqf",1306};
                };
                class selectDiarySubject {
                    f[]={"A3\functions_f_curator\Misc\fn_selectDiarySubject.sqf",599};
                };
            };
            class MP {
                class sayMessage {
                    f[]={"A3\functions_f_curator\MP\fn_sayMessage.sqf",1108};
                };
                class playSound {
                    f[]={"A3\functions_f_curator\MP\fn_playSound.sqf",138};
                };
                class playMusic {
                    f[]={"A3\functions_f_curator\MP\fn_playMusic.sqf",201};
                };
                class setObjectTexture {
                    f[]={"A3\functions_f_curator\MP\fn_setObjectTexture.sqf",277};
                };
                class estimatedTimeLeft {
                    f[]={"A3\functions_f_curator\MP\fn_estimatedTimeLeft.sqf",191};
                };
            };
            class Objects {
                class initIntelObject {
                    f[]={"A3\functions_f_curator\Objects\fn_initIntelObject.sqf",2816};
                };
                class initVirtualUnit {
                    f[]={"A3\functions_f_curator\Objects\fn_initVirtualUnit.sqf",264};
                };
            };
            class Respawn {
                class initRespawnBackpack {
                    f[]={"A3\functions_f_curator\Respawn\fn_initRespawnBackpack.sqf",2603};
                };
                class respawnRounds {
                    f[]={"A3\functions_f_curator\Respawn\fn_respawnRounds.sqf",6330};
                };
                class respawnMenuSpectator {
                    f[]={"A3\functions_f_curator\Respawn\fn_respawnMenuSpectator.sqf",2866};
                };
            };
            class Variables {
                class setServerVariable {
                    f[]={"A3\functions_f_curator\Variables\fn_setServerVariable.sqf",508};
                };
                class getServerVariable {
                    f[]={"A3\functions_f_curator\Variables\fn_getServerVariable.sqf",1851};
                    a[]={"a3_functions_f_curator"};
                    m[]={"curator"};
                };
            };
        };
        class A3_Modules {
            class Environment {
                class moduleHideTerrainObjects {
                    f[]={"A3\Modules_F\Environment\HideTerrainObjects\init.sqf",4851};
                    a[]={"a3_modules_f"};
                };
                class moduleEditTerrainObject {
                    f[]={"A3\Modules_F\Environment\EditTerrainObject\init.sqf",21875};
                    a[]={"a3_modules_f"};
                };
            };
            class Effects {
                class moduleEffectsEmitterCreator {
                    f[]={"A3\modules_f\Effects\functions\fn_moduleEffectsEmitterCreator.sqf",1231};
                };
                class moduleCreateProjectile {
                    f[]={"A3\modules_f\Effects\functions\fn_moduleCreateProjectile.sqf",288};
                };
                class moduleGrenade {
                    f[]={"A3\modules_f\Effects\functions\fn_moduleGrenade.sqf",1575};
                };
                class moduleEffectsPlankton {
                    f[]={"A3\modules_f\Effects\functions\fn_moduleEffectsPlankton.sqf",618};
                };
                class moduleEffectsBubbles {
                    f[]={"A3\modules_f\Effects\functions\fn_moduleEffectsBubbles.sqf",1823};
                };
                class moduleEffectsShells {
                    f[]={"A3\modules_f\Effects\functions\fn_moduleEffectsShells.sqf",2496};
                };
                class moduleEffectsSmoke {
                    f[]={"A3\modules_f\Effects\functions\fn_moduleEffectsSmoke.sqf",2435};
                };
                class moduleEffectsFire {
                    f[]={"A3\modules_f\Effects\functions\fn_moduleEffectsFire.sqf",2554};
                };
            };
            class Events {
                class moduleChat {
                    f[]={"A3\modules_f\Events\functions\fn_moduleChat.sqf",686};
                };
                class moduleDate {
                    f[]={"A3\modules_f\Events\functions\fn_moduleDate.sqf",1123};
                };
                class moduleSaveGame {
                    f[]={"A3\modules_f\Events\functions\fn_moduleSaveGame.sqf",100};
                };
                class moduleVolume {
                    f[]={"A3\modules_f\Events\functions\fn_moduleVolume.sqf",763};
                };
                class moduleGenericRadio {
                    f[]={"A3\modules_f\Events\functions\fn_moduleGenericRadio.sqf",605};
                };
            };
            class GroupModifiers {
                class moduleGroupID {
                    f[]={"A3\modules_f\GroupModifiers\functions\fn_moduleGroupID.sqf",774};
                };
            };
            class Intel {
                class moduleTaskCreate {
                    f[]={"A3\modules_f\Intel\functions\fn_moduleTaskCreate.sqf",1917};
                };
                class moduleTaskSetDescription {
                    f[]={"A3\modules_f\Intel\functions\fn_moduleTaskSetDescription.sqf",781};
                };
                class moduleTaskSetDestination {
                    f[]={"A3\modules_f\Intel\functions\fn_moduleTaskSetDestination.sqf",874};
                };
                class moduleTaskSetState {
                    f[]={"A3\modules_f\Intel\functions\fn_moduleTaskSetState.sqf",758};
                };
                class moduleCreateDiaryRecord {
                    f[]={"A3\modules_f\Intel\functions\fn_moduleCreateDiaryRecord.sqf",1434};
                };
                class moduleHQ {
                    f[]={"A3\modules_f\Intel\functions\fn_moduleHQ.sqf",1950};
                };
            };
            class LiveFeed {
                class liveFeedModuleEffects {
                    f[]={"a3\modules_f\livefeed\functions\fn_liveFeedModuleEffects.sqf",326};
                    a[]={"a3_modules_f_livefeed"};
                };
                class liveFeedModuleInit {
                    f[]={"a3\modules_f\livefeed\functions\fn_liveFeedModuleInit.sqf",266};
                    a[]={"a3_modules_f_livefeed"};
                };
                class liveFeedModuleSetSource {
                    f[]={"a3\modules_f\livefeed\functions\fn_liveFeedModuleSetSource.sqf",418};
                    a[]={"a3_modules_f_livefeed"};
                };
                class liveFeedModuleSetTarget {
                    f[]={"a3\modules_f\livefeed\functions\fn_liveFeedModuleSetTarget.sqf",581};
                    a[]={"a3_modules_f_livefeed"};
                };
            };
            class Misc {
                class moduleFriendlyFire {
                    f[]={"A3\modules_f\Misc\functions\fn_moduleFriendlyFire.sqf",7580};
                };
                class tridentClient {
                    f[]={"A3\modules_f\Misc\functions\fn_tridentClient.sqf",3568};
                };
                class tridentHandleDamage {
                    f[]={"A3\modules_f\Misc\functions\fn_tridentHandleDamage.sqf",1306};
                };
                class tridentSetRelationship {
                    f[]={"A3\modules_f\Misc\functions\fn_tridentSetRelationship.sqf",832};
                };
                class tridentGetRelationship {
                    f[]={"A3\modules_f\Misc\functions\fn_tridentGetRelationship.sqf",349};
                };
                class tridentExecute {
                    f[]={"A3\modules_f\Misc\functions\fn_tridentExecute.sqf",889};
                };
                class moduleUnlockObject {
                    f[]={"A3\modules_f\Misc\functions\fn_moduleUnlockObject.sqf",507};
                };
                class moduleUnlockArea {
                    f[]={"A3\modules_f\Misc\functions\fn_moduleUnlockArea.sqf",489};
                };
            };
            class Multiplayer {
                class moduleSector {
                    f[]={"A3\modules_f\Multiplayer\functions\fn_moduleSector.sqf",26371};
                };
                class moduleRespawnVehicle {
                    f[]={"A3\modules_f\Multiplayer\functions\fn_moduleRespawnVehicle.sqf",14702};
                };
            };
            class ObjectModifiers {
                class moduleAI {
                    f[]={"A3\modules_f\ObjectModifiers\functions\fn_moduleAI.sqf",1249};
                };
                class moduleAmmo {
                    f[]={"A3\modules_f\ObjectModifiers\functions\fn_moduleAmmo.sqf",329};
                };
                class moduleDamage {
                    f[]={"A3\modules_f\ObjectModifiers\functions\fn_moduleDamage.sqf",630};
                };
                class moduleDoorOpen {
                    f[]={"A3\modules_f\ObjectModifiers\functions\fn_moduleDoorOpen.sqf",1182};
                };
                class moduleFuel {
                    f[]={"A3\modules_f\ObjectModifiers\functions\fn_moduleFuel.sqf",337};
                };
                class moduleHealth {
                    f[]={"A3\modules_f\ObjectModifiers\functions\fn_moduleHealth.sqf",831};
                };
                class moduleMode {
                    f[]={"A3\modules_f\ObjectModifiers\functions\fn_moduleMode.sqf",968};
                };
                class modulePositioning {
                    f[]={"A3\modules_f\ObjectModifiers\functions\fn_modulePositioning.sqf",1200};
                };
                class moduleRank {
                    f[]={"A3\modules_f\ObjectModifiers\functions\fn_moduleRank.sqf",359};
                };
                class moduleRating {
                    f[]={"A3\modules_f\ObjectModifiers\functions\fn_moduleRating.sqf",499};
                };
                class moduleShowHide {
                    f[]={"A3\modules_f\ObjectModifiers\functions\fn_moduleShowHide.sqf",417};
                };
                class moduleSkill {
                    f[]={"A3\modules_f\ObjectModifiers\functions\fn_moduleSkill.sqf",301};
                };
                class moduleSimulationManager_grab {
                    f[]={"A3\modules_f\ObjectModifiers\functions\fn_moduleSimulationManager_grab.sqf",458};
                    a[]={"a3_modules_f_objectmodifiers"};
                };
            };
            class Sites {
                class animalSiteSpawn {
                    f[]={"A3\modules_f\sites\functions\fn_animalSiteSpawn.sqf",1251};
                    a[]={"a3_modules_f_sites"};
                };
                class moduleSiteInit {
                    f[]={"A3\modules_f\sites\functions\fn_moduleSiteInit.sqf",245};
                };
            };
            class Skirmish {
            };
            class StrategicMap {
                class moduleStrategicMapOpen {
                    f[]={"A3\modules_f\StrategicMap\functions\fn_moduleStrategicMapOpen.sqf",1886};
                };
                class moduleStrategicMapInit {
                    f[]={"A3\modules_f\StrategicMap\functions\fn_moduleStrategicMapInit.sqf",222};
                };
                class moduleStrategicMapMission {
                    f[]={"A3\modules_f\StrategicMap\functions\fn_moduleStrategicMapMission.sqf",703};
                };
                class moduleStrategicMapORBAT {
                    f[]={"A3\modules_f\StrategicMap\functions\fn_moduleStrategicMapORBAT.sqf",6444};
                };
                class moduleStrategicMapImage {
                    f[]={"A3\modules_f\StrategicMap\functions\fn_moduleStrategicMapImage.sqf",968};
                };
            };
            class Supports {
                class moduleSupportsInitRequester {
                    f[]={"A3\modules_f\supports\functions\fn_moduleSupportsInitRequester.sqf",101};
                };
                class moduleSupportsInitProvider {
                    f[]={"A3\modules_f\supports\functions\fn_moduleSupportsInitProvider.sqf",100};
                };
                class moduleSupportsInitProviderVirtual {
                    f[]={"A3\modules_f\supports\functions\fn_moduleSupportsInitProviderVirtual.sqf",108};
                };
            };
        };
        class A3_Modules_F_EPB {
            class Misc {
                class modulePoster {
                    f[]={"A3\Modules_F_EPB\Misc\functions\fn_modulePoster.sqf",4433};
                };
            };
        };
        class A3_Structures {
            class Scripts {
                class Door {
                    f[]={"A3\Structures_F\scripts\fn_Door.sqf",594};
                };
                class DoorOpen {
                    f[]={"A3\Structures_F\scripts\fn_DoorOpen.sqf",532};
                };
                class DoorClose {
                    f[]={"A3\Structures_F\scripts\fn_DoorClose.sqf",532};
                };
                class DoorNoHandleOpen {
                    f[]={"A3\Structures_F\scripts\fn_DoorNoHandleOpen.sqf",258};
                };
                class DoorNoHandleClose {
                    f[]={"A3\Structures_F\scripts\fn_DoorNoHandleClose.sqf",258};
                };
                class HatchOpen {
                    f[]={"A3\Structures_F\scripts\fn_HatchOpen.sqf",373};
                };
                class HatchClose {
                    f[]={"A3\Structures_F\scripts\fn_HatchClose.sqf",509};
                };
                class LockedDoorOpen {
                    f[]={"A3\Structures_F\scripts\fn_LockedDoorOpen.sqf",500};
                };
                class LockedDoorNoHandleOpen {
                    f[]={"A3\Structures_F\scripts\fn_LockedDoorNoHandleOpen.sqf",403};
                };
                class ObjectInventoryAnimatedOpen {
                    f[]={"A3\Structures_F\scripts\fn_ObjectInventoryAnimatedOpen.sqf",325};
                };
                class ObjectInventoryAnimatedClose {
                    f[]={"A3\Structures_F\scripts\fn_ObjectInventoryAnimatedClose.sqf",333};
                };
                class SingleWingSlideDoorOpen {
                    f[]={"A3\Structures_F\scripts\fn_SingleWingSlideDoorOpen.sqf",258};
                };
                class SingleWingSlideDoorClose {
                    f[]={"A3\Structures_F\scripts\fn_SingleWingSlideDoorClose.sqf",258};
                };
                class TwoWingDoorNoHandleOpen {
                    f[]={"A3\Structures_F\scripts\fn_TwoWingDoorNoHandleOpen.sqf",414};
                };
                class TwoWingDoorNoHandleClose {
                    f[]={"A3\Structures_F\scripts\fn_TwoWingDoorNoHandleClose.sqf",414};
                };
                class TwoWingDoorOneHandleOpen {
                    f[]={"A3\Structures_F\scripts\fn_TwoWingDoorOneHandleOpen.sqf",698};
                };
                class TwoWingDoorOneHandleClose {
                    f[]={"A3\Structures_F\scripts\fn_TwoWingDoorOneHandleClose.sqf",698};
                };
                class TwoWingDoorTwoHandleOpen {
                    f[]={"A3\Structures_F\scripts\fn_TwoWingDoorTwoHandleOpen.sqf",982};
                };
                class TwoWingDoorTwoHandleClose {
                    f[]={"A3\Structures_F\scripts\fn_TwoWingDoorTwoHandleClose.sqf",982};
                };
                class TwoWingSlideDoorOpen {
                    f[]={"A3\Structures_F\scripts\fn_TwoWingSlideDoorOpen.sqf",414};
                };
                class TwoWingSlideDoorClose {
                    f[]={"A3\Structures_F\scripts\fn_TwoWingSlideDoorClose.sqf",414};
                };
            };
        };
        class A3_Modules_F_Curator {
            class Animals {
                class moduleAnimals {
                    f[]={"a3\modules_f_curator\animals\functions\fn_moduleAnimals.sqf",2698};
                };
            };
            class CAS {
                class moduleCAS {
                    f[]={"a3\modules_f_curator\CAS\functions\fn_moduleCAS.sqf",7068};
                };
            };
            class Curator {
                class moduleCurator {
                    f[]={"a3\modules_f_curator\curator\functions\fn_moduleCurator.sqf",7786};
                };
                class moduleCuratorAddEditingArea {
                    f[]={"a3\modules_f_curator\curator\functions\fn_moduleCuratorAddEditingArea.sqf",2013};
                };
                class moduleCuratorSetEditingAreaType {
                    f[]={"a3\modules_f_curator\curator\functions\fn_moduleCuratorSetEditingAreaType.sqf",620};
                };
                class moduleCuratorAddEditingAreaPlayers {
                    f[]={"a3\modules_f_curator\curator\functions\fn_moduleCuratorAddEditingAreaPlayers.sqf",1963};
                };
                class moduleCuratorAddEditableObjects {
                    f[]={"a3\modules_f_curator\curator\functions\fn_moduleCuratorAddEditableObjects.sqf",682};
                };
                class moduleCuratorSetObjectCost {
                    f[]={"a3\modules_f_curator\curator\functions\fn_moduleCuratorSetObjectCost.sqf",358};
                };
                class moduleCuratorSetCostsVehicleClass {
                    f[]={"a3\modules_f_curator\curator\functions\fn_moduleCuratorSetCostsVehicleClass.sqf",1920};
                };
                class moduleCuratorSetCostsSide {
                    f[]={"a3\modules_f_curator\curator\functions\fn_moduleCuratorSetCostsSide.sqf",1864};
                };
                class moduleCuratorSetCostsDefault {
                    f[]={"a3\modules_f_curator\curator\functions\fn_moduleCuratorSetCostsDefault.sqf",1675};
                };
                class moduleCuratorSetCoefs {
                    f[]={"a3\modules_f_curator\curator\functions\fn_moduleCuratorSetCoefs.sqf",700};
                };
                class moduleCuratorAddPoints {
                    f[]={"a3\modules_f_curator\curator\functions\fn_moduleCuratorAddPoints.sqf",1165};
                };
                class moduleCuratorAddAddons {
                    f[]={"a3\modules_f_curator\curator\functions\fn_moduleCuratorAddAddons.sqf",3673};
                };
                class moduleCuratorAddCameraArea {
                    f[]={"a3\modules_f_curator\curator\functions\fn_moduleCuratorAddCameraArea.sqf",1374};
                };
                class moduleCuratorAddIcon {
                    f[]={"a3\modules_f_curator\curator\functions\fn_moduleCuratorAddIcon.sqf",1212};
                };
                class moduleCuratorSetCamera {
                    f[]={"a3\modules_f_curator\curator\functions\fn_moduleCuratorSetCamera.sqf",1019};
                };
                class moduleCuratorSetAttributes {
                    f[]={"a3\modules_f_curator\curator\functions\fn_moduleCuratorSetAttributes.sqf",997};
                };
            };
            class Effects {
                class modulePostprocess {
                    f[]={"a3\modules_f_curator\effects\functions\fn_modulePostprocess.sqf",1266};
                };
                class moduleSound {
                    f[]={"a3\modules_f_curator\effects\functions\fn_moduleSound.sqf",993};
                };
                class moduleSFX {
                    f[]={"a3\modules_f_curator\effects\functions\fn_moduleSFX.sqf",519};
                };
                class moduleTracers {
                    f[]={"a3\modules_f_curator\effects\functions\fn_moduleTracers.sqf",2043};
                };
                class moduleProjectile {
                    f[]={"a3\modules_f_curator\effects\functions\fn_moduleProjectile.sqf",4549};
                };
            };
            class Environment {
                class moduleSkiptime {
                    f[]={"a3\modules_f_curator\environment\functions\fn_moduleSkiptime.sqf",1686};
                };
                class moduleTimeMultiplier {
                    f[]={"a3\modules_f_curator\environment\functions\fn_moduleTimeMultiplier.sqf",311};
                };
                class moduleWeather {
                    f[]={"a3\modules_f_curator\environment\functions\fn_moduleWeather.sqf",1977};
                };
            };
            class Intel {
                class moduleDiary {
                    f[]={"a3\modules_f_curator\intel\functions\fn_moduleDiary.sqf",994};
                };
                class moduleEndMission {
                    f[]={"a3\modules_f_curator\intel\functions\fn_moduleEndMission.sqf",965};
                };
                class moduleMissionName {
                    f[]={"a3\modules_f_curator\intel\functions\fn_moduleMissionName.sqf",5010};
                };
            };
            class Lightning {
                class moduleLightning {
                    f[]={"a3\modules_f_curator\lightning\functions\fn_moduleLightning.sqf",1553};
                };
            };
            class Mines {
                class moduleMine {
                    f[]={"a3\modules_f_curator\mines\functions\fn_moduleMine.sqf",769};
                };
            };
            class Misc {
                class moduleCoverMap {
                    f[]={"a3\modules_f_curator\misc\functions\fn_moduleCoverMap.sqf",2062};
                };
                class moduleRadioChannelCreate {
                    f[]={"a3\modules_f_curator\misc\functions\fn_moduleRadioChannelCreate.sqf",2667};
                };
                class moduleRemoteControl {
                    f[]={"a3\modules_f_curator\misc\functions\fn_moduleRemoteControl.sqf",4953};
                };
            };
            class Multiplayer {
                class moduleZoneProtection {
                    f[]={"a3\modules_f_curator\multiplayer\functions\fn_moduleZoneProtection.sqf",3748};
                };
                class moduleCountdown {
                    f[]={"a3\modules_f_curator\multiplayer\functions\fn_moduleCountdown.sqf",1704};
                };
                class moduleRespawnTickets {
                    f[]={"a3\modules_f_curator\multiplayer\functions\fn_moduleRespawnTickets.sqf",1100};
                };
                class moduleBleedTickets {
                    f[]={"a3\modules_f_curator\multiplayer\functions\fn_moduleBleedTickets.sqf",707};
                };
            };
            class Objectives {
            };
            class Respawn {
                class moduleRespawnPosition {
                    f[]={"a3\modules_f_curator\respawn\functions\fn_moduleRespawnPosition.sqf",4831};
                };
                class moduleRespawnInventory {
                    f[]={"a3\modules_f_curator\respawn\functions\fn_moduleRespawnInventory.sqf",383};
                };
            };
        };
        class A3_Missions_F_Curator {
            class MissionTypes {
                class moduleMPTypeDefense {
                    f[]={"A3\missions_f_curator\MPTypes\Defense\initServer.sqf",5812};
                    a[]={"a3_missions_f_curator"};
                    m[]={"curator"};
                };
                class moduleMPTypeSeize {
                    f[]={"A3\missions_f_curator\MPTypes\Seize\initServer.sqf",3635};
                    a[]={"a3_missions_f_curator"};
                    m[]={"curator"};
                };
                class moduleMPTypeSectorControl {
                    f[]={"A3\missions_f_curator\MPTypes\SectorControl\initServer.sqf",2006};
                    a[]={"a3_missions_f_curator"};
                    m[]={"curator"};
                };
                class moduleMPTypeGameMaster {
                    f[]={"A3\missions_f_curator\MPTypes\GameMaster\initServer.sqf",1364};
                    a[]={"a3_missions_f_curator"};
                    m[]={"curator"};
                };
            };
        };
        class A3_Modules_F_Kart {
            class Objectives {
            };
        };
        class A3_Bootcamp {
            class Inventory {
                class exportInventory {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_exportInventory.sqf",4855};
                };
                class saveInventory {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_saveInventory.sqf",2239};
                };
                class deleteInventory {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_deleteInventory.sqf",148};
                };
                class baseWeapon {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_baseWeapon.sqf",552};
                };
                class compatibleItems {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_compatibleItems.sqf",749};
                };
                class arsenal {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_arsenal.sqf",106296};
                };
                class addVirtualItemCargo {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_addVirtualItemCargo.sqf",1868};
                };
                class removeVirtualItemCargo {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_removeVirtualItemCargo.sqf",290};
                };
                class getVirtualItemCargo {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_getVirtualItemCargo.sqf",168};
                };
                class addVirtualWeaponCargo {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_addVirtualWeaponCargo.sqf",354};
                };
                class removeVirtualWeaponCargo {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_removeVirtualWeaponCargo.sqf",290};
                };
                class getVirtualWeaponCargo {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_getVirtualWeaponCargo.sqf",168};
                };
                class addVirtualMagazineCargo {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_addVirtualMagazineCargo.sqf",354};
                };
                class removeVirtualMagazineCargo {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_removeVirtualMagazineCargo.sqf",290};
                };
                class getVirtualMagazineCargo {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_getVirtualMagazineCargo.sqf",168};
                };
                class addVirtualBackpackCargo {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_addVirtualBackpackCargo.sqf",354};
                };
                class removeVirtualBackpackCargo {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_removeVirtualBackpackCargo.sqf",290};
                };
                class getVirtualBackpackCargo {
                    f[]={"A3\functions_f_bootcamp\Inventory\fn_getVirtualBackpackCargo.sqf",168};
                };
            };
            class Misc {
                class traceBullets {
                    f[]={"A3\functions_f_bootcamp\Misc\fn_traceBullets.sqf",3839};
                };
                class getUnitByUid {
                    f[]={"A3\functions_f_bootcamp\Misc\fn_getUnitByUid.sqf",201};
                };
                class moveAction {
                    f[]={"A3\functions_f_bootcamp\Misc\fn_moveAction.sqf",419};
                };
            };
            class Training {
                class target {
                    f[]={"A3\functions_f_bootcamp\Training\fn_target.sqf",17377};
                };
            };
            class VR {
                class VRDrawBorder {
                    f[]={"A3\functions_f_bootcamp\VR\fn_VRDrawBorder.sqf",535};
                };
                class VRDrawGrid {
                    f[]={"A3\functions_f_bootcamp\VR\fn_VRDrawGrid.sqf",3282};
                };
                class VREffectKilled {
                    f[]={"A3\functions_f_bootcamp\VR\fn_VREffectKilled.sqf",829};
                };
                class VRFadeIn {
                    f[]={"A3\functions_f_bootcamp\VR\fn_VRFadeIn.sqf",116};
                };
                class VRFadeOut {
                    f[]={"A3\functions_f_bootcamp\VR\fn_VRFadeOut.sqf",420};
                };
                class VRSpawnEffect {
                    f[]={"A3\functions_f_bootcamp\VR\fn_VRSpawnEffect.sqf",1383};
                };
                class VRSpawnSelector {
                    f[]={"A3\functions_f_bootcamp\VR\fn_VRSpawnSelector.sqf",744};
                };
                class VRTimer {
                    f[]={"A3\functions_f_bootcamp\VR\fn_VRTimer.sqf",967};
                };
                class VRHitpart {
                    f[]={"A3\functions_f_bootcamp\VR\fn_VRHitpart.sqf",4334};
                };
            };
            class GUI {
                class animateTaskWaypoint {
                    f[]={"A3\functions_f_bootcamp\GUI\fn_animateTaskWaypoint.sqf",756};
                };
            };
        };
        class A3_Modules_F_Bootcamp {
            class Misc {
                class moduleBootcampStage {
                    f[]={"a3\modules_f_bootcamp\misc\functions\fn_moduleBootcampStage.sqf",286};
                };
                class moduleHint {
                    f[]={"a3\modules_f_bootcamp\misc\functions\fn_moduleHint.sqf",1120};
                };
                class modulePunishment {
                    f[]={"a3\modules_f_bootcamp\misc\functions\fn_modulePunishment.sqf",1175};
                };
                class moduleArsenal {
                    f[]={"a3\modules_f_bootcamp\misc\functions\fn_moduleArsenal.sqf",1104};
                };
            };
        };
        class A3_Heli {
            class VR {
            };
            class Params {
                class paramViewDistance {
                    f[]={"A3\functions_f_heli\Params\fn_paramViewDistance.sqf",137};
                };
            };
            class Misc {
                class didJip {
                    f[]={"A3\functions_f_heli\Misc\fn_didJip.sqf",24};
                };
                class synchronizedObjects {
                    f[]={"A3\functions_f_heli\Misc\fn_synchronizedObjects.sqf",690};
                };
            };
            class FFV {
                class ffvUpdate {
                    f[]={"A3\functions_f_heli\FFV\fn_ffvUpdate.sqf",726};
                };
            };
        };
        class A3_Missions_F_Heli {
            class MissionTypes {
                class ModuleMPTypeGroundSupport {
                    f[]={"A3\Missions_F_Heli\MPTypes\GroundSupport\init.sqf",1090};
                    a[]={"a3_missions_f_heli"};
                    m[]={"heli"};
                };
                class ModuleMPTypeGroundSupportBase {
                    f[]={"A3\Missions_F_Heli\MPTypes\GroundSupportBase\init.sqf",861};
                    a[]={"a3_missions_f_heli"};
                    m[]={"heli"};
                };
            };
        };
        class A3_Modules_F_Heli {
            class Misc {
                class moduleSpawnAI {
                    f[]={"a3\modules_f_heli\misc\functions\fn_moduleSpawnAI.sqf",2384};
                };
                class moduleSpawnAIPoint {
                    f[]={"a3\modules_f_heli\misc\functions\fn_moduleSpawnAIPoint.sqf",180};
                };
                class moduleSpawnAISectorTactic {
                    f[]={"a3\modules_f_heli\misc\functions\fn_moduleSpawnAISectorTactic.sqf",4780};
                };
                class moduleSpawnAIOptions {
                    f[]={"a3\modules_f_heli\misc\functions\fn_moduleSpawnAIOptions.sqf",353};
                };
                class moduleSlingload {
                    f[]={"a3\modules_f_heli\misc\functions\fn_moduleSlingload.sqf",496};
                };
            };
        };
        class A3_Mark {
            class Vehicles {
                class baseVehicle {
                    f[]={"A3\functions_f_mark\Vehicles\fn_baseVehicle.sqf",665};
                };
                class exportVehicle {
                    f[]={"A3\functions_f_mark\Vehicles\fn_exportVehicle.sqf",2286};
                };
                class garage {
                    f[]={"A3\functions_f_mark\Vehicles\fn_garage.sqf",41251};
                };
                class garage3DEN {
                    f[]={"A3\functions_f_mark\Vehicles\fn_garage3DEN.sqf",40812};
                };
                class initVehicleCrew {
                    f[]={"A3\functions_f_mark\Vehicles\fn_initVehicleCrew.sqf",1589};
                };
                class initVehicle {
                    f[]={"A3\functions_f_mark\Vehicles\fn_initVehicle.sqf",10157};
                };
                class initVehicleKart {
                    f[]={"A3\functions_f_mark\Vehicles\fn_initVehicleKart.sqf",2969};
                };
                class loadVehicle {
                    f[]={"A3\functions_f_mark\Vehicles\fn_loadVehicle.sqf",955};
                };
                class saveVehicle {
                    f[]={"A3\functions_f_mark\Vehicles\fn_saveVehicle.sqf",1535};
                };
                class getVehicleCustomization {
                    f[]={"A3\functions_f_mark\Vehicles\fn_getVehicleCustomization.sqf",1208};
                };
            };
            class VR {
            };
            class DynamicGroups {
                class dynamicGroups {
                    f[]={"A3\functions_f_mp_mark\DynamicGroups\fn_dynamicGroups.sqf",38377};
                };
            };
            class Revive {
                class disableRevive {
                    f[]={"a3\functions_f_mp_mark\revive\fn_disableRevive.sqf",1158};
                };
                class reenableRevive {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reenableRevive.sqf",1532};
                };
                class reviveInit {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveInit.sqf",15172};
                    a[]={"a3_functions_f_mp_mark"};
                    m[]={"mark"};
                };
                class reviveEnabled {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveEnabled.sqf",377};
                };
                class reviveAllowed {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveAllowed.sqf",1234};
                };
                class reviveIsValid {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveIsValid.sqf",932};
                };
                class reviveIsValidSecure {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveIsValidSecure.sqf",960};
                };
                class reviveBleedOut {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveBleedOut.sqf",2629};
                };
                class reviveIconControl {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveIconControl.sqf",1057};
                };
                class reviveOnState {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveOnState.sqf",15017};
                };
                class reviveOnStateJIP {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveOnStateJIP.sqf",5130};
                };
                class reviveOnBeingRevived {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveOnBeingRevived.sqf",771};
                };
                class reviveOnForcingRespawn {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveOnForcingRespawn.sqf",847};
                };
                class reviveEhKilled {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveEhKilled.sqf",1372};
                };
                class reviveEhRespawn {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveEhRespawn.sqf",487};
                };
                class reviveEhDammaged {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveEhDammaged.sqf",1321};
                };
                class reviveEhHandleDamage {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveEhHandleDamage.sqf",1831};
                };
                class reviveEhHandleHeal {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveEhHandleHeal.sqf",575};
                };
                class reviveDebug {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveDebug.sqf",1671};
                };
                class reviveDamageReset {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveDamageReset.sqf",427};
                };
                class reviveSecureUnit {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveSecureUnit.sqf",646};
                };
                class reviveGet3dIcons {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveGet3dIcons.sqf",2518};
                };
                class reviveGetActionIcon {
                    f[]={"a3\functions_f_mp_mark\revive\fn_reviveGetActionIcon.sqf",1240};
                };
            };
            class GUI {
                class keyHold {
                    f[]={"a3\functions_f_mp_mark\gui\fn_keyHold.sqf",8334};
                };
            };
        };
        class A3_Missions_F_Mark {
        };
        class A3_Modules_F_Mark {
            class Objectives {
                class moduleHvtObjectives {
                    f[]={"a3\modules_f_mp_mark\objectives\functions\fn_moduleHvtObjectives.sqf",754};
                };
                class moduleHvtObjectivesInstance {
                    f[]={"a3\modules_f_mp_mark\objectives\functions\fn_moduleHvtObjectivesInstance.sqf",32102};
                };
                class moduleHvtObjective {
                    f[]={"a3\modules_f_mp_mark\objectives\functions\fn_moduleHvtObjective.sqf",27800};
                };
                class moduleHvtInit {
                    f[]={"a3\modules_f_mp_mark\objectives\scripts\init.sqf",470};
                    a[]={"a3_modules_f_mp_mark"};
                    m[]={"mark"};
                };
            };
        };
        class A3_Expansion_A {
            class Misc {
                class getIntersectionsUnderCursor {
                    f[]={"A3\functions_f_exp_a\Misc\fn_getIntersectionsUnderCursor.sqf",547};
                };
                class getObjectBBD {
                    f[]={"A3\functions_f_exp_a\Misc\fn_getObjectBBD.sqf",635};
                };
                class getName {
                    f[]={"A3\functions_f_exp_a\Misc\fn_getName.sqf",551};
                };
                class getNetMode {
                    f[]={"A3\functions_f_exp_a\Misc\fn_getNetMode.sqf",294};
                };
            };
            class Math {
                class lerp {
                    f[]={"A3\functions_f_exp_a\Math\fn_lerp.sqf",260};
                };
                class getAngleDelta {
                    f[]={"A3\functions_f_exp_a\Math\fn_getAngleDelta.sqf",100};
                };
            };
            class Spectator {
                class EGObjectiveVisualizer {
                    f[]={"A3\functions_f_exp_a\EGSpectator\fn_EGObjectiveVisualizer.sqf",7481};
                };
                class EGObjectiveVisualizerDraw {
                    f[]={"A3\functions_f_exp_a\EGSpectator\fn_EGObjectiveVisualizerDraw.sqf",2144};
                };
                class EGSpectator {
                    f[]={"A3\functions_f_exp_a\EGSpectator\fn_EGSpectator.sqf",19452};
                };
                class EGSpectatorCamera {
                    f[]={"A3\functions_f_exp_a\EGSpectator\fn_EGSpectatorCamera.sqf",22371};
                };
                class EGSpectatorCameraTick {
                    f[]={"A3\functions_f_exp_a\EGSpectator\fn_EGSpectatorCameraTick.sqf",7407};
                };
                class EGSpectatorCameraSetTarget {
                    f[]={"A3\functions_f_exp_a\EGSpectator\fn_EGSpectatorCameraSetTarget.sqf",5464};
                };
                class EGSpectatorCameraResetTarget {
                    f[]={"A3\functions_f_exp_a\EGSpectator\fn_EGSpectatorCameraResetTarget.sqf",5277};
                };
                class EGSpectatorCameraPrepareTarget {
                    f[]={"A3\functions_f_exp_a\EGSpectator\fn_EGSpectatorCameraPrepareTarget.sqf",6787};
                };
                class EGSpectatorDraw2D {
                    f[]={"A3\functions_f_exp_a\EGSpectator\fn_EGSpectatorDraw2D.sqf",8387};
                };
                class EGSpectatorDraw3D {
                    f[]={"A3\functions_f_exp_a\EGSpectator\fn_EGSpectatorDraw3D.sqf",9545};
                };
                class EGSpectatorGetUnitsToDraw {
                    f[]={"A3\functions_f_exp_a\EGSpectator\fn_EGSpectatorGetUnitsToDraw.sqf",8603};
                };
            };
        };
        class A3_Missions_F_Exp_A {
        };
        class A3_Props_F_Exp_A_Military_Equipment {
            class Scripts {
                class DataTerminalAnimate {
                    f[]={"A3\Props_F_Exp_A\Military\Equipment\Scripts\fn_DataTerminalAnimate.sqf",312};
                };
                class DataTerminalColor {
                    f[]={"A3\Props_F_Exp_A\Military\Equipment\Scripts\fn_DataTerminalColor.sqf",3686};
                };
            };
        };
        class 3DEN {
            class Default {
                class 3DENExportOldSQM {
                    f[]={"A3\3DEN\Functions\fn_3DENExportOldSQM.sqf",3241};
                };
                class 3DENExportTerrainBuilder {
                    f[]={"A3\3DEN\Functions\fn_3DENExportTerrainBuilder.sqf",1768};
                };
                class 3DENExportSQF {
                    f[]={"A3\3DEN\Functions\fn_3DENExportSQF.sqf",40340};
                };
                class 3DENVisionMode {
                    f[]={"A3\3DEN\Functions\fn_3DENVisionMode.sqf",418};
                };
                class 3DENNotification {
                    f[]={"A3\3DEN\Functions\fn_3DENNotification.sqf",3140};
                };
                class 3DENToolbar {
                    f[]={"A3\3DEN\Functions\fn_3DENToolbar.sqf",2741};
                };
                class 3DENGrid {
                    f[]={"A3\3DEN\Functions\fn_3DENGrid.sqf",3275};
                };
                class 3DENCamera {
                    f[]={"A3\3DEN\Functions\fn_3DENCamera.sqf",2392};
                };
                class 3DENInterface {
                    f[]={"A3\3DEN\Functions\fn_3DENInterface.sqf",11083};
                };
                class 3DENModuleDescription {
                    f[]={"A3\3DEN\Functions\fn_3DENModuleDescription.sqf",2691};
                };
                class 3DENDrawLocations {
                    f[]={"A3\3DEN\Functions\fn_3DENDrawLocations.sqf",815};
                };
                class 3DENListLocations {
                    f[]={"A3\3DEN\Functions\fn_3DENListLocations.sqf",1621};
                };
                class 3DENMissionPreview {
                    f[]={"A3\3DEN\Functions\fn_3DENMissionPreview.sqf",2896};
                };
                class 3DENStatusBar {
                    f[]={"A3\3DEN\Functions\fn_3DENStatusBar.sqf",2795};
                };
                class 3DENTutorial {
                    f[]={"A3\3DEN\Functions\fn_3DENTutorial.sqf",8341};
                };
                class 3DENEntityMenu {
                    f[]={"A3\3DEN\Functions\fn_3DENEntityMenu.sqf",8263};
                };
                class 3DENControlsHint {
                    f[]={"A3\3DEN\Functions\fn_3DENControlsHint.sqf",12374};
                };
                class 3DENShowMessage {
                    f[]={"A3\3DEN\Functions\fn_3DENShowMessage.sqf",3313};
                };
                class 3DENFlashlight {
                    f[]={"A3\3DEN\Functions\fn_3DENFlashlight.sqf",1482};
                };
                class 3DENIntel {
                    f[]={"A3\3DEN\Functions\fn_3DENIntel.sqf",1832};
                };
                class 3DENDiagCreateList {
                    f[]={"A3\3DEN\Functions\fn_3DENDiagCreateList.sqf",1611};
                };
                class 3DENDiagFonts {
                    f[]={"A3\3DEN\Functions\fn_3DENDiagFonts.sqf",1660};
                };
                class 3DENDiagMouseControl {
                    f[]={"A3\3DEN\Functions\fn_3DENDiagMouseControl.sqf",4520};
                };
                class 3DENExportAttributes {
                    f[]={"A3\3DEN\Functions\fn_3DENExportAttributes.sqf",4020};
                };
                class initAmmoBox {
                    f[]={"A3\3DEN\Functions\fn_initAmmoBox.sqf",1769};
                };
                class highlightControl {
                    f[]={"A3\3DEN\Functions\fn_highlightControl.sqf",2773};
                };
                class initListNBoxSorting {
                    f[]={"A3\3DEN\Functions\fn_initListNBoxSorting.sqf",3329};
                };
                class initSliderValue {
                    f[]={"A3\3DEN\Functions\fn_initSliderValue.sqf",1803};
                };
            };
            class Attributes {
                class 3DENAttributeDoorStates {
                    f[]={"A3\3DEN\Functions\Attributes\fn_3DENAttributeDoorStates.sqf",7467};
                };
            };
        };
        class A3_Expansion {
            class Conversations {
                class showSubtitle {
                    f[]={"a3\functions_f_exp\conversations\fn_showSubtitle.sqf",2208};
                };
            };
        };
        class A3_Missions_F_Exp {
            class Campaign {
                class EXP_camp_IFF {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_IFF.sqf",1903};
                };
                class EXP_camp_balanceGroup {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_balanceGroup.sqf",1529};
                };
                class EXP_camp_hasMissionStarted {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_hasMissionStarted.sqf",143};
                };
                class EXP_camp_SITREP {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_SITREP.sqf",1257};
                };
                class EXP_camp_setCinematicMode {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_setCinematicMode.sqf",1884};
                };
                class EXP_camp_getCinematicMode {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_getCinematicMode.sqf",160};
                };
                class EXP_camp_initClasses {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_initClasses.sqf",753};
                };
                class EXP_camp_initCharacter {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_initCharacter.sqf",4020};
                };
                class EXP_camp_checkpoint {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_checkpoint.sqf",370};
                };
                class EXP_camp_getPlayersGroup {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_getPlayersGroup.sqf",107};
                };
                class EXP_camp_playerChecklist {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_playerChecklist.sqf",4810};
                };
                class EXP_camp_replaceVehicles {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_replaceVehicles.sqf",1350};
                };
                class EXP_camp_guidedProjectile {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_guidedProjectile.sqf",2656};
                };
                class EXP_camp_dynamicAISkill {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_dynamicAISkill.sqf",1891};
                };
                class EXP_camp_setSkill {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_setSkill.sqf",1213};
                };
                class EXP_camp_playTimelineVideo {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_playTimelineVideo.sqf",391};
                };
                class EXP_camp_playSubtitles {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_playSubtitles.sqf",503};
                };
                class EXP_camp_addTickets {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_addTickets.sqf",857};
                };
                class EXP_camp_initDifficulty {
                    f[]={"a3\missions_f_exp\campaign\functions\fn_EXP_camp_initDifficulty.sqf",3409};
                };
            };
            class CampaignManager {
                class EXP_camp_manager {
                    f[]={"a3\missions_f_exp\campaign\functions\manager\fn_EXP_camp_manager.sqf",3961};
                };
                class EXP_camp_manager_setState {
                    f[]={"a3\missions_f_exp\campaign\functions\manager\fn_EXP_camp_manager_setState.sqf",427};
                };
                class EXP_camp_manager_getState {
                    f[]={"a3\missions_f_exp\campaign\functions\manager\fn_EXP_camp_manager_getState.sqf",168};
                };
                class EXP_camp_manager_triggerEvent {
                    f[]={"a3\missions_f_exp\campaign\functions\manager\fn_EXP_camp_manager_triggerEvent.sqf",719};
                };
                class EXP_camp_manager_onPlayerRegistered {
                    f[]={"a3\missions_f_exp\campaign\functions\manager\fn_EXP_camp_manager_onPlayerRegistered.sqf",433};
                };
            };
            class CampaignLobby {
                class EXP_camp_lobby {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby.sqf",1373};
                };
                class EXP_camp_lobby_clearVars {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_clearVars.sqf",2670};
                };
                class EXP_camp_lobby_ctrlSetColor {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_ctrlSetColor.sqf",498};
                };
                class EXP_camp_lobby_findHost {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_findHost.sqf",920};
                };
                class EXP_camp_lobby_getHostSettings {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_getHostSettings.sqf",3312};
                };
                class EXP_camp_lobby_getPlayerSquadName {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_getPlayerSquadName.sqf",270};
                };
                class EXP_camp_lobby_go {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_go.sqf",1977};
                };
                class EXP_camp_lobby_intro {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_intro.sqf",12733};
                };
                class EXP_camp_lobby_launch {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_launch.sqf",27084};
                };
                class EXP_camp_lobby_loop {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_loop.sqf",5326};
                };
                class EXP_camp_lobby_missionCountdown {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_missionCountdown.sqf",1961};
                };
                class EXP_camp_lobby_onLoad {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_onLoad.sqf",17};
                };
                class EXP_camp_lobby_updatePlayerStatus {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_updatePlayerStatus.sqf",756};
                };
                class EXP_camp_lobby_onUnLoad {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_onUnLoad.sqf",529};
                };
                class EXP_camp_lobby_playMissionVideo {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_playMissionVideo.sqf",6077};
                };
                class EXP_camp_lobby_serverPing {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_serverPing.sqf",110};
                };
                class EXP_camp_lobby_serverUpdate {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_serverUpdate.sqf",3781};
                };
                class EXP_camp_lobby_structuredText {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_structuredText.sqf",541};
                };
                class EXP_camp_lobby_UIMilitaryManager {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_UIMilitaryManager.sqf",3557};
                };
                class EXP_camp_lobby_UIMissionCountdown {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_UIMissionCountdown.sqf",2327};
                };
                class EXP_camp_lobby_UIMissionManager {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_UIMissionManager.sqf",22988};
                };
                class EXP_camp_lobby_UIOverlayManager {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_UIOverlayManager.sqf",7358};
                };
                class EXP_camp_lobby_UIProgressManager {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_UIProgressManager.sqf",11031};
                };
                class EXP_camp_lobby_UISettingsManager {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_UISettingsManager.sqf",8657};
                };
                class EXP_camp_lobby_updateHostSettings {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_updateHostSettings.sqf",7384};
                };
                class EXP_camp_lobby_updateIntel {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_updateIntel.sqf",4735};
                };
                class EXP_camp_lobby_updateMilitaryEfficiency {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_updateMilitaryEfficiency.sqf",5083};
                };
                class EXP_camp_lobby_updatePlayers {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_EXP_camp_lobby_updatePlayers.sqf",5532};
                };
                class HEXtoRGB {
                    f[]={"a3\missions_f_exp\Lobby\functions\fn_HEXtoRGB.sqf",540};
                };
            };
        };
        class A3_Destroyer {
            class Destroyer {
                class Destroyer01Init {
                    f[]={"A3\Functions_F_Destroyer\Functions\Destroyer\fn_Destroyer01Init.sqf",1124};
                };
                class Destroyer01PosUpdate {
                    f[]={"A3\Functions_F_Destroyer\Functions\Destroyer\fn_Destroyer01PosUpdate.sqf",685};
                };
                class Destroyer01EdenInit {
                    f[]={"A3\Functions_F_Destroyer\Functions\Destroyer\fn_Destroyer01EdenInit.sqf",1115};
                };
                class Destroyer01EdenDelete {
                    f[]={"A3\Functions_F_Destroyer\Functions\Destroyer\fn_Destroyer01EdenDelete.sqf",249};
                };
                class Destroyer01InitHullNumbers {
                    f[]={"A3\Functions_F_Destroyer\Functions\Destroyer\fn_Destroyer01InitHullNumbers.sqf",309};
                };
                class Destroyer01OperateHangarDoors {
                    f[]={"A3\Functions_F_Destroyer\Functions\Destroyer\fn_Destroyer01OperateHangarDoors.sqf",412};
                };
                class Destroyer01AnimateHangarDoors {
                    f[]={"A3\Functions_F_Destroyer\Functions\Destroyer\fn_Destroyer01AnimateHangarDoors.sqf",670};
                };
                class Destroyer01PlayHangarDoorSound {
                    f[]={"A3\Functions_F_Destroyer\Functions\Destroyer\fn_Destroyer01PlayHangarDoorSound.sqf",576};
                };
                class Destroyer01HandleDamage {
                    f[]={"A3\Functions_F_Destroyer\Functions\Destroyer\fn_Destroyer01HandleDamage.sqf",878};
                };
                class Destroyer01GetShipPart {
                    f[]={"A3\Functions_F_Destroyer\Functions\Destroyer\fn_Destroyer01GetShipPart.sqf",552};
                };
            };
            class BoatRecovery {
                class BoatRack01Init {
                    f[]={"A3\Functions_F_Destroyer\Functions\BoatRecovery\fn_BoatRack01Init.sqf",2236};
                };
                class BoatRack01ActionAdd {
                    f[]={"A3\Functions_F_Destroyer\Functions\BoatRecovery\fn_BoatRack01ActionAdd.sqf",2389};
                };
                class BoatRack01CanExetuteAction {
                    f[]={"A3\Functions_F_Destroyer\Functions\BoatRecovery\fn_BoatRack01CanExetuteAction.sqf",357};
                };
                class BoatRack01CanProgressAction {
                    f[]={"A3\Functions_F_Destroyer\Functions\BoatRecovery\fn_BoatRack01CanProgressAction.sqf",363};
                };
                class BoatRack01ActionRemove {
                    f[]={"A3\Functions_F_Destroyer\Functions\BoatRecovery\fn_BoatRack01ActionRemove.sqf",882};
                };
                class BoatRack01InitAdjustZOffsets {
                    f[]={"A3\Functions_F_Destroyer\Functions\BoatRecovery\fn_BoatRack01InitAdjustZOffsets.sqf",460};
                };
                class BoatRack01AdjustZOffset {
                    f[]={"A3\Functions_F_Destroyer\Functions\BoatRecovery\fn_BoatRack01AdjustZOffset.sqf",790};
                };
            };
        };
        class A3_Jets {
            class AircrfatCarrier {
                class Carrier01Init {
                    f[]={"A3\Functions_F_Jets\Functions\AircraftCarrier\fn_Carrier01Init.sqf",3474};
                };
                class Carrier01PosUpdate {
                    f[]={"A3\Functions_F_Jets\Functions\AircraftCarrier\fn_Carrier01PosUpdate.sqf",686};
                };
                class Carrier01EdenInit {
                    f[]={"A3\Functions_F_Jets\Functions\AircraftCarrier\fn_Carrier01EdenInit.sqf",1107};
                };
                class Carrier01EdenDelete {
                    f[]={"A3\Functions_F_Jets\Functions\AircraftCarrier\fn_Carrier01EdenDelete.sqf",338};
                };
                class Carrier01AnimateDeflectors {
                    f[]={"A3\Functions_F_Jets\Functions\AircraftCarrier\fn_Carrier01AnimateDeflectors.sqf",600};
                };
                class Carrier01CatapultActionAdd {
                    f[]={"A3\Functions_F_Jets\Functions\AircraftCarrier\fn_Carrier01CatapultActionAdd.sqf",5160};
                };
                class Carrier01CatapultActionRemove {
                    f[]={"A3\Functions_F_Jets\Functions\AircraftCarrier\fn_Carrier01CatapultActionRemove.sqf",392};
                };
                class Carrier01CatapultLockTo {
                    f[]={"A3\Functions_F_Jets\Functions\AircraftCarrier\fn_Carrier01CatapultLockTo.sqf",2163};
                };
                class Carrier01CatapultID {
                    f[]={"A3\Functions_F_Jets\Functions\AircraftCarrier\fn_Carrier01CatapultID.sqf",2587};
                };
                class Carrier01CrewPlayAnim {
                    f[]={"A3\Functions_F_Jets\Functions\AircraftCarrier\fn_Carrier01CrewPlayAnim.sqf",978};
                };
                class Carrier01CrewInAnim {
                    f[]={"A3\Functions_F_Jets\Functions\AircraftCarrier\fn_Carrier01CrewInAnim.sqf",455};
                };
            };
            class CarrierOps {
                class AircraftCatapultLaunch {
                    f[]={"A3\Functions_F_Jets\Functions\Aircraft\fn_AircraftCatapultLaunch.sqf",1413};
                };
                class AircraftTailhook {
                    f[]={"A3\Functions_F_Jets\Functions\Aircraft\fn_AircraftTailhook.sqf",3297};
                };
            };
            class AircraftFunctionality {
                class AircraftFoldingWings {
                    f[]={"A3\Functions_F_Jets\Functions\Aircraft\fn_AircraftFoldingWings.sqf",1539};
                };
                class AircraftTailhookAi {
                    f[]={"A3\Functions_F_Jets\Functions\Aircraft\fn_AircraftTailhookAi.sqf",1252};
                };
            };
            class Ejection {
                class PlaneEjection {
                    f[]={"A3\Functions_F_Jets\Functions\Ejection\fn_PlaneEjection.sqf",5882};
                };
                class PlaneAiEject {
                    f[]={"A3\Functions_F_Jets\Functions\Ejection\fn_PlaneAiEject.sqf",510};
                };
                class PlaneEjectionFX {
                    f[]={"A3\Functions_F_Jets\Functions\Ejection\fn_PlaneEjectionFX.sqf",1480};
                };
                class EjectionSeatRelease {
                    f[]={"A3\Functions_F_Jets\Functions\Ejection\fn_EjectionSeatRelease.sqf",243};
                };
            };
        };
        class A3_CombatPatrol {
            class CombatPatrol {
                class CPDummy {
                    f[]={"A3\Functions_F_Patrol\CombatPatrol\fn_CPDummy.sqf",0};
                };
                class CPFindEmptyPosition {
                    f[]={"A3\Functions_F_Patrol\CombatPatrol\fn_CPFindEmptyPosition.sqf",405};
                };
                class CPInit {
                    f[]={"A3\Functions_F_Patrol\CombatPatrol\fn_CPInit.sqf",36215};
                };
                class CPLog {
                    f[]={"A3\Functions_F_Patrol\CombatPatrol\fn_CPLog.sqf",101};
                };
                class CPPickSafeDir {
                    f[]={"A3\Functions_F_Patrol\CombatPatrol\fn_CPPickSafeDir.sqf",392};
                };
                class CPSafeAzimuths {
                    f[]={"A3\Functions_F_Patrol\CombatPatrol\fn_CPSafeAzimuths.sqf",1281};
                };
                class CPSendReinforcements {
                    f[]={"A3\Functions_F_Patrol\CombatPatrol\fn_CPSendReinforcements.sqf",5463};
                };
                class CPSpawnGarrisonGrp {
                    f[]={"A3\Functions_F_Patrol\CombatPatrol\fn_CPSpawnGarrisonGrp.sqf",1173};
                };
                class CPWaitUntil {
                    f[]={"A3\Functions_F_Patrol\CombatPatrol\fn_CPWaitUntil.sqf",117};
                };
            };
            class Misc {
                class laptopPlayVideo {
                    f[]={"a3\Functions_F_Patrol\Misc\fn_laptopPlayVideo.sqf",828};
                };
                class laptopInit {
                    f[]={"a3\Functions_F_Patrol\Misc\fn_laptopInit.sqf",467};
                };
            };
        };
        class A3_Orange {
            class Misc {
                class initLeaflet {
                    f[]={"A3\functions_f_orange\Misc\fn_initLeaflet.sqf",2802};
                };
                class getCloudletParams {
                    f[]={"A3\functions_f_orange\Misc\fn_getCloudletParams.sqf",1586};
                };
                class createRuin {
                    f[]={"A3\functions_f_orange\Misc\fn_createRuin.sqf",1004};
                };
                class showAANArticle {
                    f[]={"A3\functions_f_orange\Misc\fn_showAANArticle.sqf",569};
                };
                class setObjectShotParents {
                    f[]={"A3\functions_f_orange\Misc\fn_setObjectShotParents.sqf",963};
                };
                class firedBombDemine {
                    f[]={"A3\functions_f_orange\Misc\fn_firedBombDemine.sqf",1379};
                };
                class carAlarm {
                    f[]={"A3\functions_f_orange\Misc\fn_carAlarm.sqf",1655};
                };
                class smoothStep {
                    f[]={"A3\functions_f_orange\Misc\fn_smoothStep.sqf",103};
                };
                class initInspectable {
                    f[]={"A3\functions_f_orange\Misc\fn_initInspectable.sqf",1555};
                };
            };
            class Waypoints {
                class wpDemine {
                    f[]={"A3\functions_f_orange\Waypoints\fn_wpDemine.sqf",3350};
                };
            };
        };
        class A3_TacOps {
            class Map {
                class zoomOnArea {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_zoomOnArea.sqf",981};
                };
                class showMarker {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_showMarker.sqf",973};
                };
                class showMarkerArray {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_showMarkerArray.sqf",933};
                };
                class hideMarker {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_hideMarker.sqf",963};
                };
                class hideMarkerArray {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_hideMarkerArray.sqf",771};
                };
                class cancelMarker {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_cancelMarker.sqf",1233};
                };
                class rotateMarker {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_rotateMarker.sqf",2110};
                };
                class getMarkerState {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_getMarkerState.sqf",112};
                };
                class colorMarker {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_colorMarker.sqf",784};
                };
                class changeColorMarker {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_changeColorMarker.sqf",1052};
                };
                class resizeMarker {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_resizeMarker.sqf",674};
                };
                class moveMarker {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_moveMarker.sqf",1701};
                };
                class simpleMoveMarker {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_simpleMoveMarker.sqf",580};
                };
                class blinkMarker {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_blinkMarker.sqf",749};
                };
                class getMarkers {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_getMarkers.sqf",303};
                };
                class shakeMap {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_shakeMap.sqf",694};
                };
                class shakeMapEH {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_shakeMapEH.sqf",1059};
                };
                class zoomLock {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_zoomLock.sqf",370};
                };
                class zoomLockEH {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_zoomLockEH.sqf",259};
                };
                class zoomUnlock {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_zoomUnlock.sqf",359};
                };
                class getBorderMarkers {
                    f[]={"\A3\Functions_F_TacOps\Map\fn_getBorderMarkers.sqf",347};
                };
            };
            class Systems {
                class eventTimeline {
                    f[]={"\A3\Functions_F_Tacops\Systems\fn_eventTimeline.sqf",2767};
                };
                class holdKey {
                    f[]={"\A3\Functions_F_Tacops\Systems\fn_holdKey.sqf",7716};
                };
                class missionSelector {
                    f[]={"\A3\Functions_F_Tacops\Systems\fn_missionSelector.sqf",5739};
                };
                class createTooltip {
                    f[]={"\A3\Functions_F_Tacops\Systems\fn_createTooltip.sqf",4097};
                };
                class scaleAndTranslate {
                    f[]={"\A3\Functions_F_Tacops\Systems\fn_scaleAndTranslate.sqf",2461};
                };
                class animatePicture {
                    f[]={"\A3\Functions_F_Tacops\Systems\fn_animatePicture.sqf",3204};
                };
                class lookAtArray {
                    f[]={"\A3\Functions_F_Tacops\Systems\fn_lookAtArray.sqf",1019};
                };
                class lookAtArrayEH {
                    f[]={"\A3\Functions_F_Tacops\Systems\fn_lookAtArrayEH.sqf",1436};
                };
                class animatedScreen {
                    f[]={"\A3\Functions_F_Tacops\Systems\fn_animatedScreen.sqf",20651};
                };
                class animatedBriefing {
                    f[]={"\A3\Functions_F_Tacops\Systems\fn_animatedBriefing.sqf",4450};
                };
                class animatedOpening {
                    f[]={"\A3\Functions_F_Tacops\Systems\fn_animatedOpening.sqf",1090};
                };
            };
        };
        class A3_Modules_F_Tacops {
            class CivilianPresence {
                class moduleCivilianPresence {
                    f[]={"A3\Modules_F_Tacops\Ambient\CivilianPresence\init.sqf",5782};
                    a[]={"a3_modules_f_tacops"};
                    m[]={"tacops"};
                };
                class moduleCivilianPresenceUnit {
                    f[]={"A3\Modules_F_Tacops\Ambient\CivilianPresenceUnit\init.sqf",353};
                    a[]={"a3_modules_f_tacops"};
                    m[]={"tacops"};
                };
                class moduleCivilianPresenceSafeSpot {
                    f[]={"A3\Modules_F_Tacops\Ambient\CivilianPresenceSafeSpot\init.sqf",353};
                    a[]={"a3_modules_f_tacops"};
                    m[]={"tacops"};
                };
            };
        };
        class A3_Tank {
            class Map {
                class randomPosIntersection {
                    f[]={"\A3\Functions_F_Tank\Map\fn_randomPosIntersection.sqf",3421};
                };
            };
        };
        class A3_Warlords {
            class Warlords {
                class WLAIPathSegmentation {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLAIPathSegmentation.sqf",513};
                };
                class WLAircraftArrival {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLAircraftArrival.sqf",3676};
                };
                class WLAirdrop {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLAirdrop.sqf",9714};
                };
                class WLAISectorScan {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLAISectorScan.sqf",909};
                };
                class WLCalculateIncome {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLCalculateIncome.sqf",215};
                };
                class WLCalculateSectorConnections {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLCalculateSectorConnections.sqf",741};
                };
                class WLClientInit {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLClientInit.sqf",14343};
                };
                class WLDebug {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLDebug.sqf",107};
                };
                class WLDefenceSetup {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLDefenceSetup.sqf",4024};
                };
                class WLDropPurchase {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLDropPurchase.sqf",2849};
                };
                class WLFundsInfo {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLFundsInfo.sqf",9052};
                };
                class WLInit {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLInit.sqf",11011};
                };
                class WLInSectorArea {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLInSectorArea.sqf",729};
                };
                class WLLoadoutApply {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLLoadoutApply.sqf",283};
                };
                class WLLoadoutGrab {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLLoadoutGrab.sqf",83};
                };
                class WLMostVotedSector {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLMostVotedSector.sqf",616};
                };
                class WLNavalArrival {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLNavalArrival.sqf",2366};
                };
                class WLOpenArsenal {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLOpenArsenal.sqf",238};
                };
                class WLOSD {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLOSD.sqf",670};
                };
                class WLOutlineIcons {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLOutlineIcons.sqf",890};
                };
                class WLParseAssetList {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLParseAssetList.sqf",7836};
                };
                class WLPlayersTracking {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLPlayersTracking.sqf",2166};
                };
                class WLPlayersTrackingServer {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLPlayersTrackingServer.sqf",1289};
                };
                class WLPurchaseMenu {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLPurchaseMenu.sqf",26959};
                };
                class WLRandomPosRect {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLRandomPosRect.sqf",423};
                };
                class WLRecalculateServices {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLRecalculateServices.sqf",470};
                };
                class WLRemovalHandle {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLRemovalHandle.sqf",956};
                };
                class WLReputation {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLReputation.sqf",367};
                };
                class WLRequestFastTravel {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLRequestFastTravel.sqf",8180};
                };
                class WLRequestFundsTransfer {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLRequestFundsTransfer.sqf",3653};
                };
                class WLRequestPurchase {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLRequestPurchase.sqf",1308};
                };
                class WLRequestSectorScan {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLRequestSectorScan.sqf",2635};
                };
                class WLRequestVotingReset {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLRequestVotingReset.sqf",328};
                };
                class WLSectorIconUpdate {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSectorIconUpdate.sqf",4620};
                };
                class WLSectorInit {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSectorInit.sqf",2245};
                };
                class WLSectorListing {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSectorListing.sqf",899};
                };
                class WLSectorPopulate {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSectorPopulate.sqf",4025};
                };
                class WLSectorsCommonInit {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSectorsCommonInit.sqf",8166};
                };
                class WLSectorSelectionEnd {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSectorSelectionEnd.sqf",1047};
                };
                class WLSectorSelectionStart {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSectorSelectionStart.sqf",3759};
                };
                class WLSectorsSetup {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSectorsSetup.sqf",11381};
                };
                class WLSectorUpdate {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSectorUpdate.sqf",1554};
                };
                class WLSeizingBarHandle {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSeizingBarHandle.sqf",1617};
                };
                class WLSendResponseTeam {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSendResponseTeam.sqf",5948};
                };
                class WLShowInfo {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLShowInfo.sqf",270};
                };
                class WLSideToFaction {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSideToFaction.sqf",107};
                };
                class WLSoundMsg {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSoundMsg.sqf",363};
                };
                class WLSubroutine_purchaseMenuAssetAvailability {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSubroutine_purchaseMenuAssetAvailability.sqf",4711};
                };
                class WLSubroutine_purchaseMenuGetUIScale {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSubroutine_purchaseMenuGetUIScale.sqf",35};
                };
                class WLSubroutine_purchaseMenuHandleDLC {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSubroutine_purchaseMenuHandleDLC.sqf",433};
                };
                class WLSubroutine_purchaseMenuRefresh {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSubroutine_purchaseMenuRefresh.sqf",6552};
                };
                class WLSubroutine_purchaseMenuSetAssetDetails {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSubroutine_purchaseMenuSetAssetDetails.sqf",2243};
                };
                class WLSubroutine_purchaseMenuSetItemsList {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSubroutine_purchaseMenuSetItemsList.sqf",1191};
                };
                class WLSyncTime {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSyncTime.sqf",612};
                };
                class WLSyncedTime {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLSyncedTime.sqf",63};
                };
                class WLUpdateAO {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLUpdateAO.sqf",153};
                };
                class WLVarsInit {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLVarsInit.sqf",11177};
                };
                class WLVehicleHandle {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLVehicleHandle.sqf",2398};
                };
                class WLVotingBarHandle {
                    f[]={"A3\Functions_F_Warlords\Warlords\fn_WLVotingBarHandle.sqf",944};
                };
            };
            class Misc {
                class WLSmoothText {
                    f[]={"A3\Functions_F_Warlords\Misc\fn_WLSmoothText.sqf",3614};
                };
            };
        };
        class A3_Modules_F_Tank {
            class TanksMp {
                class moduleVanguardFob {
                    f[]={"A3\Modules_F_Tank\Vanguard\VanguardFob\init.sqf",44};
                    a[]={"a3_modules_f_tank"};
                    m[]={"tank"};
                };
                class moduleVanguardScorePersistence {
                    f[]={"A3\Modules_F_Tank\Vanguard\VanguardScorePersistence\init.sqf",516};
                    a[]={"a3_modules_f_tank"};
                    m[]={"tank"};
                };
                class moduleVanguardObjective {
                    f[]={"A3\Modules_F_Tank\Vanguard\VanguardObjective\init.sqf",450};
                    a[]={"a3_modules_f_tank"};
                    m[]={"tank"};
                };
            };
        };
    };
	class OFD {
		class CAU_DiscordRichPresence{class Scripts{class init{f[]={"cau\discordrichpresence\fn_init.sqf",1735};a[]={"cau_discordrichpresence"};m[]={"@discord rich presence"};};class update{f[]={"cau\discordrichpresence\fn_update.sqf",576};};};};
		class CAU_Expansion{class System{class Core{f[]={"cau_expansion\core\?\system.sqf",1856};a[]={"cau_expansion_core"};m[]={"@connorau expansion mod"};};class Markers__0{f[]={"cau_expansion\markers\c\?\system.sqf",1856};a[]={"cau_expansion_markers__0"};m[]={"@connorau expansion mod"};};class Markers__0_0{f[]={"cau_expansion\markers\i\?\system.sqf",1856};a[]={"cau_expansion_markers__0_0"};m[]={"@connorau expansion mod"};};class Textures__1{f[]={"cau_expansion\textures\c\c\?\system.sqf",1856};a[]={"cau_expansion_textures__1"};m[]={"@connorau expansion mod"};};class Textures__4{f[]={"cau_expansion\textures\c\d\?\system.sqf",1856};a[]={"cau_expansion_textures__4"};m[]={"@connorau expansion mod"};};class Textures__3{f[]={"cau_expansion\textures\c\i\?\system.sqf",1856};a[]={"cau_expansion_textures__3"};m[]={"@connorau expansion mod"};};class Textures__0{f[]={"cau_expansion\textures\c\mod\?\system.sqf",1856};a[]={"cau_expansion_textures__0"};m[]={"@connorau expansion mod"};};class Textures__2{f[]={"cau_expansion\textures\c\w\?\system.sqf",1856};a[]={"cau_expansion_textures__2"};m[]={"@connorau expansion mod"};};class Textures__1_0{f[]={"cau_expansion\textures\i\c\c\?\system.sqf",1856};a[]={"cau_expansion_textures__1_0"};m[]={"@connorau expansion mod"};};class Textures__1_4{f[]={"cau_expansion\textures\i\c\e\?\system.sqf",1856};a[]={"cau_expansion_textures__1_4"};m[]={"@connorau expansion mod"};};class Textures__1_3{f[]={"cau_expansion\textures\i\c\g\?\system.sqf",1856};a[]={"cau_expansion_textures__1_3"};m[]={"@connorau expansion mod"};};class Textures__1_2{f[]={"cau_expansion\textures\i\c\r\?\system.sqf",1856};a[]={"cau_expansion_textures__1_2"};m[]={"@connorau expansion mod"};};class Textures__1_1{f[]={"cau_expansion\textures\i\c\v\?\system.sqf",1856};a[]={"cau_expansion_textures__1_1"};m[]={"@connorau expansion mod"};};class Textures__4_0{f[]={"cau_expansion\textures\i\d\c\?\system.sqf",1856};a[]={"cau_expansion_textures__4_0"};m[]={"@connorau expansion mod"};};class Textures__4_1{f[]={"cau_expansion\textures\i\d\v\?\system.sqf",1856};a[]={"cau_expansion_textures__4_1"};m[]={"@connorau expansion mod"};};class Textures__4_25{f[]={"cau_expansion\textures\i\d\v\boat_civil_01\?\system.sqf",1856};a[]={"cau_expansion_textures__4_25"};m[]={"@connorau expansion mod"};};class Textures__4_23{f[]={"cau_expansion\textures\i\d\v\boat_transport_02\?\system.sqf",1856};a[]={"cau_expansion_textures__4_23"};m[]={"@connorau expansion mod"};};class Textures__4_4{f[]={"cau_expansion\textures\i\d\v\hatchback_01\?\system.sqf",1856};a[]={"cau_expansion_textures__4_4"};m[]={"@connorau expansion mod"};};class Textures__4_17{f[]={"cau_expansion\textures\i\d\v\heli_light_01\?\system.sqf",1856};a[]={"cau_expansion_textures__4_17"};m[]={"@connorau expansion mod"};};class Textures__4_20{f[]={"cau_expansion\textures\i\d\v\heli_light_02\?\system.sqf",1856};a[]={"cau_expansion_textures__4_20"};m[]={"@connorau expansion mod"};};class Textures__4_15{f[]={"cau_expansion\textures\i\d\v\heli_light_03\?\system.sqf",1856};a[]={"cau_expansion_textures__4_15"};m[]={"@connorau expansion mod"};};class Textures__4_16{f[]={"cau_expansion\textures\i\d\v\heli_transport_02\?\system.sqf",1856};a[]={"cau_expansion_textures__4_16"};m[]={"@connorau expansion mod"};};class Textures__4_19{f[]={"cau_expansion\textures\i\d\v\heli_transport_03\?\system.sqf",1856};a[]={"cau_expansion_textures__4_19"};m[]={"@connorau expansion mod"};};class Textures__4_18{f[]={"cau_expansion\textures\i\d\v\heli_transport_04\?\system.sqf",1856};a[]={"cau_expansion_textures__4_18"};m[]={"@connorau expansion mod"};};class Textures__4_2{f[]={"cau_expansion\textures\i\d\v\offroad_01\?\system.sqf",1856};a[]={"cau_expansion_textures__4_2"};m[]={"@connorau expansion mod"};};class Textures__4_7{f[]={"cau_expansion\textures\i\d\v\offroad_02\?\system.sqf",1856};a[]={"cau_expansion_textures__4_7"};m[]={"@connorau expansion mod"};};class Textures__4_21{f[]={"cau_expansion\textures\i\d\v\plane_civil_01\?\system.sqf",1856};a[]={"cau_expansion_textures__4_21"};m[]={"@connorau expansion mod"};};class Textures__4_5{f[]={"cau_expansion\textures\i\d\v\quadbike_01\?\system.sqf",1856};a[]={"cau_expansion_textures__4_5"};m[]={"@connorau expansion mod"};};class Textures__4_24{f[]={"cau_expansion\textures\i\d\v\rubberboat\?\system.sqf",1856};a[]={"cau_expansion_textures__4_24"};m[]={"@connorau expansion mod"};};class Textures__4_22{f[]={"cau_expansion\textures\i\d\v\scooter_transport_01\?\system.sqf",1856};a[]={"cau_expansion_textures__4_22"};m[]={"@connorau expansion mod"};};class Textures__4_3{f[]={"cau_expansion\textures\i\d\v\suv_01\?\system.sqf",1856};a[]={"cau_expansion_textures__4_3"};m[]={"@connorau expansion mod"};};class Textures__4_12{f[]={"cau_expansion\textures\i\d\v\t_lsv_01\?\system.sqf",1856};a[]={"cau_expansion_textures__4_12"};m[]={"@connorau expansion mod"};};class Textures__4_13{f[]={"cau_expansion\textures\i\d\v\t_lsv_02\?\system.sqf",1856};a[]={"cau_expansion_textures__4_13"};m[]={"@connorau expansion mod"};};class Textures__4_14{f[]={"cau_expansion\textures\i\d\v\t_vtol_01\?\system.sqf",1856};a[]={"cau_expansion_textures__4_14"};m[]={"@connorau expansion mod"};};class Textures__4_9{f[]={"cau_expansion\textures\i\d\v\truck_01\?\system.sqf",1856};a[]={"cau_expansion_textures__4_9"};m[]={"@connorau expansion mod"};};class Textures__4_10{f[]={"cau_expansion\textures\i\d\v\truck_02\?\system.sqf",1856};a[]={"cau_expansion_textures__4_10"};m[]={"@connorau expansion mod"};};class Textures__4_11{f[]={"cau_expansion\textures\i\d\v\truck_03\?\system.sqf",1856};a[]={"cau_expansion_textures__4_11"};m[]={"@connorau expansion mod"};};class Textures__4_8{f[]={"cau_expansion\textures\i\d\v\van_01\?\system.sqf",1856};a[]={"cau_expansion_textures__4_8"};m[]={"@connorau expansion mod"};};class Textures__4_6{f[]={"cau_expansion\textures\i\d\v\van_02\?\system.sqf",1856};a[]={"cau_expansion_textures__4_6"};m[]={"@connorau expansion mod"};};class Textures__3_0{f[]={"cau_expansion\textures\i\i\c\?\system.sqf",1856};a[]={"cau_expansion_textures__3_0"};m[]={"@connorau expansion mod"};};class Textures__3_1{f[]={"cau_expansion\textures\i\i\v\?\system.sqf",1856};a[]={"cau_expansion_textures__3_1"};m[]={"@connorau expansion mod"};};class Textures__0_0{f[]={"cau_expansion\textures\i\mod\?\system.sqf",1856};a[]={"cau_expansion_textures__0_0"};m[]={"@connorau expansion mod"};};class Textures__2_0{f[]={"cau_expansion\textures\i\w\c\?\system.sqf",1856};a[]={"cau_expansion_textures__2_0"};m[]={"@connorau expansion mod"};};class Textures__2_1{f[]={"cau_expansion\textures\i\w\v\?\system.sqf",1856};a[]={"cau_expansion_textures__2_1"};m[]={"@connorau expansion mod"};};};};
	};
	class MFD {};
	/*
		// 0 - default arma, 1 - mod, 2 - mission
		_mode=0;
		_i=["A3","HSim","A2PMC","A2OA","A2","A3_EPA","A3_EPC","A3_Functions_F_Curator","A3_Modules","A3_Modules_F_EPB","A3_Structures","A3_Modules_F_Curator","A3_Missions_F_Curator","A3_Modules_F_Kart","A3_Bootcamp","A3_Modules_F_Bootcamp","A3_Heli","A3_Missions_F_Heli","A3_Modules_F_Heli","A3_Mark","A3_Missions_F_Mark","A3_Modules_F_Mark","A3_Expansion_A","A3_Missions_F_Exp_A","A3_Props_F_Exp_A_Military_Equipment","3DEN","A3_Expansion","A3_Missions_F_Exp","A3_Destroyer","A3_Jets","A3_CombatPatrol","A3_Orange","A3_TacOps","A3_Modules_F_Tacops","A3_Tank","A3_Warlords","A3_Modules_F_Tank"]apply{tolower _x};
		_out=[];
		{
		    _fCNameTop=configname _x;
		    if(((tolower _fCNameTop in _i)isequalto(_mode==0))OR{_mode == 2})then{
		        _fTD=isText(_x>>'tag');
		        _fT=if _fTD then{getText(_x>>'tag')}else{_fCNameTop};
		        _out pushback ('    class '+_fCNameTop+' {'+endl);
		        {
		            _fCNameMid=configname _x;
		            _out pushback ('        class '+_fCNameMid+' {'+endl);
		            _fPD=isText(_x>>'file');
		            _fP=if _fPD then{getText(_x>>'file')}else{_fCNameMid};
		            {
		                _fCNameLow=configname _x;
		                _fE=if(isText(_x>>'ext'))then{getText(_x>>'ext')}else{'.sqf'};
		                if(_fE=='.sqf')then{
		                    _fTFinal = format["%1_fnc_%2",_fT,_fCNameLow];
		                    _fPFinal=if(isText(_x>>'file'))then{
		                        getText(_x>>'file')
		                    }else{
		                        ['functions\'+_fp,_fP]select _fPD
		                    };
		                    _fPFinal=if(['.sqf',_fPFinal]call BIS_fnc_inString)then{
		                        _fpFinal
		                    }else{
		                        _fPFinal+format['\fn_%1%2',_fCNameLow,_fE]
		                    };
		                    _fSAL = configSourceAddonList _x apply {tolower _x};
		                    _fSML = configSourceModList _x apply {tolower _x};
		                    _f = ['                f[]={',str _fpFinal,',',count preprocessFile _fpFinal,'};',endl] joinstring "";
		                    _a = if (count _fSAL > 0) then {['                a[]={',str _fSAL select [1,count str _fSAL - 2],'};',endl] joinstring ""} else {""};
		                    _m = if (count _fSML > 0) then {['                m[]={',str _fSML select [1,count str _fSML - 2],'};',endl] joinstring ""} else {""};
		                    _out pushbackunique (['            class ',_fCNameLow,' {',endl,_f,_a,_m,'            };',endl] joinstring '');
		                };
		            }foreach('true' configClasses _x);
		            _out pushback ('        };'+endl);
		        }foreach('true' configClasses _x);
		        _out pushback ('    };'+endl);
		    };
		}foreach('true' configClasses(([missionConfigFile,configFile]select(_mode != 2))>>'CfgFunctions'));
		_out=('class '+(['GFD','OFD'] param [_mode,'MFD'])+' {'+endl+(_out joinString '')+'};');
		copytoclipboard _out
	*/
    

    class GCSL {
        class ScrollBar {
            a[]={"a3_data_f","a3_data_f_particleeffects","a3_editor_f","a3_ui_f","a3_ui_f_curator","a3_ui_f_kart","a3_ui_f_mp_mark","a3_ui_f_exp_a","a3_data_f_exp_particleeffects","a3_ui_f_orange","a3_ui_f_tacops","a3_ui_f_tank"};
            m[]={"curator","kart","mark","expansion","orange","tacops","tank"};
        };
        class CfgMods {
            a[]={"a3_data_f","a3_language_f_beta","a3_language_f_gamma","a3_language_f_epa","a3_language_f_epb","a3_language_f_epc","a3_data_f_curator","a3_data_f_kart","a3_data_f_heli","a3_data_f_mark","a3_data_f_mod","a3_data_f_exp","a3_data_f_jets","a3_data_f_argo","a3_data_f_orange","a3_data_f_tacops","a3_data_f_tank","a3_data_f_warlords"};
            m[]={"curator","kart","heli","mark","expansion","jets","argo","orange","tacops","tank"};
        };
        class CfgExperience {};
        class CfgAISkill {};
        class CfgAILevelPresets {};
        class CfgDifficultyPresets {
            a[]={"a3_data_f"};
        };
        class CfgDifficulties {
            a[]={"a3_data_f"};
        };
        class CfgInventory {};
        class CfgCurator {
            a[]={"a3_ui_f","a3_ui_f_curator"};
            m[]={"curator"};
        };
        class ForcedMissionDifficultyArma {};
        class ForcedMissionDifficultyArgo {};
        class MonetizedServers {};
        class OfficialServersArma {};
        class OfficialServersArgo {};
        class SteamManagerConfig {};
        class CfgSteamSettings {};
        class CfgBrains {};
        class CfgTextureToMaterial {};
        class CfgMaterials {
            a[]={"a3_map_data","a3_data_f_exp"};
            m[]={"expansion"};
        };
        class CfgTLMaterials {};
        class CfgVehicleActions {};
        class CfgWeaponCursors {
            a[]={"a3_ui_f"};
        };
        class CfgMineTriggers {
            a[]={"a3_weapons_f_explosives","a3_weapons_f_orange_explosives"};
            m[]={"orange"};
        };
        class CfgAmmo {
            a[]={"a3_weapons_f","a3_weapons_f_explosives","a3_data_f_curator","a3_data_f_curator_misc","a3_weapons_f_kart","a3_weapons_f_mark","a3_weapons_f_mod","a3_weapons_f_exp","a3_weapons_f_jets","a3_weapons_f_orange","a3_weapons_f_orange_explosives","a3_weapons_f_tank","a3_weapons_f_destroyer","a3_weapons_f_sams"};
            m[]={"curator","kart","mark","expansion","jets","orange","tank"};
        };
        class CfgRecoils {
            a[]={"a3_weapons_f","a3_weapons_f_mark","a3_weapons_f_mod","a3_weapons_f_exp"};
            m[]={"mark","expansion"};
        };
        class CfgMagazines {
            a[]={"a3_weapons_f","a3_weapons_f_explosives","a3_weapons_f_kart","a3_weapons_f_mark","a3_weapons_f_mod","a3_weapons_f_exp","a3_weapons_f_jets","a3_weapons_f_orange","a3_weapons_f_orange_explosives","a3_weapons_f_tank","a3_weapons_f_destroyer","a3_weapons_f_sams"};
            m[]={"kart","mark","expansion","jets","orange","tank"};
        };
        class Mode_SemiAuto {
            a[]={"a3_weapons_f"};
        };
        class Mode_Burst {
            a[]={"a3_weapons_f"};
        };
        class Mode_FullAuto {
            a[]={"a3_weapons_f"};
        };
        class CfgWeapons {
            a[]={"a3_weapons_f","a3_weapons_f_items","a3_weapons_f_launchers_nlaw","a3_weapons_f_launchers_rpg32","a3_weapons_f_launchers_titan","a3_weapons_f_longrangerifles_dmr_01","a3_weapons_f_longrangerifles_ebr","a3_weapons_f_longrangerifles_gm6","a3_weapons_f_longrangerifles_m320","a3_weapons_f_machineguns_m200","a3_weapons_f_machineguns_zafir","a3_weapons_f_pistols_acpc2","a3_weapons_f_pistols_p07","a3_weapons_f_pistols_pistol_heavy_01","a3_weapons_f_pistols_pistol_heavy_02","a3_weapons_f_pistols_rook40","a3_weapons_f_rifles_khaybar","a3_weapons_f_rifles_mk20","a3_weapons_f_rifles_mx","a3_weapons_f_rifles_mx_black","a3_weapons_f_rifles_sdar","a3_weapons_f_rifles_trg20","a3_weapons_f_smgs_pdw2000","a3_weapons_f_smgs_smg_01","a3_weapons_f_smgs_smg_02","a3_characters_f","a3_weapons_f_acc","a3_weapons_f_beta_acc","a3_drones_f_weapons_f_gamma_items","a3_data_f_curator","a3_data_f_curator_virtual","a3_weapons_f_kart_pistols_pistol_signal_f","a3_weapons_f_mark","a3_weapons_f_mark_acc","a3_weapons_f_mark_longrangerifles_dmr_01","a3_weapons_f_mark_longrangerifles_dmr_02","a3_weapons_f_mark_longrangerifles_dmr_03","a3_weapons_f_mark_longrangerifles_dmr_04","a3_weapons_f_mark_longrangerifles_dmr_05","a3_weapons_f_mark_longrangerifles_dmr_06","a3_weapons_f_mark_longrangerifles_ebr","a3_weapons_f_mark_machineguns_m200","a3_weapons_f_mark_machineguns_mmg_01","a3_weapons_f_mark_machineguns_mmg_02","a3_weapons_f_mark_rifles_mx","a3_characters_f_mark","a3_weapons_f_mod","a3_weapons_f_mod_smgs_smg_03","a3_weapons_f_exp","a3_weapons_f_exp_launchers_rpg32","a3_weapons_f_exp_launchers_rpg7","a3_weapons_f_exp_launchers_titan","a3_weapons_f_exp_longrangerifles_dmr_07","a3_weapons_f_exp_machineguns_lmg_03","a3_weapons_f_exp_pistols_pistol_01","a3_weapons_f_exp_rifles_ak12","a3_weapons_f_exp_rifles_akm","a3_weapons_f_exp_rifles_aks","a3_weapons_f_exp_rifles_arx","a3_weapons_f_exp_rifles_ctar","a3_weapons_f_exp_rifles_ctars","a3_weapons_f_exp_rifles_spar_01","a3_weapons_f_exp_rifles_spar_02","a3_weapons_f_exp_rifles_spar_03","a3_weapons_f_exp_smgs_smg_05","a3_characters_f_exp","a3_characters_f_exp_headgear","a3_characters_f_exp_vests","a3_weapons_f_jets","a3_characters_f_jets_vests","a3_weapons_f_patrol","a3_weapons_f_orange","a3_weapons_f_orange_items","a3_characters_f_orange","a3_characters_f_orange_headgear","a3_characters_f_orange_vests","a3_characters_f_tacops","a3_sounds_f_tank","a3_weapons_f_tank","a3_weapons_f_tank_launchers_mraws","a3_weapons_f_tank_launchers_vorona","a3_characters_f_tank_headgear","a3_characters_f_tank_uniforms","a3_weapons_f_destroyer","a3_weapons_f_sams"};
            m[]={"curator","kart","mark","expansion","jets","argo","orange","tacops","tank"};
        };
        class SlotInfo {};
        class DefaultVehicleSystemsDisplayManagerLeft {
            a[]={"a3_ui_f"};
        };
        class DefaultVehicleSystemsDisplayManagerRight {
            a[]={"a3_ui_f"};
        };
        class DefaultVehicleSystemsDisplayManagerLeftSensors {
            a[]={"a3_ui_f"};
        };
        class DefaultVehicleSystemsDisplayManagerRightSensors {
            a[]={"a3_ui_f"};
        };
        class CfgInventoryGlobalVariable {
            a[]={"a3_data_f"};
        };
        class CfgDestroySounds {
            a[]={"a3_sounds_f"};
        };
        class CfgCloudlets {
            a[]={"a3_data_f","a3_data_f_particleeffects","a3_data_f_kart_particleeffects","a3_data_f_exp_particleeffects","a3_data_f_jets","a3_weapons_f_orange","a3_data_f_sams"};
            m[]={"kart","expansion","jets","orange"};
        };
        class CfgOpticsEffect {
            a[]={"a3_data_f"};
        };
        class MissileManualEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class MissileEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsSmall {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsBlood {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsWater {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExplosionEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustsEffect {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustsEffectBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class LDustEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class RDustEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class LWaterEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class RWaterEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class LEngEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class REngEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class FDustEffects {};
        class HeliDust {
            a[]={"a3_data_f_particleeffects"};
        };
        class HeliWater {
            a[]={"a3_data_f_particleeffects"};
        };
        class DamageSmokeHeli {
            a[]={"a3_data_f_particleeffects"};
        };
        class DamageSmokePlane {
            a[]={"a3_data_f_particleeffects"};
        };
        class ScudEffect {
            a[]={"a3_data_f_particleeffects"};
        };
        class CfgDestructPos {
            a[]={"a3_data_f","a3_weapons_f","a3_weapons_f_ammoboxes","a3_static_f","a3_drones_f_weapons_f_gamma_ammoboxes","a3_weapons_f_bootcamp_ammoboxes"};
        };
        class CfgDamageAround {
            a[]={"a3_structures_f"};
        };
        class WeaponFireGun {};
        class WeaponFireMGun {};
        class WeaponCloudsGun {};
        class WeaponCloudsMGun {
            a[]={"a3_characters_f"};
        };
        class CfgLights {
            a[]={"a3_data_f_particleeffects","a3_weapons_f_orange"};
            m[]={"orange"};
        };
        class CfgCloth {
            a[]={"a3_structures_f_mil_flags","a3_structures_f_heli_ind_airport"};
            m[]={"heli"};
        };
        class CfgVehicleClasses {
            a[]={"a3_data_f","a3_modules_f","a3_characters_f","a3_modules_f_curator","a3_data_f_kart","a3_data_f_bootcamp","a3_data_f_heli","a3_data_f_exp"};
            m[]={"curator","kart","heli","expansion"};
        };
        class CfgFactionClasses {
            a[]={"a3_data_f","a3_modules_f","a3_modules_f_beta","a3_data_f_curator","a3_modules_f_curator","a3_data_f_bootcamp","a3_data_f_exp","a3_modules_f_patrol","a3_data_f_orange","a3_modules_f_warlords"};
            m[]={"curator","expansion","argo","orange"};
        };
        class AirplaneHUD {
            a[]={"a3_air_f","a3_air_f_beta"};
        };
        class CfgVehicles {
            a[]={"a3_data_f","a3_data_f_particleeffects","a3_misc_f_helpers","a3_modules_f","a3_modules_f_effects","a3_modules_f_events","a3_modules_f_groupmodifiers","a3_modules_f_hc","a3_modules_f_intel","a3_modules_f_livefeed","a3_modules_f_marta","a3_modules_f_misc","a3_modules_f_multiplayer","a3_modules_f_objectmodifiers","a3_modules_f_sites","a3_modules_f_skirmish","a3_modules_f_strategicmap","a3_modules_f_supports","a3_modules_f_beta_firingdrills","a3_modules_f_epb_misc","a3_roads_f","a3_rocks_f","a3_rocks_f_blunt","a3_rocks_f_sharp","a3_rocks_f_water","a3_structures_f","a3_structures_f_bridges","a3_structures_f_civ_accessories","a3_structures_f_civ_ancient","a3_structures_f_civ_belltowers","a3_structures_f_civ_calvaries","a3_structures_f_civ_camping","a3_structures_f_civ_chapels","a3_structures_f_civ_constructions","a3_structures_f_civ_dead","a3_structures_f_civ_garbage","a3_structures_f_civ_infoboards","a3_structures_f_civ_lamps","a3_structures_f_civ_market","a3_structures_f_civ_offices","a3_structures_f_civ_pavements","a3_structures_f_civ_playground","a3_structures_f_civ_sportsgrounds","a3_structures_f_civ_statues","a3_structures_f_dominants_amphitheater","a3_structures_f_dominants_castle","a3_structures_f_dominants_church","a3_structures_f_dominants_hospital","a3_structures_f_dominants_lighthouse","a3_structures_f_dominants_wip","a3_structures_f_furniture","a3_structures_f_households_addons","a3_structures_f_households_house_big01","a3_structures_f_households_house_big02","a3_structures_f_households_house_shop01","a3_structures_f_households_house_shop02","a3_structures_f_households_house_small01","a3_structures_f_households_house_small02","a3_structures_f_households_house_small03","a3_structures_f_households_slum","a3_structures_f_households_stone_big","a3_structures_f_households_stone_shed","a3_structures_f_households_stone_small","a3_structures_f_households_wip","a3_structures_f_ind_airport","a3_structures_f_ind_cargo","a3_structures_f_ind_carservice","a3_structures_f_ind_concretemixingplant","a3_structures_f_ind_crane","a3_structures_f_ind_dieselpowerplant","a3_structures_f_ind_factory","a3_structures_f_ind_fuelstation","a3_structures_f_ind_fuelstation_small","a3_structures_f_ind_pipes","a3_structures_f_ind_powerlines","a3_structures_f_ind_reservoirtank","a3_structures_f_ind_shed","a3_structures_f_ind_solarpowerplant","a3_structures_f_ind_tank","a3_structures_f_ind_transmitter_tower","a3_structures_f_ind_wavepowerplant","a3_structures_f_ind_windmill","a3_structures_f_ind_windpowerplant","a3_structures_f_items","a3_structures_f_items_documents","a3_structures_f_items_electronics","a3_structures_f_items_food","a3_structures_f_items_gadgets","a3_structures_f_items_luggage","a3_structures_f_items_stationery","a3_structures_f_items_tools","a3_structures_f_items_valuables","a3_structures_f_items_vessels","a3_structures_f_mil_bagbunker","a3_structures_f_mil_bagfence","a3_structures_f_mil_barracks","a3_structures_f_mil_bunker","a3_structures_f_mil_cargo","a3_structures_f_mil_flags","a3_structures_f_mil_fortification","a3_structures_f_mil_helipads","a3_structures_f_mil_offices","a3_structures_f_mil_radar","a3_structures_f_mil_shelters","a3_structures_f_mil_tenthangar","a3_structures_f_naval_buoys","a3_structures_f_naval_piers","a3_structures_f_naval_rowboats","a3_structures_f_research","a3_structures_f_system","a3_structures_f_training","a3_structures_f_training_invisibletarget","a3_structures_f_walls","a3_structures_f_epa_civ_camping","a3_structures_f_epa_civ_constructions","a3_structures_f_epa_items_electronics","a3_structures_f_epa_items_food","a3_structures_f_epa_items_medical","a3_structures_f_epa_items_tools","a3_structures_f_epa_items_vessels","a3_structures_f_epa_walls","a3_structures_f_epb_civ_accessories","a3_structures_f_epb_civ_camping","a3_structures_f_epb_civ_dead","a3_structures_f_epb_civ_garbage","a3_structures_f_epb_civ_graffiti","a3_structures_f_epb_civ_playground","a3_structures_f_epb_furniture","a3_structures_f_epb_items_documents","a3_structures_f_epb_items_luggage","a3_structures_f_epb_items_military","a3_structures_f_epb_items_vessels","a3_structures_f_epb_naval_fishing","a3_structures_f_epc_civ_accessories","a3_structures_f_epc_civ_camping","a3_structures_f_epc_civ_garbage","a3_structures_f_epc_civ_infoboards","a3_structures_f_epc_civ_kiosks","a3_structures_f_epc_civ_playground","a3_structures_f_epc_civ_tourism","a3_structures_f_epc_dominants_ghosthotel","a3_structures_f_epc_dominants_stadium","a3_structures_f_epc_items_documents","a3_structures_f_epc_items_electronics","a3_structures_f_epc_walls","a3_animals_f","a3_animals_f_fishes","a3_animals_f_rabbit","a3_animals_f_snakes","a3_animals_f_turtle","a3_animals_f_beta_chicken","a3_animals_f_beta_dog","a3_animals_f_beta_goat","a3_animals_f_beta_sheep","a3_signs_f","a3_signs_f_signs_ad","a3_weapons_f","a3_weapons_f_ammoboxes","a3_weapons_f_explosives","a3_weapons_f_longrangerifles_gm6","a3_weapons_f_longrangerifles_m320","a3_characters_f","a3_missions_f_beta","a3_missions_f_gamma","a3_sounds_f","a3_static_f","a3_static_f_mortar_01","a3_air_f","a3_air_f_heli_light_01","a3_air_f_heli_light_02","a3_air_f_beta","a3_air_f_beta_heli_attack_01","a3_air_f_beta_heli_attack_02","a3_air_f_beta_heli_transport_01","a3_air_f_beta_heli_transport_02","a3_air_f_beta_parachute_02","a3_air_f_gamma_plane_fighter_03","a3_armor_f_beta","a3_armor_f_beta_apc_tracked_01","a3_armor_f_beta_apc_tracked_02","a3_armor_f_gamma_mbt_01","a3_armor_f_gamma_mbt_02","a3_boat_f","a3_boat_f_boat_armed_01","a3_boat_f_boat_transport_01","a3_boat_f_beta_boat_armed_01","a3_boat_f_beta_boat_transport_01","a3_boat_f_beta_sdv_01","a3_boat_f_gamma_boat_civil_01","a3_boat_f_gamma_boat_civil_04","a3_boat_f_gamma_boat_transport_01","a3_characters_f_common","a3_missions_f_epa","a3_soft_f","a3_soft_f_mrap_01","a3_soft_f_mrap_02","a3_soft_f_offroad_01","a3_soft_f_quadbike_01","a3_soft_f_beta_mrap_03","a3_soft_f_beta_truck_01","a3_soft_f_beta_truck_02","a3_soft_f_gamma_hatchback_01","a3_soft_f_gamma_suv_01","a3_soft_f_gamma_truck_01","a3_soft_f_gamma_truck_02","a3_soft_f_gamma_van_01","a3_static_f_aa_01","a3_static_f_at_01","a3_structures_f_wrecks","a3_structures_f_epa_mil_scrapyard","a3_air_f_epb_heli_light_03","a3_air_f_epc_plane_cas_01","a3_air_f_epc_plane_cas_02","a3_armor_f_beta_apc_wheeled_01","a3_armor_f_beta_apc_wheeled_02","a3_armor_f_epb_apc_tracked_03","a3_armor_f_epb_mbt_03","a3_armor_f_epc_mbt_01","a3_armor_f_gamma_apc_wheeled_03","a3_boat_f_epc_submarine_01","a3_drones_f_air_f_gamma_uav_01","a3_drones_f_air_f_gamma_uav_02","a3_drones_f_soft_f_gamma_ugv_01","a3_drones_f_weapons_f_gamma_ammoboxes","a3_soft_f_epc_truck_03","a3_data_f_curator","a3_data_f_curator_intel","a3_data_f_curator_misc","a3_data_f_curator_respawn","a3_data_f_curator_virtual","a3_modules_f_curator","a3_modules_f_curator_animals","a3_modules_f_curator_cas","a3_modules_f_curator_curator","a3_modules_f_curator_effects","a3_modules_f_curator_environment","a3_modules_f_curator_flares","a3_modules_f_curator_intel","a3_modules_f_curator_lightning","a3_modules_f_curator_mines","a3_modules_f_curator_misc","a3_modules_f_curator_multiplayer","a3_modules_f_curator_objectives","a3_modules_f_curator_ordnance","a3_modules_f_curator_respawn","a3_modules_f_curator_smokeshells","a3_missions_f_curator","a3_modules_f_curator_chemlights","a3_modules_f_kart","a3_modules_f_kart_timetrials","a3_soft_f_kart_kart_01","a3_structures_f_kart_civ_sportsgrounds","a3_structures_f_kart_mil_flags","a3_structures_f_kart_signs_companies","a3_weapons_f_kart_pistols_pistol_signal_f","a3_characters_f_kart","a3_modules_f_bootcamp_misc","a3_sounds_f_bootcamp","a3_structures_f_bootcamp_civ_camping","a3_structures_f_bootcamp_civ_sportsgrounds","a3_structures_f_bootcamp_ind_cargo","a3_structures_f_bootcamp_items_electronics","a3_structures_f_bootcamp_items_food","a3_structures_f_bootcamp_items_sport","a3_structures_f_bootcamp_system","a3_structures_f_bootcamp_training","a3_structures_f_bootcamp_vr_blocks","a3_structures_f_bootcamp_vr_coverobjects","a3_structures_f_bootcamp_vr_helpers","a3_weapons_f_bootcamp_ammoboxes","a3_missions_f_heli","a3_modules_f_heli_misc","a3_structures_f_heli_civ_accessories","a3_structures_f_heli_civ_constructions","a3_structures_f_heli_civ_garbage","a3_structures_f_heli_civ_market","a3_structures_f_heli_furniture","a3_structures_f_heli_ind_airport","a3_structures_f_heli_ind_cargo","a3_structures_f_heli_ind_machines","a3_structures_f_heli_items_airport","a3_structures_f_heli_items_electronics","a3_structures_f_heli_items_food","a3_structures_f_heli_items_luggage","a3_structures_f_heli_items_sport","a3_structures_f_heli_items_tools","a3_structures_f_heli_vr_helpers","a3_supplies_f_heli","a3_supplies_f_heli_bladders","a3_supplies_f_heli_cargonets","a3_supplies_f_heli_fuel","a3_supplies_f_heli_slingload","a3_air_f_heli_heli_transport_03","a3_air_f_heli_heli_transport_04","a3_modules_f_mp_mark","a3_static_f_mark_designator_01","a3_static_f_mark_designator_02","a3_structures_f_mark_items_military","a3_structures_f_mark_items_sport","a3_structures_f_mark_mil_flags","a3_structures_f_mark_training","a3_structures_f_mark_vr_shapes","a3_structures_f_mark_vr_targets","a3_weapons_f_mark","a3_characters_f_mark","a3_props_f_exp_a_military_equipment","a3_structures_f_exp_a_vr_blocks","a3_data_f_exp_a_virtual","a3_3den","a3_weapons_f_mod","a3_props_f_exp_civilian_garbage","a3_props_f_exp_commercial_market","a3_props_f_exp_industrial_heavyequipment","a3_props_f_exp_infrastructure_railways","a3_props_f_exp_infrastructure_traffic","a3_props_f_exp_military_camps","a3_props_f_exp_military_oldplanewrecks","a3_props_f_exp_naval_boats","a3_rocks_f_exp_cliff","a3_rocks_f_exp_lavastones","a3_soft_f_exp_lsv_01","a3_soft_f_exp_lsv_02","a3_soft_f_exp_mrap_01","a3_soft_f_exp_mrap_02","a3_soft_f_exp_offroad_01","a3_soft_f_exp_offroad_02","a3_soft_f_exp_quadbike_01","a3_soft_f_exp_truck_01","a3_soft_f_exp_truck_03","a3_soft_f_exp_ugv_01","a3_soft_f_exp_van_01","a3_static_f_exp_aa_01","a3_static_f_exp_at_01","a3_static_f_exp_gmg_01","a3_static_f_exp_hmg_01","a3_static_f_exp_mortar_01","a3_structures_f_exp_civilian_accessories","a3_structures_f_exp_civilian_garages","a3_structures_f_exp_civilian_house_big_01","a3_structures_f_exp_civilian_house_big_02","a3_structures_f_exp_civilian_house_big_03","a3_structures_f_exp_civilian_house_big_04","a3_structures_f_exp_civilian_house_big_05","a3_structures_f_exp_civilian_house_native_01","a3_structures_f_exp_civilian_house_native_02","a3_structures_f_exp_civilian_house_small_01","a3_structures_f_exp_civilian_house_small_02","a3_structures_f_exp_civilian_house_small_03","a3_structures_f_exp_civilian_house_small_04","a3_structures_f_exp_civilian_house_small_05","a3_structures_f_exp_civilian_house_small_06","a3_structures_f_exp_civilian_school_01","a3_structures_f_exp_civilian_sheds","a3_structures_f_exp_civilian_slum_01","a3_structures_f_exp_civilian_slum_02","a3_structures_f_exp_civilian_slum_03","a3_structures_f_exp_civilian_slum_04","a3_structures_f_exp_civilian_slum_05","a3_structures_f_exp_civilian_sportsgrounds","a3_structures_f_exp_commercial_addons","a3_structures_f_exp_commercial_advertisements","a3_structures_f_exp_commercial_fuelstation_01","a3_structures_f_exp_commercial_fuelstation_02","a3_structures_f_exp_commercial_hotel_01","a3_structures_f_exp_commercial_hotel_02","a3_structures_f_exp_commercial_market","a3_structures_f_exp_commercial_multistorybuilding_01","a3_structures_f_exp_commercial_multistorybuilding_03","a3_structures_f_exp_commercial_multistorybuilding_04","a3_structures_f_exp_commercial_shop_city_01","a3_structures_f_exp_commercial_shop_city_02","a3_structures_f_exp_commercial_shop_city_03","a3_structures_f_exp_commercial_shop_city_04","a3_structures_f_exp_commercial_shop_city_05","a3_structures_f_exp_commercial_shop_city_06","a3_structures_f_exp_commercial_shop_city_07","a3_structures_f_exp_commercial_shop_town_01","a3_structures_f_exp_commercial_shop_town_02","a3_structures_f_exp_commercial_shop_town_03","a3_structures_f_exp_commercial_shop_town_04","a3_structures_f_exp_commercial_shop_town_05","a3_structures_f_exp_commercial_supermarket_01","a3_structures_f_exp_commercial_warehouses","a3_structures_f_exp_cultural_ancientrelics","a3_structures_f_exp_cultural_basaltruins","a3_structures_f_exp_cultural_cathedral_01","a3_structures_f_exp_cultural_cemeteries","a3_structures_f_exp_cultural_church_01","a3_structures_f_exp_cultural_church_02","a3_structures_f_exp_cultural_church_03","a3_structures_f_exp_cultural_fortress_01","a3_structures_f_exp_cultural_temple_native_01","a3_structures_f_exp_cultural_totems","a3_structures_f_exp_industrial","a3_structures_f_exp_industrial_dieselpowerplant_01","a3_structures_f_exp_industrial_fields","a3_structures_f_exp_industrial_materials","a3_structures_f_exp_industrial_port","a3_structures_f_exp_industrial_stockyard_01","a3_structures_f_exp_industrial_sugarcanefactory_01","a3_structures_f_exp_industrial_surfacemine_01","a3_structures_f_exp_infrastructure","a3_structures_f_exp_infrastructure_airports","a3_structures_f_exp_infrastructure_bridges","a3_structures_f_exp_infrastructure_pavements","a3_structures_f_exp_infrastructure_powerlines","a3_structures_f_exp_infrastructure_railways","a3_structures_f_exp_infrastructure_roads","a3_structures_f_exp_infrastructure_runways","a3_structures_f_exp_infrastructure_watersupply","a3_structures_f_exp_military_barracks_01","a3_structures_f_exp_military_camonets","a3_structures_f_exp_military_containerbases","a3_structures_f_exp_military_emplacements","a3_structures_f_exp_military_flags","a3_structures_f_exp_military_fortifications","a3_structures_f_exp_military_pillboxes","a3_structures_f_exp_military_trenches","a3_structures_f_exp_naval_canals","a3_structures_f_exp_naval_piers","a3_structures_f_exp_signs","a3_structures_f_exp_signs_companies","a3_structures_f_exp_signs_traffic","a3_structures_f_exp_walls_backalleys","a3_structures_f_exp_walls_bamboo","a3_structures_f_exp_walls_concrete","a3_structures_f_exp_walls_crashbarriers","a3_structures_f_exp_walls_hedges","a3_structures_f_exp_walls_net","a3_structures_f_exp_walls_pipe","a3_structures_f_exp_walls_polewalls","a3_structures_f_exp_walls_railings","a3_structures_f_exp_walls_slum","a3_structures_f_exp_walls_stone","a3_structures_f_exp_walls_tin","a3_structures_f_exp_walls_wired","a3_structures_f_exp_walls_wooden","a3_supplies_f_exp","a3_supplies_f_exp_ammoboxes","a3_weapons_f_exp","a3_air_f_exp","a3_air_f_exp_heli_light_01","a3_air_f_exp_heli_transport_01","a3_air_f_exp_plane_civil_01","a3_air_f_exp_uav_03","a3_air_f_exp_uav_04","a3_air_f_exp_vtol_01","a3_air_f_exp_vtol_02","a3_armor_f_exp_apc_tracked_01","a3_armor_f_exp_apc_tracked_02","a3_armor_f_exp_apc_wheeled_01","a3_armor_f_exp_apc_wheeled_02","a3_armor_f_exp_mbt_01","a3_armor_f_exp_mbt_02","a3_boat_f_exp_boat_armed_01","a3_boat_f_exp_boat_transport_01","a3_boat_f_exp_boat_transport_02","a3_boat_f_exp_scooter_transport_01","a3_characters_f_exp","a3_characters_f_exp_civil","a3_characters_f_exp_headgear","a3_characters_f_exp_vests","a3_props_f_jets_military_tractor","a3_props_f_jets_military_trolley","a3_static_f_jets_aaa_system_01","a3_static_f_jets_sam_system_01","a3_static_f_jets_sam_system_02","a3_air_f_jets_plane_fighter_01","a3_air_f_jets_plane_fighter_02","a3_air_f_jets_plane_fighter_04","a3_air_f_jets_uav_05","a3_boat_f_jets_carrier_01","a3_characters_f_jets","a3_characters_f_jets_vests","a3_boat_f_destroyer_destroyer_01","a3_props_f_argo_civilian_infoboards","a3_props_f_argo_items_documents","a3_props_f_argo_items_electronics","a3_rocks_f_argo_limestone","a3_structures_f_argo_civilian_accessories","a3_structures_f_argo_civilian_addons","a3_structures_f_argo_civilian_garbage","a3_structures_f_argo_civilian_house_big01","a3_structures_f_argo_civilian_house_big02","a3_structures_f_argo_civilian_house_small01","a3_structures_f_argo_civilian_house_small02","a3_structures_f_argo_civilian_stone_house_big_01","a3_structures_f_argo_civilian_stone_shed_01","a3_structures_f_argo_civilian_unfinished_building_01","a3_structures_f_argo_commercial_accessories","a3_structures_f_argo_commercial_billboards","a3_structures_f_argo_commercial_fuelstation_01","a3_structures_f_argo_commercial_shop_02","a3_structures_f_argo_commercial_supermarket_01","a3_structures_f_argo_cultural_church","a3_structures_f_argo_cultural_statues","a3_structures_f_argo_decals_horizontal","a3_structures_f_argo_industrial_agriculture","a3_structures_f_argo_industrial_materials","a3_structures_f_argo_infrastructure_runways","a3_structures_f_argo_infrastructure_seaports","a3_structures_f_argo_infrastructure_watersupply","a3_structures_f_argo_military_bunkers","a3_structures_f_argo_military_containerbases","a3_structures_f_argo_military_domes","a3_structures_f_argo_military_fortifications","a3_structures_f_argo_military_turrets","a3_structures_f_argo_signs_warnings","a3_structures_f_argo_walls_city","a3_structures_f_argo_walls_concrete","a3_structures_f_argo_walls_military","a3_structures_f_argo_walls_net","a3_structures_f_argo_walls_pipe","a3_structures_f_argo_walls_tin","a3_structures_f_argo_walls_wooden","a3_structures_f_argo_wrecks","a3_armor_f_argo_apc_tracked_01","a3_armor_f_argo_apc_wheeled_02","a3_modules_f_patrol","a3_characters_f_patrol","a3_props_f_orange_civilian_constructions","a3_props_f_orange_civilian_infoboards","a3_props_f_orange_furniture","a3_props_f_orange_humanitarian_camps","a3_props_f_orange_humanitarian_garbage","a3_props_f_orange_humanitarian_supplies","a3_props_f_orange_items_decorative","a3_props_f_orange_items_documents","a3_props_f_orange_items_electronics","a3_props_f_orange_items_tools","a3_soft_f_orange_offroad_01","a3_soft_f_orange_offroad_02","a3_soft_f_orange_truck_02","a3_soft_f_orange_ugv_01","a3_soft_f_orange_van_02","a3_structures_f_orange_humanitarian_camps","a3_structures_f_orange_humanitarian_flags","a3_structures_f_orange_industrial_cargo","a3_structures_f_orange_signs_mines","a3_structures_f_orange_signs_special","a3_structures_f_orange_vr_helpers","a3_structures_f_orange_walls_plastic","a3_supplies_f_orange_ammoboxes","a3_supplies_f_orange_bags","a3_supplies_f_orange_cargonets","a3_weapons_f_orange","a3_weapons_f_orange_explosives","a3_air_f_orange","a3_air_f_orange_heli_transport_02","a3_air_f_orange_uav_01","a3_air_f_orange_uav_06","a3_characters_f_orange","a3_characters_f_orange_headgear","a3_characters_f_orange_vests","a3_modules_f_tacops","a3_characters_f_tacops","a3_modules_f_tank","a3_modules_f_warlords","a3_props_f_tank_military","a3_props_f_tank_military_tankacc","a3_props_f_tank_military_wrecks","a3_sounds_f_tank","a3_structures_f_tank_decals_horizontal","a3_structures_f_tank_military_fortifications","a3_structures_f_tank_military_repairdepot","a3_weapons_f_tank","a3_weapons_f_tank_bags","a3_weapons_f_tank_launchers_mraws","a3_armor_f_tank_afv_wheeled_01","a3_armor_f_tank_lt_01","a3_armor_f_tank_mbt_04","a3_characters_f_tank","a3_characters_f_tank_headgear","a3_characters_f_tank_uniforms","a3_props_f_destroyer_military_briefingroomdesk","a3_props_f_destroyer_military_briefingroomscreen","a3_static_f_destroyer_boat_rack_01","a3_static_f_destroyer_ship_gun_01","a3_static_f_destroyer_ship_mrls_01","a3_static_f_sams_radar_system_01","a3_static_f_sams_radar_system_02","a3_static_f_sams_sam_system_03","a3_static_f_sams_sam_system_04"};
            m[]={"curator","kart","heli","mark","expansion","jets","argo","orange","tacops","tank"};
        };
        class CfgNonAIVehicles {
            a[]={"a3_data_f","a3_editor_f","a3_structures_f_bridges","a3_structures_f_mil_flags","a3_structures_f_naval_piers","a3_animals_f","a3_animals_f_kestrel","a3_animals_f_seagull","a3_signs_f","a3_weapons_f","a3_characters_f","a3_characters_f_heads","a3_characters_f_proxies","a3_air_f","a3_air_f_beta_heli_attack_02","a3_armor_f_beta_apc_tracked_02","a3_armor_f_gamma_mbt_02","a3_soft_f","a3_soft_f_beta_truck_01","a3_soft_f_gamma_truck_01","a3_soft_f_epc_truck_03","a3_data_f_curator_eagle","a3_structures_f_heli_ind_airport","a3_3den","a3_structures_f_exp_infrastructure_bridges","a3_weapons_f_exp","a3_air_f_exp_vtol_01","a3_air_f_exp_vtol_02","a3_weapons_f_jets","a3_boat_f_destroyer_destroyer_01","a3_soft_f_orange_van_02","a3_weapons_f_orange","a3_armor_f_tank_afv_wheeled_01","a3_armor_f_tank_lt_01","a3_armor_f_tank_mbt_04","a3_weapons_f_destroyer","a3_weapons_f_sams"};
            m[]={"curator","heli","expansion","jets","orange","tank"};
        };
        class CfgMarkedTargets {};
        class CfgFSMs {
            a[]={"a3_animals_f","a3_characters_f"};
        };
        class PreloadVehicles {};
        class CfgFatigue {};
        class CfgFirstAid {};
        class CfgDiving {
            a[]={"a3_data_f"};
        };
        class CfgBleeding {};
        class CfgPriority {};
        class CfgSkeletonParameters {
            a[]={"a3_characters_f"};
        };
        class CfgImprecision {};
        class CfgBreathing {
            a[]={"a3_data_f"};
        };
        class CfgWeaponHandling {
            a[]={"a3_data_f"};
        };
        class CfgPersonTurret {
            a[]={"a3_data_f"};
        };
        class CfgMovesBasic {
            a[]={"a3_anims_f_config_sdr"};
        };
        class CfgGesturesMale {
            a[]={"a3_anims_f_config_sdr"};
        };
        class CfgSlopeLimits {
            a[]={"a3_data_f"};
        };
        class CfgAnimation {
            a[]={"a3_data_f"};
        };
        class CfgCollisions {};
        class CfgSlingLoading {};
        class CfgVoice {
            a[]={"a3_dubbing_radio_f","a3_dubbing_radio_f_exp"};
            m[]={"expansion"};
        };
        class CfgVoiceTypes {
            a[]={"a3_dubbing_radio_f","a3_dubbing_radio_f_exp"};
            m[]={"expansion"};
        };
        class CfgCoreData {
            a[]={"a3_data_f","a3_ui_f","a3_characters_f"};
        };
        class CfgVehicleIcons {
            a[]={"a3_modules_f","a3_ui_f","a3_ui_f_orange"};
            m[]={"orange"};
        };
        class CfgCloudletShapes {
            a[]={"a3_data_f"};
        };
        class CfgSaveThumbnails {};
        class cfgFormations {};
        class cfgWaypoints {
            a[]={"a3_functions_f","a3_3den"};
        };
        class PhysXMaterials {
            a[]={"a3_data_f"};
        };
        class PhysXParams {
            a[]={"a3_data_f"};
        };
        class RagDollDefaultLimit {
            a[]={"a3_data_f"};
        };
        class RagDollDefaultSpring {
            a[]={"a3_data_f"};
        };
        class RagDollSphericalJoint {
            a[]={"a3_data_f"};
        };
        class RagDollRevoluteJoint {
            a[]={"a3_data_f"};
        };
        class RagDollD6Joint_PX3 {
            a[]={"a3_data_f"};
        };
        class CfgRagDollSkeletons {};
        class CfgVideoOptions {};
        class CfgSurfaceCharacters {
            a[]={"a3_map_data","a3_map_malden","a3_map_tanoabuka"};
            m[]={"argo","expansion"};
        };
        class CfgSurfaces {
            a[]={"a3_data_f","a3_map_data","a3_data_f_exp","a3_map_malden","a3_map_tanoabuka"};
            m[]={"expansion","argo"};
        };
        class CfgSoundEnvironToControllers {
            a[]={"a3_map_tanoabuka"};
            m[]={"expansion"};
        };
        class CfgDefaultSettings {
            a[]={"a3_ui_f"};
        };
        class CfgPatches {
            a[]={"a3data","a3_functions_f","a3_functions_f_epa","a3_functions_f_epc","a3_data_f","a3_data_f_hook","a3_data_f_particleeffects","a3_dubbing_f","a3_dubbing_f_beta","a3_dubbing_f_gamma","a3_dubbing_radio_f","a3_dubbing_radio_f_data_eng","a3_dubbing_radio_f_data_engb","a3_dubbing_radio_f_data_gre","a3_dubbing_radio_f_data_per","a3_dubbing_radio_f_data_vr","a3_editor_f","a3_editorpreviews_f","a3_functions_f_curator","a3_language_f","a3_language_f_beta","a3_language_f_gamma","a3_languagemissions_f","a3_languagemissions_f_beta","a3_languagemissions_f_gamma","a3_misc_f","a3_misc_f_helpers","a3_modules_f","a3_modules_f_data","a3_modules_f_dyno","a3_modules_f_effects","a3_modules_f_events","a3_modules_f_groupmodifiers","a3_modules_f_hc","a3_modules_f_intel","a3_modules_f_livefeed","a3_modules_f_marta","a3_modules_f_misc","a3_modules_f_multiplayer","a3_modules_f_objectmodifiers","a3_modules_f_sites","a3_modules_f_skirmish","a3_modules_f_strategicmap","a3_modules_f_supports","a3_modules_f_uav","a3_modules_f_beta","a3_modules_f_beta_data","a3_modules_f_beta_firingdrills","a3_modules_f_epb","a3_modules_f_epb_misc","a3_music_f","a3_music_f_music","a3_music_f_epa","a3_music_f_epa_music","a3_music_f_epb","a3_music_f_epb_music","a3_music_f_epc","a3_music_f_epc_music","a3_plants_f","a3_roads_f","a3_rocks_f","a3_rocks_f_blunt","a3_rocks_f_sharp","a3_rocks_f_water","a3_structures_f","a3_structures_f_bridges","a3_structures_f_civ","a3_structures_f_civ_accessories","a3_structures_f_civ_ancient","a3_structures_f_civ_belltowers","a3_structures_f_civ_calvaries","a3_structures_f_civ_camping","a3_structures_f_civ_chapels","a3_structures_f_civ_constructions","a3_structures_f_civ_dead","a3_structures_f_civ_garbage","a3_structures_f_civ_graffiti","a3_structures_f_civ_infoboards","a3_structures_f_civ_kiosks","a3_structures_f_civ_lamps","a3_structures_f_civ_market","a3_structures_f_civ_offices","a3_structures_f_civ_pavements","a3_structures_f_civ_playground","a3_structures_f_civ_sportsgrounds","a3_structures_f_civ_statues","a3_structures_f_civ_tourism","a3_structures_f_data","a3_structures_f_dominants","a3_structures_f_dominants_amphitheater","a3_structures_f_dominants_castle","a3_structures_f_dominants_church","a3_structures_f_dominants_hospital","a3_structures_f_dominants_lighthouse","a3_structures_f_dominants_wip","a3_structures_f_furniture","a3_structures_f_households","a3_structures_f_households_addons","a3_structures_f_households_house_big01","a3_structures_f_households_house_big02","a3_structures_f_households_house_shop01","a3_structures_f_households_house_shop02","a3_structures_f_households_house_small01","a3_structures_f_households_house_small02","a3_structures_f_households_house_small03","a3_structures_f_households_slum","a3_structures_f_households_stone_big","a3_structures_f_households_stone_shed","a3_structures_f_households_stone_small","a3_structures_f_households_wip","a3_structures_f_ind","a3_structures_f_ind_airport","a3_structures_f_ind_cargo","a3_structures_f_ind_carservice","a3_structures_f_ind_concretemixingplant","a3_structures_f_ind_crane","a3_structures_f_ind_dieselpowerplant","a3_structures_f_ind_factory","a3_structures_f_ind_fuelstation","a3_structures_f_ind_fuelstation_small","a3_structures_f_ind_pipes","a3_structures_f_ind_powerlines","a3_structures_f_ind_reservoirtank","a3_structures_f_ind_shed","a3_structures_f_ind_solarpowerplant","a3_structures_f_ind_tank","a3_structures_f_ind_transmitter_tower","a3_structures_f_ind_wavepowerplant","a3_structures_f_ind_windmill","a3_structures_f_ind_windpowerplant","a3_structures_f_items","a3_structures_f_items_documents","a3_structures_f_items_electronics","a3_structures_f_items_food","a3_structures_f_items_gadgets","a3_structures_f_items_luggage","a3_structures_f_items_medical","a3_structures_f_items_military","a3_structures_f_items_stationery","a3_structures_f_items_tools","a3_structures_f_items_valuables","a3_structures_f_items_vessels","a3_structures_f_mil","a3_structures_f_mil_bagbunker","a3_structures_f_mil_bagfence","a3_structures_f_mil_barracks","a3_structures_f_mil_bunker","a3_structures_f_mil_cargo","a3_structures_f_mil_flags","a3_structures_f_mil_fortification","a3_structures_f_mil_helipads","a3_structures_f_mil_offices","a3_structures_f_mil_radar","a3_structures_f_mil_shelters","a3_structures_f_mil_tenthangar","a3_structures_f_naval","a3_structures_f_naval_buoys","a3_structures_f_naval_fishing","a3_structures_f_naval_piers","a3_structures_f_naval_rowboats","a3_structures_f_research","a3_structures_f_system","a3_structures_f_training","a3_structures_f_training_invisibletarget","a3_structures_f_walls","a3_structures_f_epa","a3_structures_f_epa_civ_camping","a3_structures_f_epa_civ_constructions","a3_structures_f_epa_items_electronics","a3_structures_f_epa_items_food","a3_structures_f_epa_items_medical","a3_structures_f_epa_items_tools","a3_structures_f_epa_items_vessels","a3_structures_f_epa_walls","a3_structures_f_epb","a3_structures_f_epb_civ_accessories","a3_structures_f_epb_civ_camping","a3_structures_f_epb_civ_dead","a3_structures_f_epb_civ_garbage","a3_structures_f_epb_civ_graffiti","a3_structures_f_epb_civ_playground","a3_structures_f_epb_furniture","a3_structures_f_epb_items_documents","a3_structures_f_epb_items_luggage","a3_structures_f_epb_items_military","a3_structures_f_epb_items_vessels","a3_structures_f_epb_naval_fishing","a3_structures_f_epc","a3_structures_f_epc_civ_accessories","a3_structures_f_epc_civ_camping","a3_structures_f_epc_civ_garbage","a3_structures_f_epc_civ_infoboards","a3_structures_f_epc_civ_kiosks","a3_structures_f_epc_civ_playground","a3_structures_f_epc_civ_tourism","a3_structures_f_epc_dominants_ghosthotel","a3_structures_f_epc_dominants_stadium","a3_structures_f_epc_furniture","a3_structures_f_epc_items_documents","a3_structures_f_epc_items_electronics","a3_structures_f_epc_walls","a3_uifonts_f","a3_animals_f","a3_animals_f_animconfig","a3_animals_f_fishes","a3_animals_f_kestrel","a3_animals_f_rabbit","a3_animals_f_seagull","a3_animals_f_snakes","a3_animals_f_turtle","a3_animals_f_beta","a3_animals_f_beta_chicken","a3_animals_f_beta_dog","a3_animals_f_beta_goat","a3_animals_f_beta_sheep","a3_anims_f","a3_anims_f_config_sdr","a3_anims_f_config_sdr_weaponswitching","a3_anims_f_data","a3_anims_f_epa","a3_anims_f_epc","a3_dubbing_f_epa","a3_dubbing_f_epb","a3_dubbing_f_epc","a3_language_f_epa","a3_language_f_epb","a3_language_f_epc","a3_languagemissions_f_epa","a3_languagemissions_f_epb","a3_languagemissions_f_epc","a3_map_data","a3_map_data_exp","a3_map_stratis","a3_map_stratis_data","a3_map_stratis_data_layers","a3_map_stratis_scenes_f","a3_plants_f_bush","a3_signs_f","a3_signs_f_signs_ad","a3_structures_f_signs_companies","a3_ui_f","a3_ui_f_data","a3_ui_f_curator","a3_weapons_f","a3_weapons_f_ammoboxes","a3_weapons_f_dummyweapons","a3_weapons_f_explosives","a3_weapons_f_items","a3_weapons_f_launchers_nlaw","a3_weapons_f_launchers_rpg32","a3_weapons_f_launchers_titan","a3_weapons_f_longrangerifles_dmr_01","a3_weapons_f_longrangerifles_ebr","a3_weapons_f_longrangerifles_gm6","a3_weapons_f_longrangerifles_m320","a3_weapons_f_machineguns_m200","a3_weapons_f_machineguns_zafir","a3_weapons_f_pistols_acpc2","a3_weapons_f_pistols_p07","a3_weapons_f_pistols_pistol_heavy_01","a3_weapons_f_pistols_pistol_heavy_02","a3_weapons_f_pistols_rook40","a3_weapons_f_rifles_khaybar","a3_weapons_f_rifles_mk20","a3_weapons_f_rifles_mx","a3_weapons_f_rifles_mx_black","a3_weapons_f_rifles_sdar","a3_weapons_f_rifles_trg20","a3_weapons_f_smgs_pdw2000","a3_weapons_f_smgs_smg_01","a3_weapons_f_smgs_smg_02","a3_weapons_f_beta","a3_weapons_f_beta_ammoboxes","a3_weapons_f_beta_longrangerifles_ebr","a3_weapons_f_beta_longrangerifles_gm6","a3_weapons_f_beta_longrangerifles_m320","a3_weapons_f_beta_rifles_khaybar","a3_weapons_f_beta_rifles_mx","a3_weapons_f_beta_rifles_trg20","a3_weapons_f_gamma","a3_weapons_f_gamma_ammoboxes","a3_weapons_f_gamma_longrangerifles_ebr","a3_weapons_f_gamma_rifles_mx","a3_characters_f","a3_characters_f_blufor","a3_characters_f_civil","a3_characters_f_heads","a3_characters_f_opfor","a3_characters_f_proxies","a3_characters_f_beta","a3_characters_f_beta_indep","a3_characters_f_gamma","a3_map_altis","a3_map_altis_data","a3_map_altis_data_layers","a3_map_altis_scenes_f","a3_missions_f","a3_missions_f_data","a3_missions_f_video","a3_missions_f_beta","a3_missions_f_beta_data","a3_missions_f_beta_video","a3_missions_f_gamma","a3_missions_f_gamma_data","a3_missions_f_gamma_video","a3_sounds_f","a3_sounds_f_arsenal","a3_sounds_f_characters","a3_sounds_f_environment","a3_sounds_f_sfx","a3_sounds_f_vehicles","a3_sounds_f_epb","a3_sounds_f_epc","a3_static_f","a3_static_f_mortar_01","a3_static_f_beta","a3_static_f_beta_mortar_01","a3_static_f_gamma","a3_static_f_gamma_mortar_01","a3_weapons_f_acc","a3_weapons_f_beta_acc","a3_weapons_f_epa","a3_weapons_f_epa_acc","a3_weapons_f_epa_ammoboxes","a3_weapons_f_epb","a3_weapons_f_epb_acc","a3_weapons_f_epb_ammoboxes","a3_weapons_f_epb_longrangerifles_gm6","a3_weapons_f_epc","a3_weapons_f_gamma_acc","a3_air_f","a3_air_f_heli_light_01","a3_air_f_heli_light_02","a3_air_f_beta","a3_air_f_beta_heli_attack_01","a3_air_f_beta_heli_attack_02","a3_air_f_beta_heli_transport_01","a3_air_f_beta_heli_transport_02","a3_air_f_beta_parachute_01","a3_air_f_beta_parachute_02","a3_air_f_gamma","a3_air_f_gamma_plane_fighter_03","a3_armor_f","a3_armor_f_beta","a3_armor_f_beta_apc_tracked_01","a3_armor_f_beta_apc_tracked_02","a3_armor_f_gamma","a3_armor_f_gamma_mbt_01","a3_armor_f_gamma_mbt_02","a3_boat_f","a3_boat_f_boat_armed_01","a3_boat_f_boat_transport_01","a3_boat_f_beta","a3_boat_f_beta_boat_armed_01","a3_boat_f_beta_boat_transport_01","a3_boat_f_beta_sdv_01","a3_boat_f_gamma","a3_boat_f_gamma_boat_civil_01","a3_boat_f_gamma_boat_civil_04","a3_boat_f_gamma_boat_transport_01","a3_characters_f_common","a3_characters_f_epa","a3_characters_f_epb","a3_characters_f_epb_heads","a3_characters_f_epc","a3_missions_f_epa","a3_missions_f_epa_data","a3_missions_f_epa_video","a3_missions_f_epb","a3_missions_f_epc","a3_soft_f","a3_soft_f_mrap_01","a3_soft_f_mrap_02","a3_soft_f_offroad_01","a3_soft_f_quadbike_01","a3_soft_f_beta","a3_soft_f_beta_mrap_03","a3_soft_f_beta_quadbike_01","a3_soft_f_beta_truck_01","a3_soft_f_beta_truck_02","a3_soft_f_gamma","a3_soft_f_gamma_hatchback_01","a3_soft_f_gamma_offroad_01","a3_soft_f_gamma_quadbike_01","a3_soft_f_gamma_suv_01","a3_soft_f_gamma_truck_01","a3_soft_f_gamma_truck_02","a3_soft_f_gamma_van_01","a3_static_f_aa_01","a3_static_f_at_01","a3_structures_f_mil_scrapyard","a3_structures_f_wrecks","a3_structures_f_epa_mil_scrapyard","a3_air_f_epb","a3_air_f_epb_heli_light_03","a3_air_f_epc","a3_air_f_epc_plane_cas_01","a3_air_f_epc_plane_cas_02","a3_air_f_epc_plane_fighter_03","a3_armor_f_beta_apc_wheeled_01","a3_armor_f_beta_apc_wheeled_02","a3_armor_f_epb","a3_armor_f_epb_apc_tracked_03","a3_armor_f_epb_mbt_03","a3_armor_f_epc","a3_armor_f_epc_mbt_01","a3_armor_f_gamma_apc_wheeled_03","a3_boat_f_epc","a3_boat_f_epc_submarine_01","a3_cargoposes_f","a3_drones_f","a3_drones_f_air_f_gamma_uav_01","a3_drones_f_air_f_gamma_uav_02","a3_drones_f_characters_f_gamma","a3_drones_f_soft_f_gamma_ugv_01","a3_drones_f_weapons_f_gamma_ammoboxes","a3_drones_f_weapons_f_gamma_items","a3_soft_f_epc","a3_soft_f_epc_truck_03","a3_data_f_loadorder","a3_data_f_curator","a3_data_f_curator_characters","a3_data_f_curator_eagle","a3_data_f_curator_intel","a3_data_f_curator_misc","a3_data_f_curator_music","a3_data_f_curator_respawn","a3_data_f_curator_virtual","a3_language_f_curator","a3_modules_f_curator","a3_modules_f_curator_animals","a3_modules_f_curator_cas","a3_modules_f_curator_curator","a3_modules_f_curator_effects","a3_modules_f_curator_environment","a3_modules_f_curator_flares","a3_modules_f_curator_intel","a3_modules_f_curator_lightning","a3_modules_f_curator_mines","a3_modules_f_curator_misc","a3_modules_f_curator_multiplayer","a3_modules_f_curator_objectives","a3_modules_f_curator_ordnance","a3_modules_f_curator_respawn","a3_modules_f_curator_smokeshells","a3_missions_f_curator","a3_modules_f_curator_chemlights","a3_data_f_curator_loadorder","a3_data_f_kart","a3_data_f_kart_particleeffects","a3_language_f_kart","a3_languagemissions_f_kart","a3_missions_f_kart","a3_missions_f_kart_data","a3_modules_f_kart","a3_modules_f_kart_data","a3_modules_f_kart_timetrials","a3_soft_f_kart","a3_soft_f_kart_kart_01","a3_sounds_f_kart","a3_structures_f_kart","a3_structures_f_kart_civ_sportsgrounds","a3_structures_f_kart_mil_flags","a3_structures_f_kart_signs_companies","a3_ui_f_kart","a3_weapons_f_kart","a3_weapons_f_kart_pistols_pistol_signal_f","a3_anims_f_kart","a3_characters_f_kart","a3_data_f_kart_loadorder","a3_data_f_bootcamp","a3_dubbing_f_bootcamp","a3_functions_f_bootcamp","a3_language_f_bootcamp","a3_languagemissions_f_bootcamp","a3_map_vr","a3_map_vr_scenes_f","a3_missions_f_bootcamp","a3_missions_f_bootcamp_data","a3_missions_f_bootcamp_video","a3_modules_f_bootcamp","a3_modules_f_bootcamp_misc","a3_music_f_bootcamp","a3_music_f_bootcamp_music","a3_soft_f_bootcamp","a3_soft_f_bootcamp_offroad_01","a3_soft_f_bootcamp_quadbike_01","a3_soft_f_bootcamp_van_01","a3_sounds_f_bootcamp","a3_structures_f_bootcamp","a3_structures_f_bootcamp_civ_camping","a3_structures_f_bootcamp_civ_sportsgrounds","a3_structures_f_bootcamp_ind_cargo","a3_structures_f_bootcamp_items_electronics","a3_structures_f_bootcamp_items_food","a3_structures_f_bootcamp_items_sport","a3_structures_f_bootcamp_system","a3_structures_f_bootcamp_training","a3_structures_f_bootcamp_vr_blocks","a3_structures_f_bootcamp_vr_coverobjects","a3_structures_f_bootcamp_vr_helpers","a3_ui_f_bootcamp","a3_weapons_f_bootcamp","a3_weapons_f_bootcamp_ammoboxes","a3_weapons_f_bootcamp_longrangerifles_gm6_camo","a3_weapons_f_bootcamp_longrangerifles_m320_camo","a3_anims_f_bootcamp","a3_characters_f_bootcamp","a3_characters_f_bootcamp_common","a3_data_f_bootcamp_loadorder","a3_data_f_heli","a3_dubbing_f_heli","a3_functions_f_heli","a3_language_f_heli","a3_languagemissions_f_heli","a3_missions_f_heli","a3_missions_f_heli_data","a3_missions_f_heli_video","a3_modules_f_heli","a3_modules_f_heli_misc","a3_music_f_heli","a3_music_f_heli_music","a3_soft_f_heli","a3_soft_f_heli_hatchback_01","a3_soft_f_heli_mrap_01","a3_soft_f_heli_mrap_02","a3_soft_f_heli_mrap_03","a3_soft_f_heli_quadbike_01","a3_soft_f_heli_suv_01","a3_soft_f_heli_ugv_01","a3_soft_f_heli_van_01","a3_sounds_f_heli","a3_structures_f_heli","a3_structures_f_heli_civ_accessories","a3_structures_f_heli_civ_constructions","a3_structures_f_heli_civ_garbage","a3_structures_f_heli_civ_market","a3_structures_f_heli_furniture","a3_structures_f_heli_ind_airport","a3_structures_f_heli_ind_cargo","a3_structures_f_heli_ind_machines","a3_structures_f_heli_items_airport","a3_structures_f_heli_items_electronics","a3_structures_f_heli_items_food","a3_structures_f_heli_items_luggage","a3_structures_f_heli_items_sport","a3_structures_f_heli_items_tools","a3_structures_f_heli_vr_helpers","a3_supplies_f_heli","a3_supplies_f_heli_bladders","a3_supplies_f_heli_cargonets","a3_supplies_f_heli_fuel","a3_supplies_f_heli_slingload","a3_ui_f_heli","a3_air_f_heli","a3_air_f_heli_heli_attack_01","a3_air_f_heli_heli_attack_02","a3_air_f_heli_heli_light_01","a3_air_f_heli_heli_light_02","a3_air_f_heli_heli_light_03","a3_air_f_heli_heli_transport_01","a3_air_f_heli_heli_transport_02","a3_air_f_heli_heli_transport_03","a3_air_f_heli_heli_transport_04","a3_anims_f_heli","a3_boat_f_heli","a3_boat_f_heli_boat_armed_01","a3_boat_f_heli_sdv_01","a3_cargoposes_f_heli","a3_data_f_heli_loadorder","a3_data_f_mark","a3_dubbing_f_mark","a3_dubbing_f_mp_mark","a3_functions_f_mark","a3_functions_f_mp_mark","a3_language_f_mark","a3_language_f_mp_mark","a3_languagemissions_f_mark","a3_languagemissions_f_mp_mark","a3_missions_f_mark","a3_missions_f_mark_data","a3_missions_f_mark_video","a3_missions_f_mp_mark","a3_missions_f_mp_mark_data","a3_modules_f_mark","a3_modules_f_mark_firingdrills","a3_modules_f_mp_mark","a3_modules_f_mp_mark_objectives","a3_music_f_mark","a3_music_f_mark_music","a3_sounds_f_mark","a3_static_f_mark","a3_static_f_mark_designator_01","a3_static_f_mark_designator_02","a3_structures_f_mark","a3_structures_f_mark_items_military","a3_structures_f_mark_items_sport","a3_structures_f_mark_mil_flags","a3_structures_f_mark_training","a3_structures_f_mark_vr_helpers","a3_structures_f_mark_vr_shapes","a3_structures_f_mark_vr_targets","a3_supplies_f_mark","a3_ui_f_mark","a3_ui_f_mp_mark","a3_weapons_f_mark","a3_weapons_f_mark_acc","a3_weapons_f_mark_longrangerifles_dmr_01","a3_weapons_f_mark_longrangerifles_dmr_02","a3_weapons_f_mark_longrangerifles_dmr_03","a3_weapons_f_mark_longrangerifles_dmr_04","a3_weapons_f_mark_longrangerifles_dmr_05","a3_weapons_f_mark_longrangerifles_dmr_06","a3_weapons_f_mark_longrangerifles_ebr","a3_weapons_f_mark_longrangerifles_gm6","a3_weapons_f_mark_longrangerifles_gm6_camo","a3_weapons_f_mark_longrangerifles_m320","a3_weapons_f_mark_longrangerifles_m320_camo","a3_weapons_f_mark_machineguns_m200","a3_weapons_f_mark_machineguns_mmg_01","a3_weapons_f_mark_machineguns_mmg_02","a3_weapons_f_mark_machineguns_zafir","a3_weapons_f_mark_rifles_khaybar","a3_weapons_f_mark_rifles_mk20","a3_weapons_f_mark_rifles_mx","a3_weapons_f_mark_rifles_sdar","a3_weapons_f_mark_rifles_trg20","a3_anims_f_mark","a3_anims_f_mark_deployment","a3_characters_f_mark","a3_data_f_mark_loadorder","a3_data_f_exp_a","a3_functions_f_exp_a","a3_language_f_exp_a","a3_languagemissions_f_exp_a","a3_missions_f_exp_a","a3_missions_f_exp_a_data","a3_modules_f_exp_a","a3_props_f_exp_a","a3_props_f_exp_a_military","a3_props_f_exp_a_military_equipment","a3_sounds_f_exp_a","a3_structures_f_exp_a","a3_structures_f_exp_a_vr_blocks","a3_structures_f_exp_a_vr_helpers","a3_ui_f_exp_a","a3_anims_f_exp_a","a3_data_f_exp_a_virtual","a3_data_f_exp_a_loadorder","a3_data_f_exp_b","a3_language_f_exp_b","a3_3den","a3_3den_language","a3_baseconfig_f","a3_data_f_exp_b_loadorder","a3_data_f_mod","a3_language_f_mod","a3_sounds_f_mod","a3_weapons_f_mod","a3_weapons_f_mod_smgs_smg_03","a3_anims_f_mod","a3_data_f_exp","a3_data_f_exp_particleeffects","a3_data_f_mod_loadorder","a3_dubbing_f_exp","a3_dubbing_radio_f_exp","a3_dubbing_radio_f_exp_data_chi","a3_dubbing_radio_f_exp_data_engfre","a3_dubbing_radio_f_exp_data_fre","a3_editorpreviews_f_exp","a3_functions_f_exp","a3_language_f_exp","a3_languagemissions_f_exp","a3_missions_f_exp","a3_missions_f_exp_data","a3_missions_f_exp_video","a3_modules_f_exp","a3_music_f_exp","a3_music_f_exp_music","a3_props_f_exp","a3_props_f_exp_civilian","a3_props_f_exp_civilian_garbage","a3_props_f_exp_commercial","a3_props_f_exp_commercial_market","a3_props_f_exp_industrial","a3_props_f_exp_industrial_heavyequipment","a3_props_f_exp_infrastructure","a3_props_f_exp_infrastructure_railways","a3_props_f_exp_infrastructure_traffic","a3_props_f_exp_military","a3_props_f_exp_military_camps","a3_props_f_exp_military_oldplanewrecks","a3_props_f_exp_naval","a3_props_f_exp_naval_boats","a3_rocks_f_exp","a3_rocks_f_exp_cliff","a3_rocks_f_exp_lavastones","a3_soft_f_exp","a3_soft_f_exp_lsv_01","a3_soft_f_exp_lsv_02","a3_soft_f_exp_mrap_01","a3_soft_f_exp_mrap_02","a3_soft_f_exp_offroad_01","a3_soft_f_exp_offroad_02","a3_soft_f_exp_quadbike_01","a3_soft_f_exp_truck_01","a3_soft_f_exp_truck_03","a3_soft_f_exp_ugv_01","a3_soft_f_exp_van_01","a3_static_f_exp","a3_static_f_exp_aa_01","a3_static_f_exp_at_01","a3_static_f_exp_gmg_01","a3_static_f_exp_hmg_01","a3_static_f_exp_mortar_01","a3_structures_f_exp","a3_structures_f_exp_civilian","a3_structures_f_exp_civilian_accessories","a3_structures_f_exp_civilian_garages","a3_structures_f_exp_civilian_house_big_01","a3_structures_f_exp_civilian_house_big_02","a3_structures_f_exp_civilian_house_big_03","a3_structures_f_exp_civilian_house_big_04","a3_structures_f_exp_civilian_house_big_05","a3_structures_f_exp_civilian_house_native_01","a3_structures_f_exp_civilian_house_native_02","a3_structures_f_exp_civilian_house_small_01","a3_structures_f_exp_civilian_house_small_02","a3_structures_f_exp_civilian_house_small_03","a3_structures_f_exp_civilian_house_small_04","a3_structures_f_exp_civilian_house_small_05","a3_structures_f_exp_civilian_house_small_06","a3_structures_f_exp_civilian_school_01","a3_structures_f_exp_civilian_sheds","a3_structures_f_exp_civilian_slum_01","a3_structures_f_exp_civilian_slum_02","a3_structures_f_exp_civilian_slum_03","a3_structures_f_exp_civilian_slum_04","a3_structures_f_exp_civilian_slum_05","a3_structures_f_exp_civilian_sportsgrounds","a3_structures_f_exp_commercial","a3_structures_f_exp_commercial_addons","a3_structures_f_exp_commercial_advertisements","a3_structures_f_exp_commercial_fuelstation_01","a3_structures_f_exp_commercial_fuelstation_02","a3_structures_f_exp_commercial_hotel_01","a3_structures_f_exp_commercial_hotel_02","a3_structures_f_exp_commercial_market","a3_structures_f_exp_commercial_multistorybuilding_01","a3_structures_f_exp_commercial_multistorybuilding_03","a3_structures_f_exp_commercial_multistorybuilding_04","a3_structures_f_exp_commercial_shop_city_01","a3_structures_f_exp_commercial_shop_city_02","a3_structures_f_exp_commercial_shop_city_03","a3_structures_f_exp_commercial_shop_city_04","a3_structures_f_exp_commercial_shop_city_05","a3_structures_f_exp_commercial_shop_city_06","a3_structures_f_exp_commercial_shop_city_07","a3_structures_f_exp_commercial_shop_town_01","a3_structures_f_exp_commercial_shop_town_02","a3_structures_f_exp_commercial_shop_town_03","a3_structures_f_exp_commercial_shop_town_04","a3_structures_f_exp_commercial_shop_town_05","a3_structures_f_exp_commercial_supermarket_01","a3_structures_f_exp_commercial_warehouses","a3_structures_f_exp_cultural","a3_structures_f_exp_cultural_ancientrelics","a3_structures_f_exp_cultural_basaltruins","a3_structures_f_exp_cultural_cathedral_01","a3_structures_f_exp_cultural_cemeteries","a3_structures_f_exp_cultural_church_01","a3_structures_f_exp_cultural_church_02","a3_structures_f_exp_cultural_church_03","a3_structures_f_exp_cultural_fortress_01","a3_structures_f_exp_cultural_temple_native_01","a3_structures_f_exp_cultural_totems","a3_structures_f_exp_data","a3_structures_f_exp_industrial","a3_structures_f_exp_industrial_dieselpowerplant_01","a3_structures_f_exp_industrial_fields","a3_structures_f_exp_industrial_materials","a3_structures_f_exp_industrial_port","a3_structures_f_exp_industrial_stockyard_01","a3_structures_f_exp_industrial_sugarcanefactory_01","a3_structures_f_exp_industrial_surfacemine_01","a3_structures_f_exp_infrastructure","a3_structures_f_exp_infrastructure_airports","a3_structures_f_exp_infrastructure_bridges","a3_structures_f_exp_infrastructure_pavements","a3_structures_f_exp_infrastructure_powerlines","a3_structures_f_exp_infrastructure_railways","a3_structures_f_exp_infrastructure_roads","a3_structures_f_exp_infrastructure_runways","a3_structures_f_exp_infrastructure_watersupply","a3_structures_f_exp_military","a3_structures_f_exp_military_barracks_01","a3_structures_f_exp_military_camonets","a3_structures_f_exp_military_containerbases","a3_structures_f_exp_military_emplacements","a3_structures_f_exp_military_flags","a3_structures_f_exp_military_fortifications","a3_structures_f_exp_military_pillboxes","a3_structures_f_exp_military_trenches","a3_structures_f_exp_naval","a3_structures_f_exp_naval_canals","a3_structures_f_exp_naval_piers","a3_structures_f_exp_signs","a3_structures_f_exp_signs_companies","a3_structures_f_exp_signs_traffic","a3_structures_f_exp_walls","a3_structures_f_exp_walls_backalleys","a3_structures_f_exp_walls_bamboo","a3_structures_f_exp_walls_concrete","a3_structures_f_exp_walls_crashbarriers","a3_structures_f_exp_walls_hedges","a3_structures_f_exp_walls_net","a3_structures_f_exp_walls_pipe","a3_structures_f_exp_walls_polewalls","a3_structures_f_exp_walls_railings","a3_structures_f_exp_walls_slum","a3_structures_f_exp_walls_stone","a3_structures_f_exp_walls_tin","a3_structures_f_exp_walls_wired","a3_structures_f_exp_walls_wooden","a3_supplies_f_exp","a3_supplies_f_exp_ammoboxes","a3_ui_f_exp","a3_vegetation_f_exp","a3_weapons_f_exp","a3_weapons_f_exp_launchers_rpg32","a3_weapons_f_exp_launchers_rpg7","a3_weapons_f_exp_launchers_titan","a3_weapons_f_exp_longrangerifles_dmr_07","a3_weapons_f_exp_machineguns_lmg_03","a3_weapons_f_exp_pistols_pistol_01","a3_weapons_f_exp_rifles_ak12","a3_weapons_f_exp_rifles_akm","a3_weapons_f_exp_rifles_aks","a3_weapons_f_exp_rifles_arx","a3_weapons_f_exp_rifles_ctar","a3_weapons_f_exp_rifles_ctars","a3_weapons_f_exp_rifles_spar_01","a3_weapons_f_exp_rifles_spar_02","a3_weapons_f_exp_rifles_spar_03","a3_weapons_f_exp_smgs_smg_05","a3_air_f_exp","a3_air_f_exp_heli_light_01","a3_air_f_exp_heli_transport_01","a3_air_f_exp_plane_civil_01","a3_air_f_exp_uav_03","a3_air_f_exp_uav_04","a3_air_f_exp_vtol_01","a3_air_f_exp_vtol_02","a3_anims_f_exp","a3_anims_f_exp_revive","a3_armor_f_exp","a3_armor_f_exp_apc_tracked_01","a3_armor_f_exp_apc_tracked_02","a3_armor_f_exp_apc_wheeled_01","a3_armor_f_exp_apc_wheeled_02","a3_armor_f_exp_mbt_01","a3_armor_f_exp_mbt_02","a3_boat_f_exp","a3_boat_f_exp_boat_armed_01","a3_boat_f_exp_boat_transport_01","a3_boat_f_exp_boat_transport_02","a3_boat_f_exp_scooter_transport_01","a3_cargoposes_f_exp","a3_characters_f_exp","a3_characters_f_exp_civil","a3_characters_f_exp_headgear","a3_characters_f_exp_vests","a3_sounds_f_exp","a3_data_f_exp_loadorder","a3_data_f_jets","a3_dubbing_f_jets","a3_editorpreviews_f_jets","a3_functions_f_destroyer","a3_functions_f_jets","a3_language_f_jets","a3_languagemissions_f_jets","a3_modules_f_jets","a3_music_f_jets","a3_props_f_jets","a3_props_f_jets_military_tractor","a3_props_f_jets_military_trolley","a3_sounds_f_jets","a3_static_f_jets","a3_static_f_jets_aaa_system_01","a3_static_f_jets_sam_system_01","a3_static_f_jets_sam_system_02","a3_ui_f_jets","a3_weapons_f_jets","a3_air_f_jets","a3_air_f_jets_plane_fighter_01","a3_air_f_jets_plane_fighter_02","a3_air_f_jets_plane_fighter_04","a3_air_f_jets_uav_05","a3_anims_f_jets","a3_boat_f_jets","a3_boat_f_jets_carrier_01","a3_cargoposes_f_jets","a3_characters_f_jets","a3_characters_f_jets_vests","a3_missions_f_jets","a3_boat_f_destroyer","a3_boat_f_destroyer_destroyer_01","a3_data_f_jets_loadorder","a3_data_f_argo","a3_editorpreviews_f_argo","a3_language_f_argo","a3_map_malden","a3_map_malden_data","a3_map_malden_data_layers","a3_map_malden_scenes_f","a3_music_f_argo","a3_props_f_argo","a3_props_f_argo_civilian","a3_props_f_argo_civilian_infoboards","a3_props_f_argo_items","a3_props_f_argo_items_documents","a3_props_f_argo_items_electronics","a3_rocks_f_argo","a3_rocks_f_argo_limestone","a3_structures_f_argo","a3_structures_f_argo_civilian","a3_structures_f_argo_civilian_accessories","a3_structures_f_argo_civilian_addons","a3_structures_f_argo_civilian_garbage","a3_structures_f_argo_civilian_house_big01","a3_structures_f_argo_civilian_house_big02","a3_structures_f_argo_civilian_house_small01","a3_structures_f_argo_civilian_house_small02","a3_structures_f_argo_civilian_stone_house_big_01","a3_structures_f_argo_civilian_stone_shed_01","a3_structures_f_argo_civilian_unfinished_building_01","a3_structures_f_argo_commercial","a3_structures_f_argo_commercial_accessories","a3_structures_f_argo_commercial_billboards","a3_structures_f_argo_commercial_fuelstation_01","a3_structures_f_argo_commercial_shop_02","a3_structures_f_argo_commercial_supermarket_01","a3_structures_f_argo_cultural","a3_structures_f_argo_cultural_church","a3_structures_f_argo_cultural_statues","a3_structures_f_argo_decals","a3_structures_f_argo_decals_horizontal","a3_structures_f_argo_industrial","a3_structures_f_argo_industrial_agriculture","a3_structures_f_argo_industrial_materials","a3_structures_f_argo_infrastructure","a3_structures_f_argo_infrastructure_runways","a3_structures_f_argo_infrastructure_seaports","a3_structures_f_argo_infrastructure_watersupply","a3_structures_f_argo_military","a3_structures_f_argo_military_bunkers","a3_structures_f_argo_military_containerbases","a3_structures_f_argo_military_domes","a3_structures_f_argo_military_fortifications","a3_structures_f_argo_military_turrets","a3_structures_f_argo_signs","a3_structures_f_argo_signs_city","a3_structures_f_argo_signs_directions","a3_structures_f_argo_signs_warnings","a3_structures_f_argo_walls","a3_structures_f_argo_walls_city","a3_structures_f_argo_walls_concrete","a3_structures_f_argo_walls_military","a3_structures_f_argo_walls_net","a3_structures_f_argo_walls_pipe","a3_structures_f_argo_walls_tin","a3_structures_f_argo_walls_wooden","a3_structures_f_argo_wrecks","a3_vegetation_f_argo","a3_armor_f_argo","a3_armor_f_argo_apc_tracked_01","a3_armor_f_argo_apc_wheeled_02","a3_data_f_argo_loadorder","a3_data_f_patrol","a3_functions_f_patrol","a3_language_f_patrol","a3_languagemissions_f_patrol","a3_map_tanoabuka","a3_map_tanoabuka_data","a3_map_tanoabuka_data_layers","a3_modules_f_patrol","a3_sounds_f_patrol","a3_ui_f_patrol","a3_weapons_f_patrol","a3_characters_f_patrol","a3_map_tanoa_scenes_f","a3_missions_f_patrol","a3_data_f_patrol_loadorder","a3_data_f_orange","a3_dubbing_f_orange","a3_editorpreviews_f_orange","a3_functions_f_orange","a3_language_f_orange","a3_languagemissions_f_orange","a3_missions_f_orange","a3_modules_f_orange","a3_music_f_orange","a3_props_f_orange","a3_props_f_orange_civilian","a3_props_f_orange_civilian_constructions","a3_props_f_orange_civilian_infoboards","a3_props_f_orange_furniture","a3_props_f_orange_humanitarian","a3_props_f_orange_humanitarian_camps","a3_props_f_orange_humanitarian_garbage","a3_props_f_orange_humanitarian_supplies","a3_props_f_orange_items","a3_props_f_orange_items_decorative","a3_props_f_orange_items_documents","a3_props_f_orange_items_electronics","a3_props_f_orange_items_tools","a3_soft_f_orange","a3_soft_f_orange_offroad_01","a3_soft_f_orange_offroad_02","a3_soft_f_orange_truck_02","a3_soft_f_orange_ugv_01","a3_soft_f_orange_van_02","a3_structures_f_orange","a3_structures_f_orange_humanitarian","a3_structures_f_orange_humanitarian_camps","a3_structures_f_orange_humanitarian_flags","a3_structures_f_orange_industrial","a3_structures_f_orange_industrial_cargo","a3_structures_f_orange_signs","a3_structures_f_orange_signs_mines","a3_structures_f_orange_signs_special","a3_structures_f_orange_vr_helpers","a3_structures_f_orange_walls","a3_structures_f_orange_walls_plastic","a3_supplies_f_orange","a3_supplies_f_orange_ammoboxes","a3_supplies_f_orange_bags","a3_supplies_f_orange_cargonets","a3_ui_f_orange","a3_weapons_f_orange","a3_weapons_f_orange_explosives","a3_weapons_f_orange_items","a3_air_f_orange","a3_air_f_orange_heli_transport_02","a3_air_f_orange_uav_01","a3_air_f_orange_uav_06","a3_cargoposes_f_orange","a3_characters_f_orange","a3_characters_f_orange_facewear","a3_characters_f_orange_headgear","a3_characters_f_orange_uniforms","a3_characters_f_orange_vests","a3_sounds_f_orange","a3_data_f_orange_loadorder","a3_data_f_tacops","a3_dubbing_f_tacops","a3_functions_f_tacops","a3_language_f_tacops","a3_languagemissions_f_tacops","a3_missions_f_tacops","a3_modules_f_tacops","a3_music_f_tacops","a3_sounds_f_tacops","a3_ui_f_tacops","a3_characters_f_tacops","a3_data_f_tacops_loadorder","a3_data_f_tank","a3_data_f_warlords","a3_dubbing_f_tank","a3_dubbing_f_warlords","a3_editorpreviews_f_tank","a3_functions_f_tank","a3_functions_f_warlords","a3_language_f_tank","a3_language_f_warlords","a3_languagemissions_f_tank","a3_missions_f_tank","a3_missions_f_warlords","a3_missions_f_warlords_data","a3_modules_f_tank","a3_modules_f_warlords","a3_music_f_tank","a3_props_f_tank","a3_props_f_tank_military","a3_props_f_tank_military_tankacc","a3_props_f_tank_military_wrecks","a3_sounds_f_tank","a3_structures_f_tank","a3_structures_f_tank_decals","a3_structures_f_tank_decals_horizontal","a3_structures_f_tank_military","a3_structures_f_tank_military_fortifications","a3_structures_f_tank_military_repairdepot","a3_ui_f_tank","a3_weapons_f_tank","a3_weapons_f_tank_bags","a3_weapons_f_tank_launchers_mraws","a3_weapons_f_tank_launchers_vorona","a3_armor_f_tank","a3_armor_f_tank_afv_wheeled_01","a3_armor_f_tank_lt_01","a3_armor_f_tank_mbt_04","a3_cargoposes_f_tank","a3_characters_f_tank","a3_characters_f_tank_headgear","a3_characters_f_tank_uniforms","a3_data_f_tank_loadorder","a3_data_f_warlords_loadorder","a3_data_f_destroyer","a3_data_f_sams","a3_editorpreviews_f_destroyer","a3_editorpreviews_f_sams","a3_language_f_destroyer","a3_language_f_sams","a3_props_f_destroyer","a3_props_f_destroyer_military_briefingroomdesk","a3_props_f_destroyer_military_briefingroomscreen","a3_static_f_destroyer","a3_static_f_destroyer_boat_rack_01","a3_static_f_destroyer_ship_gun_01","a3_static_f_destroyer_ship_mrls_01","a3_static_f_sams","a3_static_f_sams_radar_system_01","a3_static_f_sams_radar_system_02","a3_static_f_sams_sam_system_03","a3_static_f_sams_sam_system_04","a3_weapons_f_destroyer","a3_weapons_f_sams","a3_data_f_destroyer_loadorder","a3_data_f_sams_loadorder"};
            m[]={"curator","expansion","kart","heli","mark","jets","argo","orange","tacops","tank"};
        };
        class CfgFontFamilies {
            a[]={"a3_uifonts_f"};
        };
        class CfgFonts {};
        class UserActionsConflictGroups {
            a[]={"a3_ui_f"};
        };
        class UserActionGroups {
            a[]={"a3_ui_f","a3_ui_f_curator","a3_3den"};
            m[]={"curator"};
        };
        class CfgEditCamera {
            a[]={"a3_ui_f"};
        };
        class CfgWrapperUI {
            a[]={"a3_ui_f"};
        };
        class CfgInGameUI {
            a[]={"a3_ui_f","a3_ui_f_curator"};
            m[]={"curator"};
        };
        class cfgGroupIcons {
            a[]={"a3_ui_f","a3_modules_f_kart","a3_missions_f_heli"};
            m[]={"kart","heli"};
        };
        class CfgTaskTypes {
            a[]={"a3_ui_f","a3_ui_f_orange"};
            m[]={"orange"};
        };
        class CfgSimpleTasks {
            a[]={"a3_ui_f"};
        };
        class CfgDiary {
            a[]={"a3_ui_f"};
        };
        class CfgActions {
            a[]={"a3_ui_f"};
        };
        class PreloadTextures {
            a[]={"a3_data_f","a3_ui_f","a3_modules_f_curator_cas","a3_data_f_bootcamp","a3_data_f_mark","a3_data_f_argo"};
            m[]={"curator","mark","argo"};
        };
        class CfgMissions {
            a[]={"a3_map_stratis_scenes_f","a3_missions_f","a3_missions_f_beta","a3_missions_f_gamma"};
        };
        class CfgRanks {
            a[]={"a3_ui_f"};
        };
        class CfgDefaultKeysPresets {
            a[]={"a3_ui_f"};
        };
        class JoystickSchemes {
            a[]={"a3_ui_f"};
        };
        class DefaultAnalogCurveDefs {
            a[]={"a3_ui_f"};
        };
        class DefaultMouseCurveDefs {};
        class CfgDetectors {};
        class CfgFaceWounds {};
        class CfgGlasses {
            a[]={"a3_characters_f","a3_characters_f_heads","a3_characters_f_exp","a3_characters_f_orange_facewear"};
            m[]={"expansion","orange"};
        };
        class CfgFaces {
            a[]={"a3_characters_f_heads"};
        };
        class CfgMimics {};
        class CfgEnvSounds {
            a[]={"a3_sounds_f"};
        };
        class CfgHQIdentities {
            a[]={"a3_dubbing_radio_f"};
        };
        class CfgHeads {
            a[]={"a3_characters_f_heads","a3_characters_f_exp"};
            m[]={"expansion"};
        };
        class CfgMusic {
            a[]={"a3_music_f","a3_music_f_epa","a3_music_f_epb","a3_music_f_epc","a3_sounds_f","a3_missions_f_epa","a3_data_f_curator","a3_music_f_bootcamp","a3_music_f_heli","a3_music_f_mark","a3_music_f_exp","a3_music_f_jets","a3_music_f_argo","a3_music_f_orange","a3_music_f_tacops","a3_music_f_tank"};
            m[]={"curator","heli","mark","expansion","jets","argo","orange","tacops","tank"};
        };
        class CfgSounds {
            a[]={"a3_animals_f_beta_sheep","a3_ui_f","a3_ui_f_curator","a3_missions_f","a3_missions_f_beta","a3_missions_f_gamma","a3_sounds_f","a3_sounds_f_epb","a3_sounds_f_epc","a3_air_f_beta_parachute_01","a3_missions_f_epa","a3_data_f_curator","a3_missions_f_bootcamp","a3_sounds_f_bootcamp","a3_missions_f_heli","a3_modules_f_mp_mark_objectives","a3_sounds_f_exp_a","a3_3den","a3_missions_f_exp","a3_sounds_f_jets","a3_sounds_f_patrol","a3_sounds_f_orange","a3_missions_f_tacops","a3_dubbing_f_warlords"};
            m[]={"curator","heli","mark","expansion","jets","argo","orange","tacops"};
        };
        class CfgWhistleSound {};
        class CfgTitles {
            a[]={"a3_data_f"};
        };
        class CfgIntro {};
        class CfgCredits {
            a[]={"a3_ui_f"};
        };
        class CfgCutScenes {};
        class CfgCameraEffects {};
        class CfgMarkers {
            a[]={"a3_ui_f","a3_ui_f_curator","a3_missions_f_heli","a3_ui_f_exp","a3_ui_f_orange"};
            m[]={"curator","heli","expansion","orange"};
        };
        class CfgMarkerColors {
            a[]={"a3_ui_f","a3_missions_f_beta"};
        };
        class CfgMarkerBrushes {
            a[]={"a3_ui_f"};
        };
        class CfgLocationTypes {
            a[]={"a3_ui_f","a3_ui_f_orange"};
            m[]={"orange"};
        };
        class CfgWorlds {
            a[]={"a3_map_data","a3_map_stratis","a3_ui_f","a3_map_altis","a3_map_vr","a3_data_f_exp","a3_map_malden","a3_map_tanoabuka"};
            m[]={"expansion","argo"};
        };
        class CfgWorldList {
            a[]={"a3_map_stratis","a3_map_altis","a3_map_vr","a3_missions_f_exp","a3_map_malden","a3_map_tanoabuka"};
            m[]={"expansion","argo"};
        };
        class CfgGroups {
            a[]={"a3_data_f","a3_data_f_curator"};
            m[]={"curator"};
        };
        class CfgAddons {
            a[]={"a3_data_f"};
        };
        class CfgEditorObjects {
            a[]={"a3_editor_f"};
        };
        class CfgMPGameTypes {
            a[]={"a3_ui_f","a3_ui_f_curator","a3_missions_f_heli","a3_missions_f_mp_mark","a3_missions_f_exp","a3_missions_f_patrol","a3_missions_f_tank","a3_missions_f_warlords"};
            m[]={"curator","heli","mark","expansion","argo","tank"};
        };
        class CfgLiveStats {};
        class CfgAchievements {};
        class CfgVoiceMask {};
        class CfgRumble {};
        class ButtonDeadZonesDefault {};
        class ControllerTypes {};
        class ControllerSchemes {};
        class DefaultTextAttributes {
            a[]={"a3_ui_f"};
        };
        class DefaultSounds {};
        class RscText {
            a[]={"a3_ui_f"};
        };
        class RscTextSmall {};
        class RscTitle {
            a[]={"a3_ui_f"};
        };
        class RscProgress {
            a[]={"a3_ui_f"};
        };
        class RscProgressNotFreeze {};
        class RscPicture {
            a[]={"a3_ui_f"};
        };
        class RscLadderPicture {
            a[]={"a3_ui_f"};
        };
        class RscPictureKeepAspect {
            a[]={"a3_ui_f"};
        };
        class RscHTML {
            a[]={"a3_ui_f"};
        };
        class RscButton {
            a[]={"a3_ui_f"};
        };
        class RscShortcutButton {
            a[]={"a3_ui_f"};
        };
        class RscButtonSmall {};
        class RscEdit {
            a[]={"a3_ui_f"};
        };
        class RscCombo {
            a[]={"a3_ui_f"};
        };
        class RscListBox {
            a[]={"a3_ui_f"};
        };
        class RscListNBox {
            a[]={"a3_ui_f"};
        };
        class RscXListBox {
            a[]={"a3_ui_f"};
        };
        class RscTree {
            a[]={"a3_ui_f"};
        };
        class RscSlider {
            a[]={"a3_ui_f"};
        };
        class RscSliderH {};
        class RscXSliderH {
            a[]={"a3_ui_f"};
        };
        class RscActiveText {
            a[]={"a3_ui_f"};
        };
        class RscStructuredText {
            a[]={"a3_ui_f"};
        };
        class RscControlsGroup {
            a[]={"a3_ui_f"};
        };
        class RscBackgroundStripeTop {
            a[]={"a3_ui_f"};
        };
        class RscBackgroundStripeBottom {
            a[]={"a3_ui_f"};
        };
        class RscDisplayBackgroundStripes {
            a[]={"a3_ui_f"};
        };
        class RscCinemaBorder {};
        class RscToolbox {
            a[]={"a3_ui_f"};
        };
        class RscHitZones {
            a[]={"a3_ui_f"};
        };
        class RscXKeyShadow {};
        class RscXKey {};
        class RscMapControl {
            a[]={"a3_ui_f"};
        };
        class RscObject {};
        class RscStandardDisplay {
            a[]={"a3_ui_f"};
        };
        class RscLineBreak {};
        class RscCompass {
            a[]={"a3_ui_f"};
        };
        class RscWatch {
            a[]={"a3_ui_f"};
        };
        class RscMiniMap {
            a[]={"a3_ui_f"};
        };
        class RscMiniMapSmall {
            a[]={"a3_ui_f"};
        };
        class RscButtonImages {
            a[]={"a3_ui_f"};
        };
        class RscObjectives {
            a[]={"a3_ui_f"};
        };
        class RscCheckBox {
            a[]={"a3_ui_f"};
        };
        class RscMsgBox {
            a[]={"a3_ui_f"};
        };
        class RscMsgBoxError {};
        class RscMsgBox3 {
            a[]={"a3_ui_f"};
        };
        class RscDisplayFileSelect {
            a[]={"a3_ui_f"};
        };
        class RscDisplayFileSelectImage {
            a[]={"a3_ui_f"};
        };
        class RscMap {
            a[]={"a3_ui_f"};
        };
        class RscDisplayChannel {
            a[]={"a3_ui_f"};
        };
        class RscDisplayChat {
            a[]={"a3_ui_f"};
        };
        class RscDisplayVoiceChat {};
        class RscDisplayMissionEditor {};
        class RscDisplayEditObject {
            a[]={"a3_editor_f"};
        };
        class RscDisplayMissionLoad {
            a[]={"a3_editor_f"};
        };
        class RscDisplayMissionSave {
            a[]={"a3_editor_f"};
        };
        class RscDisplayScriptingHelp {
            a[]={"a3_ui_f"};
        };
        class RscDisplayCapture {
            a[]={"a3_ui_f"};
        };
        class RscDisplayInterruptEditorPreview {
            a[]={"a3_editor_f"};
        };
        class RscDisplayInterruptEditor3D {};
        class RscDisplayAddonActions {
            a[]={"a3_ui_f"};
        };
        class RscDisplayNewMod {};
        class RscDisplayUavTerminalWaypointMenu {
            a[]={"a3_ui_f"};
        };
        class RscDisplayInsertMarker {
            a[]={"a3_ui_f"};
        };
        class RscDisplayPhysX3Debug {};
        class RscDisplayDebug {
            a[]={"a3_ui_f"};
        };
        class RscChatListDefault {
            a[]={"a3_ui_f"};
        };
        class RscChatListMission {
            a[]={"a3_ui_f"};
        };
        class RscChatListBriefing {
            a[]={"a3_ui_f"};
        };
        class RscChatListMap {
            a[]={"a3_ui_f"};
        };
        class RscTitlesText {
            a[]={"a3_ui_f"};
        };
        class RscIGText {};
        class RscIGProgress {
            a[]={"a3_ui_f"};
        };
        class RscDisplayHintC {
            a[]={"a3_ui_f"};
        };
        class RscDisplayHintCEx {
            a[]={"a3_ui_f"};
        };
        class RscInGameUI {
            a[]={"a3_ui_f","a3_ui_f_orange","a3_ui_f_tank"};
            m[]={"orange","tank"};
        };
        class RscTitles {
            a[]={"a3_ui_f","a3_ui_f_curator","a3_weapons_f","a3_ui_f_orange","a3_functions_f_tacops"};
            m[]={"curator","orange","tacops"};
        };
        class RscDisplayLoading {
            a[]={"a3_ui_f","a3_3den"};
        };
        class RscDisplayLoadMission {
            a[]={"a3_ui_f","a3_3den"};
        };
        class RscDisplayNotFreeze {
            a[]={"a3_ui_f","a3_3den"};
        };
        class RscDisplayNotFreezeBig {
            a[]={"a3_ui_f"};
        };
        class RscDisplayStart {
            a[]={"a3_ui_f","a3_3den"};
        };
        class RscDisplayEditDiaryRecord {
            a[]={"a3_ui_f"};
        };
        class RscDisplayDiary {
            a[]={"a3_ui_f"};
        };
        class RscDisplayMainMap {
            a[]={"a3_ui_f"};
        };
        class RscDisplayMain {
            a[]={"a3_ui_f"};
        };
        class RscDisplayCardA {};
        class RscDisplaySingleMission {
            a[]={"a3_ui_f"};
        };
        class RscDisplayCampaignLoad {
            a[]={"a3_ui_f"};
        };
        class RscDisplayRevert {};
        class RscDisplayGetReady {
            a[]={"a3_ui_f"};
        };
        class RscDisplayGear {
            a[]={"a3_ui_f"};
        };
        class RscDisplayGearWeapon {};
        class RscDisplayArtillery {
            a[]={"a3_ui_f"};
        };
        class RscDisplayEmpty {
            a[]={"a3_ui_f"};
        };
        class RscDisplayMission {
            a[]={"a3_ui_f"};
        };
        class RscDisplayIntro {};
        class RscDisplayOutro {};
        class RscDisplayAward {};
        class RscDisplayCampaign {};
        class RscDisplayMissionEnd {
            a[]={"a3_ui_f"};
        };
        class RscDisplayTeamSwitch {
            a[]={"a3_ui_f"};
        };
        class RscDisplayInterrupt {
            a[]={"a3_ui_f","a3_3den"};
        };
        class RscDisplayInterruptRevert {
            a[]={"a3_ui_f"};
        };
        class RscDisplaySelectSave {
            a[]={"a3_ui_f"};
        };
        class RscDisplayMPInterrupt {
            a[]={"a3_ui_f"};
        };
        class RscDisplayDebriefing {
            a[]={"a3_ui_f"};
        };
        class RscDisplayMissionFail {
            a[]={"a3_ui_f"};
        };
        class RscDisplayLogin {
            a[]={"a3_ui_f"};
        };
        class RscDisplayModLauncher {
            a[]={"a3_ui_f"};
        };
        class RscDisplayOptions {
            a[]={"a3_ui_f"};
        };
        class RscDisplayOptionsInGame {};
        class RscDisplayOptionsVideo {
            a[]={"a3_ui_f"};
        };
        class RscDisplayOptionsAudio {
            a[]={"a3_ui_f"};
        };
        class RscDisplayMicSensitivityOptions {
            a[]={"a3_ui_f"};
        };
        class RscDisplayGameOptions {
            a[]={"a3_ui_f"};
        };
        class RscListBoxKeys {
            a[]={"a3_ui_f"};
        };
        class RscDisplayControlSchemes {
            a[]={"a3_ui_f"};
        };
        class RscDisplayConfigure {
            a[]={"a3_ui_f"};
        };
        class RscDisplayConfigureAction {
            a[]={"a3_ui_f"};
        };
        class RscDisplayConfigureControllers {
            a[]={"a3_ui_f"};
        };
        class RscDisplayCustomizeController {
            a[]={"a3_ui_f"};
        };
        class RscDisplayJoystickSchemes {
            a[]={"a3_ui_f"};
        };
        class RscDisplayCredits {};
        class RscDisplayFieldManual {
            a[]={"a3_ui_f"};
        };
        class RscDisplaySelectIsland {
            a[]={"a3_ui_f"};
        };
        class RscDisplaySelectIslandNew {};
        class RscDisplayCustomArcade {
            a[]={"a3_ui_f"};
        };
        class RscDisplayArcadeMap {
            a[]={"a3_ui_f"};
        };
        class RscDisplayArcadeUnit {
            a[]={"a3_ui_f"};
        };
        class RscDisplayArcadeModules {
            a[]={"a3_ui_f"};
        };
        class RscDisplayArcadeGroup {
            a[]={"a3_ui_f"};
        };
        class RscDisplayArcadeWaypoint {
            a[]={"a3_ui_f"};
        };
        class RscDisplayArcadeMarker {
            a[]={"a3_ui_f"};
        };
        class RscDisplayArcadeSensor {
            a[]={"a3_ui_f"};
        };
        class RscDisplayArcadeEffects {
            a[]={"a3_ui_f"};
        };
        class RscDisplayTemplateSave {
            a[]={"a3_ui_f"};
        };
        class RscDisplayPublishMission {
            a[]={"a3_ui_f"};
        };
        class RscDisplayPublishMissionSelectTags {
            a[]={"a3_ui_f","a3_3den"};
        };
        class RscDisplayTemplateLoad {
            a[]={"a3_ui_f"};
        };
        class RscDisplayIntel {
            a[]={"a3_ui_f"};
        };
        class RscDisplayESRBOnline {
            a[]={"a3_ui_f"};
        };
        class RscDisplayMultiplayer {
            a[]={"a3_ui_f"};
        };
        class RscDisplayHostSettings {
            a[]={"a3_ui_f"};
        };
        class RscDisplayRemoteMissions {
            a[]={"a3_ui_f"};
        };
        class RscDisplayRemoteMissionVoted {
            a[]={"a3_ui_f"};
        };
        class RscDisplayServer {
            a[]={"a3_ui_f","a3_3den"};
        };
        class RscDisplayClient {
            a[]={"a3_ui_f"};
        };
        class RscDisplayMultiplayerSetup {
            a[]={"a3_ui_f"};
        };
        class RscDisplayMultiplayerSetupParams {
            a[]={"a3_ui_f"};
        };
        class RscDisplayMultiplayerSetupParameter {
            a[]={"a3_ui_f"};
        };
        class RscDisplayPassword {
            a[]={"a3_ui_f"};
        };
        class RscDisplayPort {
            a[]={"a3_ui_f"};
        };
        class RscDisplayIPAddress {
            a[]={"a3_ui_f"};
        };
        class RscDisplayFilter {
            a[]={"a3_ui_f"};
        };
        class RscDisplayMPPlayers {
            a[]={"a3_ui_f"};
        };
        class RscDisplayClientWait {
            a[]={"a3_ui_f"};
        };
        class RscDisplayServerGetReady {
            a[]={"a3_ui_f"};
        };
        class RscDisplayClientGetReady {
            a[]={"a3_ui_f"};
        };
        class RscMPSetupMessage {
            a[]={"a3_ui_f"};
        };
        class RscPendingInvitation {
            a[]={"a3_ui_f"};
        };
        class RscPendingInvitationInGame {
            a[]={"a3_ui_f"};
        };
        class cfgBuldozer {};
        class RscGroupRootMenu {
            a[]={"a3_ui_f"};
        };
        class RscMainMenu {
            a[]={"a3_ui_f"};
        };
        class RscSubmenu {
            a[]={"a3_ui_f"};
        };
        class RscMoveHigh {};
        class RscMoveDir {};
        class RscReply {};
        class RscCallSupport {
            a[]={"a3_ui_f"};
        };
        class RscStatus {};
        class RscWatchDir {};
        class RscWatchMoreDir {};
        class RscMoveDist {};
        class RscFormations {};
        class RscCombatMode {};
        class RscBurst {};
        class RscTeam {};
        class RscSelectTeam {};
        class RscRadio {
            a[]={"a3_ui_f"};
        };
        class RscMenuBasicLevel {};
        class RscHCGroupRootMenu {
            a[]={"a3_ui_f"};
        };
        class RscHCMainMenu {
            a[]={"a3_ui_f"};
        };
        class RscHCMoveHigh {
            a[]={"a3_ui_f"};
        };
        class RscHCWatchDir {
            a[]={"a3_ui_f"};
        };
        class RscHCCombatMode {
            a[]={"a3_ui_f"};
        };
        class RscHCSpeedMode {
            a[]={"a3_ui_f"};
        };
        class RscHCFormations {
            a[]={"a3_ui_f"};
        };
        class RscHCTeam {
            a[]={"a3_ui_f"};
        };
        class RscHCSelectTeam {
            a[]={"a3_ui_f"};
        };
        class RscHCReply {
            a[]={"a3_ui_f"};
        };
        class RscHCUAV {
            a[]={"a3_ui_f"};
        };
        class RscHCWPRootMenu {
            a[]={"a3_ui_f"};
        };
        class RscHCWPType {
            a[]={"a3_ui_f"};
        };
        class RscHCWPCombatMode {
            a[]={"a3_ui_f"};
        };
        class RscHCWPFormations {
            a[]={"a3_ui_f"};
        };
        class RscHCWPSpeedMode {
            a[]={"a3_ui_f"};
        };
        class RscHCWPWait {
            a[]={"a3_ui_f"};
        };
        class RadioChannels {};
        class RadioProtocolBase {
            a[]={"a3_dubbing_radio_f","a3_dubbing_radio_f_exp"};
            m[]={"expansion"};
        };
        class RadioProtocolDefault {};
        class PreloadConfig {
            a[]={"a3_data_f"};
        };
        class CfgCameraShake {
            a[]={"a3_data_f","a3_weapons_f"};
        };
        class CfgLensFlare {
            a[]={"a3_data_f","a3_map_stratis","a3_map_altis","a3_map_malden","a3_map_tanoabuka"};
            m[]={"argo","expansion"};
        };
        class CfgSoundEffects {
            a[]={"a3_sounds_f"};
        };
        class CfgMineDetectionCoefs {};
        class CfgFire {};
        class CfgIRLaserSettings {
            a[]={"a3_data_f"};
        };
        class CfgFunctions {
            a[]={"a3_functions_f","a3_functions_f_epa","a3_functions_f_epc","a3_functions_f_curator","a3_modules_f","a3_modules_f_epb_misc","a3_structures_f","a3_modules_f_curator","a3_missions_f_curator","a3_modules_f_kart","a3_functions_f_bootcamp","a3_modules_f_bootcamp","a3_functions_f_heli","a3_missions_f_heli","a3_modules_f_heli_misc","a3_functions_f_mark","a3_missions_f_mark","a3_missions_f_mp_mark","a3_modules_f_mp_mark","a3_functions_f_exp_a","a3_missions_f_exp_a","a3_props_f_exp_a_military_equipment","a3_3den","a3_functions_f_exp","a3_missions_f_exp","a3_functions_f_destroyer","a3_functions_f_jets","a3_functions_f_patrol","a3_functions_f_orange","a3_functions_f_tacops","a3_modules_f_tacops","a3_functions_f_tank","a3_functions_f_warlords","a3_modules_f_tank"};
            m[]={"curator","kart","heli","mark","expansion","jets","argo","orange","tacops","tank"};
        };
        class CfgRespawnTemplates {
            a[]={"a3_functions_f","a3_functions_f_curator"};
            m[]={"curator"};
        };
        class CfgPostProcessTemplates {
            a[]={"a3_functions_f","a3_ui_f_curator"};
            m[]={"curator"};
        };
        class CfgRemoteExecCommands {
            a[]={"a3_functions_f"};
        };
        class CfgRemoteExec {
            a[]={"a3_functions_f"};
        };
        class CfgCommands {
            a[]={"a3_functions_f"};
        };
        class CfgORBATDefault {
            a[]={"a3_functions_f"};
        };
        class CfgEditorCategories {
            a[]={"a3_data_f","a3_data_f_argo"};
            m[]={"argo"};
        };
        class CfgEditorSubcategories {
            a[]={"a3_data_f","a3_data_f_exp","a3_editorpreviews_f_jets","a3_data_f_patrol","a3_data_f_orange"};
            m[]={"expansion","jets","argo","orange"};
        };
        class Empty {};
        class VehicleSystemsTemplateLeftDriver {
            a[]={"a3_data_f"};
        };
        class VehicleSystemsTemplateRightDriver {
            a[]={"a3_data_f"};
        };
        class VehicleSystemsTemplateLeftCommander {
            a[]={"a3_data_f"};
        };
        class VehicleSystemsTemplateRightCommander {
            a[]={"a3_data_f"};
        };
        class VehicleSystemsTemplateLeftGunner {
            a[]={"a3_data_f"};
        };
        class VehicleSystemsTemplateRightGunner {
            a[]={"a3_data_f"};
        };
        class VehicleSystemsTemplateLeftPilot {
            a[]={"a3_data_f"};
        };
        class VehicleSystemsTemplateRightPilot {
            a[]={"a3_data_f"};
        };
        class SensorTemplatePassiveRadar {
            a[]={"a3_data_f"};
        };
        class SensorTemplateAntiRadiation {
            a[]={"a3_data_f"};
        };
        class SensorTemplateActiveRadar {
            a[]={"a3_data_f"};
        };
        class SensorTemplateIR {
            a[]={"a3_data_f"};
        };
        class SensorTemplateVisual {
            a[]={"a3_data_f"};
        };
        class SensorTemplateMan {
            a[]={"a3_data_f"};
        };
        class SensorTemplateLaser {
            a[]={"a3_data_f"};
        };
        class SensorTemplateNV {
            a[]={"a3_data_f"};
        };
        class SensorTemplateDataLink {
            a[]={"a3_data_f"};
        };
        class CfgMuzzleFlashes {
            a[]={"a3_data_f"};
        };
        class CfgBushNoMipmapTextures {
            a[]={"a3_data_f"};
        };
        class DefaultEventHandlers {
            a[]={"a3_data_f"};
        };
        class MachineGunEject {
            a[]={"a3_data_f_particleeffects"};
        };
        class MachineGunEject1 {
            a[]={"a3_data_f_particleeffects"};
        };
        class MachineGunEject2 {
            a[]={"a3_data_f_particleeffects"};
        };
        class MachineGunCartridge {
            a[]={"a3_data_f_particleeffects"};
        };
        class MachineGunCartridge1 {
            a[]={"a3_data_f_particleeffects"};
        };
        class MachineGunCartridge338 {
            a[]={"a3_data_f_particleeffects"};
        };
        class MachineGunCartridgeShort1 {
            a[]={"a3_data_f_particleeffects"};
        };
        class MachineGunCartridge2 {
            a[]={"a3_data_f_particleeffects"};
        };
        class HeavyGunCartridge1 {
            a[]={"a3_data_f_particleeffects"};
        };
        class MachineGunCloud {
            a[]={"a3_data_f_particleeffects"};
        };
        class RifleAssaultCloud {
            a[]={"a3_data_f_particleeffects"};
        };
        class SniperCloud {
            a[]={"a3_data_f_particleeffects"};
        };
        class CaselessAmmoCloud {
            a[]={"a3_data_f_particleeffects"};
        };
        class PistolCloud {
            a[]={"a3_data_f_particleeffects"};
        };
        class GrenadeLauncherCloud {
            a[]={"a3_data_f_particleeffects"};
        };
        class CounterMeasureFlare {
            a[]={"a3_data_f_particleeffects"};
        };
        class CounterMeasureChaff {
            a[]={"a3_data_f_particleeffects"};
        };
        class FlareShell {
            a[]={"a3_weapons_f_orange"};
            m[]={"orange"};
        };
        class MachineGun1 {
            a[]={"a3_data_f_particleeffects"};
        };
        class MachineGun2 {
            a[]={"a3_data_f_particleeffects"};
        };
        class MachineGun3 {
            a[]={"a3_data_f_particleeffects"};
        };
        class AutoCannonFired {
            a[]={"a3_data_f_particleeffects"};
        };
        class MissileDAR1 {
            a[]={"a3_data_f_particleeffects"};
        };
        class CannonFired {
            a[]={"a3_data_f_particleeffects"};
        };
        class ArtilleryFired1 {
            a[]={"a3_data_f_particleeffects"};
        };
        class ArtilleryFiredL {};
        class ArtilleryFiredR {};
        class MLRSFired {
            a[]={"a3_data_f_particleeffects"};
        };
        class MortarFired {
            a[]={"a3_data_f_particleeffects"};
        };
        class Missile0 {
            a[]={"a3_data_f_particleeffects"};
        };
        class Missile1 {
            a[]={"a3_data_f_particleeffects"};
        };
        class Missile2 {
            a[]={"a3_data_f_particleeffects"};
        };
        class Missile3 {
            a[]={"a3_data_f_particleeffects"};
        };
        class Missile4 {
            a[]={"a3_data_f_particleeffects"};
        };
        class Missile5 {
            a[]={"a3_data_f_particleeffects"};
        };
        class CruiseMissile {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeTrailEffectMain1 {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeTrailEffectMain2 {
            a[]={"a3_data_f_particleeffects"};
        };
        class WPTrailEffectMain2 {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsStandard {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsMedium {
            a[]={"a3_data_f_particleeffects"};
        };
        class GrenadeCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class IEDMineBigExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class IEDMineBigGarbageCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class IEDMineFlame {
            a[]={"a3_data_f_particleeffects"};
        };
        class IEDMineBigLandCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class IEDMineSmallExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class IEDMineSmallGarbageCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class IEDMineSmallLandCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class MortarCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class ATMissileCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class AAMissileCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class ATRocketCrater {};
        class HERocketCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class HEShellCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class ArtyShellCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class SecondaryCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExploAmmoCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class ShotUnderwater {
            a[]={"a3_data_f_particleeffects"};
        };
        class AmmoUnderwater {
            a[]={"a3_data_f_particleeffects"};
        };
        class AmmoClassic {
            a[]={"a3_data_f_particleeffects"};
        };
        class ArtilleryTrails {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsDummy_Orange {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsHardGround {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsGroundSabot {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsSea {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsSeaMen {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsAir {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsWaterBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsWaterRocket {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsWaterHE {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsWaterExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactEffectsDeepWaterExplosion {};
        class ImpactMetal {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactMetalSabotBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactMetalSabotSmall {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactGlass {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactGlassThin {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactWood {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactPlaster {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactPlastic {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactTyre {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactRubber {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactConcrete {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactConcreteSabot {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactConcreteSabotSmall {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactLeaves {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactLeavesGreen {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactLeavesDead {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactLeavesGreenBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactLeavesPalm {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactLeavesPine {
            a[]={"a3_data_f_particleeffects"};
        };
        class BombCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class HeavyBombCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExplosionEffectsWater {
            a[]={"a3_data_f_particleeffects"};
        };
        class CannonFire {
            a[]={"a3_data_f_particleeffects"};
        };
        class HeavyCaliber {
            a[]={"a3_data_f_particleeffects"};
        };
        class RocketBackEffectsNLAW {
            a[]={"a3_data_f_particleeffects"};
        };
        class RocketBackEffectsRPG {
            a[]={"a3_data_f_particleeffects"};
        };
        class RocketBackEffectsRPGNT {
            a[]={"a3_data_f_particleeffects"};
        };
        class RocketBackEffectsNLAWNT {
            a[]={"a3_data_f_particleeffects"};
        };
        class PylonBackEffects_InitDelay {
            a[]={"a3_data_f_particleeffects"};
        };
        class PylonBackEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class PylonBackEffectsFFAR {
            a[]={"a3_data_f_particleeffects"};
        };
        class PylonBackEffectsRockets {
            a[]={"a3_data_f_particleeffects"};
        };
        class RocketBackEffectsStaticRPG {
            a[]={"a3_data_f_particleeffects"};
        };
        class SencondaryExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class MineNondirectionalCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class MineNondirectionalCraterSmall {
            a[]={"a3_data_f_particleeffects"};
        };
        class MineNondirectionalExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class MineNondirectionalExplosionSmall {
            a[]={"a3_data_f_particleeffects"};
        };
        class MineUnderwaterExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class MineUnderwaterABExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class MineUnderwaterPDMExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class GrenadeExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class MortarExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class WPExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class BasicAmmoExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class AmmoBulletEffect {
            a[]={"a3_data_f_particleeffects"};
        };
        class ATMissileExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class AAMissileExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class MineExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class ATMineExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class MineCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class ATMineCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class BoundingMineExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class BoundingMineCrater {
            a[]={"a3_data_f_particleeffects"};
        };
        class MineJumpEffect {
            a[]={"a3_data_f_particleeffects"};
        };
        class DirectionalMineExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class DirectionalMineExplosionBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class DirectionalMineCrater {};
        class ATRocketExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class HERocketExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class HEShellExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class ArtyShellExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class BombExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class HeavyBombExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class MissileExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class HelicopterExplosionEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class HelicopterExplosionEffects2 {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExplosionShardsFire {
            a[]={"a3_data_f_particleeffects"};
        };
        class VehicleExplosionEffectsBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class VehicleExplosionEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class RocketExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExploAmmoExplosion {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExploAmmoExplosionPlaneCAS {
            a[]={"a3_data_f_particleeffects"};
        };
        class MGunSmoke {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustEffectOffroad {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustEffectMRAP_03 {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustsEffectFBoat {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustEffectTankSide {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustEffectTankBack {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustEffectTankGasturbineBack {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustsEffectAMV {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustEffectTractor {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustEffectHEMTT {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustEffectHTruck {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustEffectMRAP_02 {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustEffectHeli {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustsEffectHeliMed {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustsEffectHeliCom {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustsEffectHeliComHP {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustsEffectHeliBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustsEffectPlane {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustsEffectPlaneHP {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustsEffectDrone {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustsEffectJet {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustsEffectPlaneBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustEffectOnWater {
            a[]={"a3_data_f_particleeffects"};
        };
        class ExhaustEffectBigOnWater {
            a[]={"a3_data_f_particleeffects"};
        };
        class LDustEffectsAir {
            a[]={"a3_data_f_particleeffects"};
        };
        class RDustEffectsAir {
            a[]={"a3_data_f_particleeffects"};
        };
        class DustEffectBottom {
            a[]={"a3_data_f_particleeffects"};
        };
        class LDustEffectsMan {
            a[]={"a3_data_f_particleeffects"};
        };
        class RDustEffectsMan {
            a[]={"a3_data_f_particleeffects"};
        };
        class LSandEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class RSandEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class LSandEffectsBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class RSandEffectsBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class LDirtEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class RDirtEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class LDirtEffectsBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class RDirtEffectsBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class LGrassEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class RGrassEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class LGrassEffectsBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class RGrassEffectsBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class LGrassDryEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class RGrassDryEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class LGrassEffectsDryBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class RGrassEffectsDryBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class LStonesEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class RStonesEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class LStonesEffectsBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class RStonesEffectsBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class PersonDust {
            a[]={"a3_data_f_particleeffects"};
        };
        class RFastWaterEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class LFastWaterEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class REngEffectsSmall {
            a[]={"a3_data_f_particleeffects"};
        };
        class LEngEffectsSmall {
            a[]={"a3_data_f_particleeffects"};
        };
        class WaterWhirlEffect {};
        class HeliDustBig {
            a[]={"a3_data_f_particleeffects"};
        };
        class UAVDust {
            a[]={"a3_data_f_particleeffects"};
        };
        class UAVWater {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmallFire {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmallFireBarrel {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeShellWhiteEffect {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeShellRedEffect {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeShellGreenEffect {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeShellYellowEffect {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeShellPurpleEffect {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeShellBlueEffect {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeShellOrangeEffect {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeShellWhiteWater {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeShellRedWater {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeShellGreenWater {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeShellYellowWater {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeShellPurpleWater {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeShellBlueWater {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeShellOrangeWater {
            a[]={"a3_data_f_particleeffects"};
        };
        class SmokeShellWhiteSmall {
            a[]={"a3_data_f_particleeffects"};
        };
        class IncinerateShell {
            a[]={"a3_data_f_particleeffects"};
        };
        class ChemlightLight_green {
            a[]={"a3_data_f_particleeffects"};
        };
        class ChemlightLight_red {
            a[]={"a3_data_f_particleeffects"};
        };
        class ChemlightLight_yellow {
            a[]={"a3_data_f_particleeffects"};
        };
        class ChemlightLight_blue {
            a[]={"a3_data_f_particleeffects"};
        };
        class AirDestructionEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class UAVDestructionEffects {
            a[]={"a3_data_f_particleeffects"};
        };
        class collisionEffect {
            a[]={"a3_data_f_particleeffects"};
        };
        class FireDamage {
            a[]={"a3_data_f_particleeffects"};
        };
        class EmptyEffect {};
        class ScubaEffect {
            a[]={"a3_data_f_particleeffects"};
        };
        class WingVortices {
            a[]={"a3_data_f_particleeffects"};
        };
        class BodyVortices {
            a[]={"a3_data_f_particleeffects"};
        };
        class BulletBubbles {
            a[]={"a3_data_f_particleeffects"};
        };
        class ImpactUnderwater {
            a[]={"a3_data_f_particleeffects"};
        };
        class CfgIdentities {
            a[]={"a3_dubbing_radio_f","a3_modules_f_intel","a3_missions_f","a3_missions_f_beta","a3_missions_f_gamma","a3_missions_f_epa","a3_missions_f_kart","a3_missions_f_bootcamp","a3_missions_f_heli","a3_missions_f_mark","a3_characters_f_exp","a3_missions_f_orange","a3_missions_f_tacops","a3_missions_f_tank"};
            m[]={"kart","heli","mark","expansion","orange","tacops","tank"};
        };
        class RadioProtocolDebug {
            a[]={"a3_dubbing_radio_f"};
        };
        class RadioProtocolENG {
            a[]={"a3_dubbing_radio_f"};
        };
        class RadioProtocolPER {
            a[]={"a3_dubbing_radio_f"};
        };
        class RadioProtocolGRE {
            a[]={"a3_dubbing_radio_f"};
        };
        class DefaultFont {
            a[]={"a3_editor_f","a3_ui_f","a3_ui_f_curator","a3_ui_f_kart","a3_ui_f_mp_mark","a3_ui_f_exp_a","a3_ui_f_orange","a3_ui_f_tacops","a3_ui_f_tank"};
            m[]={"curator","kart","mark","orange","tacops","tank"};
        };
        class RscControlsGroupNoScrollbars {
            a[]={"a3_ui_f"};
        };
        class RscControlsGroupNoHScrollbars {
            a[]={"a3_ui_f"};
        };
        class RscControlsGroupNoVScrollbars {
            a[]={"a3_ui_f"};
        };
        class RscLine {
            a[]={"a3_ui_f"};
        };
        class RscActivePicture {
            a[]={"a3_ui_f"};
        };
        class RscButtonTextOnly {
            a[]={"a3_ui_f"};
        };
        class RscShortcutButtonMain {
            a[]={"a3_ui_f"};
        };
        class RscButtonEditor {
            a[]={"a3_ui_f"};
        };
        class RscIGUIShortcutButton {
            a[]={"a3_ui_f"};
        };
        class RscGearShortcutButton {
            a[]={"a3_ui_f"};
        };
        class RscButtonMenu {
            a[]={"a3_ui_f"};
        };
        class RscButtonMenuOK {
            a[]={"a3_ui_f"};
        };
        class RscButtonMenuCancel {
            a[]={"a3_ui_f"};
        };
        class RscButtonMenuSteam {
            a[]={"a3_ui_f"};
        };
        class RscLoadingText {
            a[]={"a3_ui_f"};
        };
        class RscIGUIListBox {
            a[]={"a3_ui_f"};
        };
        class RscIGUIListNBox {
            a[]={"a3_ui_f"};
        };
        class RscFrame {
            a[]={"a3_ui_f"};
        };
        class RscBackground {
            a[]={"a3_ui_f"};
        };
        class RscBackgroundGUI {
            a[]={"a3_ui_f"};
        };
        class RscBackgroundGUILeft {
            a[]={"a3_ui_f"};
        };
        class RscBackgroundGUIRight {
            a[]={"a3_ui_f"};
        };
        class RscBackgroundGUIBottom {
            a[]={"a3_ui_f"};
        };
        class RscBackgroundGUITop {
            a[]={"a3_ui_f"};
        };
        class RscBackgroundGUIDark {
            a[]={"a3_ui_f"};
        };
        class RscBackgroundLogo {
            a[]={"a3_ui_f"};
        };
        class RscMapControlEmpty {
            a[]={"a3_ui_f"};
        };
        class IGUIBack {
            a[]={"a3_ui_f"};
        };
        class RscVignette {
            a[]={"a3_ui_f"};
        };
        class RscMapControlTooltip {
            a[]={"a3_ui_f"};
        };
        class CA_Mainback {
            a[]={"a3_ui_f"};
        };
        class CA_Back {
            a[]={"a3_ui_f"};
        };
        class CA_Title_Back {
            a[]={"a3_ui_f"};
        };
        class CA_Black_Back {
            a[]={"a3_ui_f"};
        };
        class CA_Title {};
        class CA_Logo {
            a[]={"a3_ui_f"};
        };
        class CA_Logo_Small {
            a[]={"a3_ui_f"};
        };
        class CA_RscButton {
            a[]={"a3_ui_f"};
        };
        class CA_RscButton_dialog {
            a[]={"a3_ui_f"};
        };
        class CA_Ok {
            a[]={"a3_ui_f"};
        };
        class CA_Ok_image {
            a[]={"a3_ui_f"};
        };
        class CA_Ok_image2 {
            a[]={"a3_ui_f"};
        };
        class CA_Ok_text {
            a[]={"a3_ui_f"};
        };
        class CfgCuratorChallenges {
            a[]={"a3_functions_f_curator"};
            m[]={"curator"};
        };
        class CfgHintCategories {
            a[]={"a3_language_f","a3_language_f_orange"};
            m[]={"orange"};
        };
        class CfgHints {
            a[]={"a3_language_f","a3_language_f_beta","a3_language_f_gamma","a3_language_f_epa","a3_language_f_epb","a3_language_f_epc","a3_ui_f_curator","a3_language_f_kart","a3_language_f_bootcamp","a3_language_f_heli","a3_functions_f_mp_mark","a3_language_f_exp_a","a3_language_f_exp_b","a3_language_f_argo","a3_language_f_orange","a3_language_f_warlords"};
            m[]={"curator","kart","heli","mark","argo","orange"};
        };
        class ctrlCheckbox {
            a[]={"a3_3den"};
        };
        class ctrlCheckboxBaseline {
            a[]={"a3_3den"};
        };
        class ctrlActivePicture {
            a[]={"a3_3den"};
        };
        class ctrlStatic {
            a[]={"a3_3den"};
        };
        class ctrlControlsGroupNoScrollbars {
            a[]={"a3_3den"};
        };
        class ctrlStructuredText {
            a[]={"a3_3den"};
        };
        class Cfg3DEN {
            a[]={"a3_modules_f","a3_3den"};
        };
        class CfgObjectCompositions {};
        class CfgCommunicationMenu {
            a[]={"a3_modules_f_supports","a3_ui_f","a3_missions_f_beta","a3_missions_f_epa"};
        };
        class CfgFiringDrills {
            a[]={"a3_modules_f_beta_firingdrills","a3_missions_f_beta","a3_missions_f_gamma","a3_missions_f_mark"};
            m[]={"mark"};
        };
        class CfgMusicClasses {
            a[]={"a3_music_f"};
        };
        class CfgDestroy {
            a[]={"a3_structures_f","a3_armor_f"};
        };
        class CfgMovesAnimal {
            a[]={"a3_animals_f"};
        };
        class CfgMovesButterfly {
            a[]={"a3_animals_f"};
        };
        class CfgMovesBird {
            a[]={"a3_animals_f"};
        };
        class CfgTasks {
            a[]={"a3_animals_f","a3_data_f_curator_virtual"};
            m[]={"curator"};
        };
        class CfgMovesAnimal_Base_F {
            a[]={"a3_animals_f_fishes","a3_animals_f_rabbit","a3_animals_f_snakes","a3_animals_f_turtle","a3_animals_f_beta_chicken","a3_animals_f_beta_dog","a3_animals_f_beta_goat","a3_animals_f_beta_sheep"};
        };
        class CfgMovesFishes_F {
            a[]={"a3_animals_f_fishes"};
        };
        class CfgMovesSharks_F {
            a[]={"a3_animals_f_fishes"};
        };
        class CfgMovesRabbit_F {
            a[]={"a3_animals_f_rabbit"};
        };
        class CfgMovesSnakes_F {
            a[]={"a3_animals_f_snakes"};
        };
        class CfgMovesTurtle_F {
            a[]={"a3_animals_f_turtle"};
        };
        class CfgMovesHen_F {
            a[]={"a3_animals_f_beta_chicken"};
        };
        class CfgMovesCock_F {
            a[]={"a3_animals_f_beta_chicken"};
        };
        class CfgMovesDog_F {
            a[]={"a3_animals_f_beta_dog"};
        };
        class CfgMovesGoat_F {
            a[]={"a3_animals_f_beta_goat"};
        };
        class CfgMovesSheep_F {
            a[]={"a3_animals_f_beta_sheep"};
        };
        class CfgMovesMaleSdr {
            a[]={"a3_anims_f_config_sdr","a3_soft_f_kart_kart_01","a3_anims_f_kart","a3_anims_f_exp_a"};
            m[]={"kart"};
        };
        class CfgCommunityGuide {
            a[]={"a3_ui_f"};
        };
        class RscTextMulti {
            a[]={"a3_ui_f"};
        };
        class RscTreeSearch {
            a[]={"a3_ui_f"};
        };
        class RscPictureAllowPixelSplit {
            a[]={"a3_ui_f"};
        };
        class RscPictureKeepAspectAllowPixelSplit {
            a[]={"a3_ui_f"};
        };
        class RscVideo {
            a[]={"a3_ui_f"};
        };
        class RscVideoKeepAspect {
            a[]={"a3_ui_f"};
        };
        class RscActivePictureKeepAspect {
            a[]={"a3_ui_f"};
        };
        class RscTextCheckBox {
            a[]={"a3_ui_f"};
        };
        class RscEditMulti {
            a[]={"a3_ui_f"};
        };
        class RscMapSignalBackground {
            a[]={"a3_ui_f"};
        };
        class RscMapSignalPicture {
            a[]={"a3_ui_f"};
        };
        class RscMapSignalText {
            a[]={"a3_ui_f"};
        };
        class RscMessageBox {
            a[]={"a3_ui_f"};
        };
        class RscWIP {
            a[]={"a3_ui_f"};
        };
        class DLCActionNotification {
            a[]={"a3_ui_f"};
        };
        class RscColorPicker {
            a[]={"a3_ui_f"};
        };
        class RscInterlacingScreen {
            a[]={"a3_ui_f"};
        };
        class RscDebugConsole {
            a[]={"a3_ui_f"};
        };
        class RscFeedback {
            a[]={"a3_ui_f"};
        };
        class RscMissionStatus {
            a[]={"a3_ui_f"};
        };
        class RscNotificationArea {
            a[]={"a3_ui_f"};
        };
        class RscHintGroup {
            a[]={"a3_ui_f"};
        };
        class RscVehicleToggles {
            a[]={"a3_ui_f"};
        };
        class RscTrafficLight {
            a[]={"a3_ui_f"};
        };
        class RscButtonSearch {
            a[]={"a3_ui_f"};
        };
        class RscMsgBoxKeysPreset {
            a[]={"a3_ui_f"};
        };
        class RscMsgBoxKeysPresetJets {
            a[]={"a3_ui_f"};
        };
        class RscMsgBoxKeysPresetCustomInfoPanel {
            a[]={"a3_ui_f"};
        };
        class RscControlsTable {
            a[]={"a3_ui_f"};
        };
        class RscIGUIText {
            a[]={"a3_ui_f"};
        };
        class RscOpticsText {
            a[]={"a3_ui_f"};
        };
        class RscOpticsValue {
            a[]={"a3_ui_f"};
        };
        class RscIGUIValue {
            a[]={"a3_ui_f"};
        };
        class RscDisplayNone {
            a[]={"a3_ui_f"};
        };
        class RscDisplayDebugPublic {
            a[]={"a3_ui_f"};
        };
        class RscButtonMenuMain {
            a[]={"a3_ui_f"};
        };
        class RscButtonTestCentered {
            a[]={"a3_ui_f"};
        };
        class RscMainMenuSpotlight {
            a[]={"a3_ui_f"};
        };
        class RscDisplayNewUser {
            a[]={"a3_ui_f"};
        };
        class RscDisplaySingleMission_ChallengeOverviewGroup {
            a[]={"a3_ui_f"};
        };
        class RscDisplayCampaignSelect {
            a[]={"a3_ui_f"};
        };
        class RscDisplayOptionsLayout {
            a[]={"a3_ui_f"};
        };
        class RscDisplayMovieInterrupt {
            a[]={"a3_ui_f"};
        };
        class RscDisplayDebriefing_RscTextMultiline {
            a[]={"a3_ui_f"};
        };
        class RscDisplayDebriefing_ItemTemplate {
            a[]={"a3_ui_f"};
        };
        class RscDisplayDebriefing_ListGroup {
            a[]={"a3_ui_f"};
        };
        class RscFunctionsViewer {
            a[]={"a3_ui_f"};
        };
        class RscDisplayConfigViewer {
            a[]={"a3_ui_f"};
        };
        class RscConfigEditor_Main {
            a[]={"a3_ui_f"};
        };
        class RscGUIEditor {
            a[]={"a3_ui_f"};
        };
        class RscDisplayAAR {
            a[]={"a3_ui_f"};
        };
        class RscDisplayLocWeaponInfo {
            a[]={"a3_ui_f"};
        };
        class RscDisplayORBAT {
            a[]={"a3_ui_f"};
        };
        class RscDisplayStrategicMap {
            a[]={"a3_ui_f"};
        };
        class RscDisplayStrategicMapSimulation {
            a[]={"a3_ui_f"};
        };
        class RscGearTemplates {
            a[]={"a3_ui_f"};
        };
        class RscDisplayInventory_DLCTemplate {
            a[]={"a3_ui_f"};
        };
        class RscDisplayInventory {
            a[]={"a3_ui_f"};
        };
        class RscDisplayCamera {
            a[]={"a3_ui_f"};
        };
        class RscDisplayAnimViewer {
            a[]={"a3_ui_f"};
        };
        class RscDisplayFunctionsViewer {
            a[]={"a3_ui_f"};
        };
        class RscDisplayCommon {
            a[]={"a3_ui_f"};
        };
        class RscDisplayCommonMessage {
            a[]={"a3_ui_f"};
        };
        class RscDisplayCommonMessagePause {
            a[]={"a3_ui_f"};
        };
        class RscDisplayCommonHint {
            a[]={"a3_ui_f"};
        };
        class RscDisplayWelcome {
            a[]={"a3_ui_f"};
        };
        class RscDisplayAVTerminal {
            a[]={"a3_ui_f"};
        };
        class RscCredits {
            a[]={"a3_ui_f"};
        };
        class RscAVCamera {
            a[]={"a3_ui_f"};
        };
        class RscDisplayDLCActionMsgBox {
            a[]={"a3_ui_f"};
        };
        class RscDisplayPurchaseNotification {
            a[]={"a3_ui_f"};
        };
        class RscDisplayCommunityGuide {
            a[]={"a3_ui_f"};
        };
        class RscDisplayBootcampMsgBox {
            a[]={"a3_ui_f"};
        };
        class RscDisplayKeyMapMsgBox {
            a[]={"a3_ui_f"};
        };
        class RscButtonArsenal {
            a[]={"a3_ui_f"};
        };
        class RscDisplayArsenal {
            a[]={"a3_ui_f"};
        };
        class RscDisplayGarage {
            a[]={"a3_ui_f"};
        };
        class RscDisplayGarage3DEN {
            a[]={"a3_ui_f"};
        };
        class RscDisplayCreateJIRAIssue {
            a[]={"a3_ui_f"};
        };
        class RscSlingLoadAssistant {
            a[]={"a3_ui_f"};
        };
        class RscDisplayDLCContentBrowser_DLC {
            a[]={"a3_ui_f"};
        };
        class RscDisplayDLCContentBrowser {
            a[]={"a3_ui_f"};
        };
        class RscDisplayDLCPreview_List {
            a[]={"a3_ui_f"};
        };
        class RscDisplayDLCPreview_ListItem {
            a[]={"a3_ui_f"};
        };
        class RscDisplayDLCPreview_ListItemSquare {
            a[]={"a3_ui_f"};
        };
        class RscDisplayDLCPreview {
            a[]={"a3_ui_f"};
        };
        class RscDisplayDynamicGroups {
            a[]={"a3_ui_f"};
        };
        class RscDisplayEGSpectator {
            a[]={"a3_ui_f"};
        };
        class RscDisplayCampaignMP {
            a[]={"a3_ui_f"};
        };
        class RscTextNoShadow {
            a[]={"a3_ui_f"};
        };
        class RscButtonNoColor {
            a[]={"a3_ui_f"};
        };
        class RscDisplayCampaignLobby {
            a[]={"a3_ui_f"};
        };
        class RscCustomInfoSlingLoad {
            a[]={"a3_ui_f"};
        };
        class RscCustomInfoMiniMap {
            a[]={"a3_ui_f"};
        };
        class RscCustomInfoAirborneMiniMap {
            a[]={"a3_ui_f"};
        };
        class RscCustomInfoCrew {
            a[]={"a3_ui_f"};
        };
        class RscCustomInfoSensors {
            a[]={"a3_ui_f"};
        };
        class RscCustomInfoMineDetect {
            a[]={"a3_ui_f","a3_ui_f_orange"};
            m[]={"orange"};
        };
        class RscCustomInfoUAVFeed {
            a[]={"a3_ui_f"};
        };
        class RscCustomInfoTransportFeedMissile {
            a[]={"a3_ui_f"};
        };
        class RscCustomInfoTransportFeedCommander {
            a[]={"a3_ui_f"};
        };
        class RscCustomInfoTransportFeedPrimaryGunner {
            a[]={"a3_ui_f"};
        };
        class RscCustomInfoTransportFeedDriver {
            a[]={"a3_ui_f"};
        };
        class RscDisplayDedicatedServerSettings {
            a[]={"a3_ui_f"};
        };
        class RscDisplayRespawn {
            a[]={"a3_ui_f"};
        };
        class RscDisplaySetupServer {
            a[]={"a3_ui_f"};
        };
        class RscDisplayMPScoreTable_SideLineTemplate {
            a[]={"a3_ui_f"};
        };
        class RscDisplayMPScoreTable_LineTemplate {
            a[]={"a3_ui_f"};
        };
        class RscDisplayMPScoreTable {
            a[]={"a3_ui_f"};
        };
        class RscDisplayQuickPlay {
            a[]={"a3_ui_f"};
        };
        class RscDisplayServerSearch {
            a[]={"a3_ui_f"};
        };
        class RscDisplayServerFound {
            a[]={"a3_ui_f"};
        };
        class RscDisplayLoadCustom {
            a[]={"a3_ui_f"};
        };
        class RscDisplayLoadingBlack {
            a[]={"a3_ui_f"};
        };
        class RscMessageProgress {
            a[]={"a3_ui_f"};
        };
        class RscSitesTemplates {
            a[]={"a3_ui_f"};
        };
        class RscDisplaySelectProfile {
            a[]={"a3_ui_f"};
        };
        class RscDisplayChooseEditorLayout {
            a[]={"a3_ui_f"};
        };
        class RscDisplayArcadeMap_Layout_2 {
            a[]={"a3_ui_f"};
        };
        class RscDisplayArcadeMap_Layout_6 {
            a[]={"a3_ui_f"};
        };
        class RscTestControlTypes {
            a[]={"a3_ui_f"};
        };
        class RscTestControlStyles {
            a[]={"a3_ui_f"};
        };
        class RscTestObjectUI {
            a[]={"a3_ui_f"};
        };
        class RscTestControlsGroupTooltip {
            a[]={"a3_ui_f"};
        };
        class RscTestGrids {
            a[]={"a3_ui_f"};
        };
        class RscTestGridsExported {
            a[]={"a3_ui_f"};
        };
        class RscMenuMove {
            a[]={"a3_ui_f"};
        };
        class RscMenuEngage {
            a[]={"a3_ui_f"};
        };
        class RscMenuWatchDir {
            a[]={"a3_ui_f"};
        };
        class RscMenuStatus {
            a[]={"a3_ui_f"};
        };
        class RscMenuCombatMode {
            a[]={"a3_ui_f"};
        };
        class RscMenuFormations {
            a[]={"a3_ui_f"};
        };
        class RscMenuReply {
            a[]={"a3_ui_f"};
        };
        class RscMenuTeam {
            a[]={"a3_ui_f"};
        };
        class RscMenuSelectTeam {
            a[]={"a3_ui_f"};
        };
        class RscUAVGroupRootMenu {
            a[]={"a3_ui_f"};
        };
        class RscUAVMainMenu {
            a[]={"a3_ui_f"};
        };
        class RscUAVMoveHigh {
            a[]={"a3_ui_f"};
        };
        class RscUAVWatchDir {
            a[]={"a3_ui_f"};
        };
        class RscUAVCombatMode {
            a[]={"a3_ui_f"};
        };
        class RscUAVSpeedMode {
            a[]={"a3_ui_f"};
        };
        class RscUAVFormations {
            a[]={"a3_ui_f"};
        };
        class RscUAVTeam {
            a[]={"a3_ui_f"};
        };
        class RscUAVSelectTeam {
            a[]={"a3_ui_f"};
        };
        class RscUAVReply {
            a[]={"a3_ui_f"};
        };
        class RscUAVUAV {
            a[]={"a3_ui_f"};
        };
        class RscUAVWPRootMenu {
            a[]={"a3_ui_f"};
        };
        class RscUAVWPType {
            a[]={"a3_ui_f"};
        };
        class RscUAVWPAltitude {
            a[]={"a3_ui_f"};
        };
        class RscUAVWPFireMode {
            a[]={"a3_ui_f"};
        };
        class RscUAVWPFormations {
            a[]={"a3_ui_f"};
        };
        class CfgUIColors {
            a[]={"a3_ui_f","a3_ui_f_orange"};
            m[]={"orange"};
        };
        class CfgUIGrids {
            a[]={"a3_ui_f"};
        };
        class CfgLanguages {
            a[]={"a3_ui_f"};
        };
        class CfgWeaponIcons {
            a[]={"a3_ui_f"};
        };
        class CfgLoadingTexts {
            a[]={"a3_ui_f"};
        };
        class CfgLoadingScreens {
            a[]={"a3_ui_f"};
        };
        class CfgChainOfCommand {
            a[]={"a3_ui_f"};
        };
        class CfgScriptPaths {
            a[]={"a3_ui_f","a3_ui_f_curator","a3_ui_f_kart","a3_ui_f_mp_mark","a3_ui_f_exp_a","a3_3den","a3_ui_f_orange","a3_ui_f_tacops"};
            m[]={"curator","kart","mark","orange","tacops"};
        };
        class CfgEditorLayouts {
            a[]={"a3_ui_f"};
        };
        class CfgNotifications {
            a[]={"a3_ui_f","a3_ui_f_curator","a3_missions_f_epa","a3_missions_f_bootcamp","a3_functions_f_mp_mark","a3_modules_f_mp_mark","a3_ui_f_orange"};
            m[]={"curator","mark","orange"};
        };
        class CfgDebriefing {
            a[]={"a3_ui_f","a3_ui_f_curator","a3_missions_f_beta","a3_missions_f_gamma","a3_modules_f_mp_mark_objectives","a3_missions_f_patrol","a3_missions_f_warlords"};
            m[]={"curator","mark","argo"};
        };
        class CfgDLCNotifications {
            a[]={"a3_ui_f"};
        };
        class CfgUnitInsignia {
            a[]={"a3_ui_f","a3_ui_f_exp","a3_ui_f_jets","a3_missions_f_patrol","a3_ui_f_orange","a3_ui_f_tacops","a3_ui_f_tank"};
            m[]={"expansion","jets","argo","orange","tacops","tank"};
        };
        class CfgHoldActions {
            a[]={"a3_ui_f"};
        };
        class CfgFeedbackEffects {};
        class CfgMainMenuSpotlight {
            a[]={"a3_ui_f","a3_ui_f_orange","a3_ui_f_tacops","a3_ui_f_tank"};
            m[]={"orange","tacops","tank"};
        };
        class CfgMarkerClasses {
            a[]={"a3_ui_f"};
        };
        class CfgDiaryPictures {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscChatListCurator {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscToolboxButton {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeOwners {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeOwners2 {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeRank {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeUnitPos {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeDamage {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeFuel {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeSide {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeTaskState {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeTaskDescription {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeSkiptime {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeSound {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeMusic {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeMusicVolume {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeGenericRadio {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeDiaryRecord {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeOvercast {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeFog {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributePostprocess {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeGroupID {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeFormation {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeBehaviour {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeLock {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeMarkerText {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeMarkerColor {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeRespawnVehicle {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeRespawnPosition {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeSkill {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeText {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeAreaSize {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeRespawnTickets {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeCountdown {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeEndMission {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeName {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeInventory {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeRespawnInventory {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeCAS {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeExec {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RSCATTRIBUTEMISSIONNAME {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeSpeedMode {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeTaskDestination {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeWaypointType {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeWaypointTimeout {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeTimeMultiplier {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeBootcampStage {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeHintTopics {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeHintCustom {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributePunishmentAnimation {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeTargetTexture {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class Overlap {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeTargetPopup {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeTargetPopupDelay {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeTargetState {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeTargetData {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscAttributeTargetDataStore {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributes {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesMan {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesVehicle {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesVehicleEmpty {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesGroup {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesWaypoint {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesMarker {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesIntel {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesInventory {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleObjectiveMove {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleObjectiveCustom {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleObjectiveSector {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleObjectiveAttackDefend {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleObjectiveNeutralize {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleObjectiveProtect {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleObjectiveGetIn {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleSkiptime {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleWeather {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleMusic {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleSound {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleRadio {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleDiary {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModulePostprocess {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleRespawnTickets {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleCountdown {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleEndMission {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleRespawnInventory {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleCAS {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleMissionName {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleTimeMultiplier {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayFiringRangeBoard {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayTimeTrialBoard {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayTargetBoard {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleBootcampStage {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModuleHint {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesModulePunishment {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayAttributesTarget {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayCurator {
            a[]={"a3_ui_f_curator"};
            m[]={"curator"};
        };
        class RscDisplayCuratorEngine {};
        class CfgMagazineWells {
            a[]={"a3_weapons_f"};
        };
        class CowsSlot {
            a[]={"a3_weapons_f","a3_weapons_f_mark","a3_weapons_f_exp"};
            m[]={"mark","expansion"};
        };
        class MuzzleSlot {
            a[]={"a3_weapons_f"};
        };
        class PointerSlot {
            a[]={"a3_weapons_f","a3_weapons_f_mark"};
            m[]={"mark"};
        };
        class RCWSOptics {
            a[]={"a3_weapons_f_acc"};
        };
        class Optics_Armored {
            a[]={"a3_weapons_f"};
        };
        class Optics_Commander_01 {
            a[]={"a3_weapons_f"};
        };
        class Optics_Commander_02 {
            a[]={"a3_weapons_f"};
        };
        class Optics_Commander_03 {
            a[]={"a3_weapons_f"};
        };
        class Optics_Gunner_MBT_01 {
            a[]={"a3_weapons_f"};
        };
        class Optics_Gunner_MBT_02 {
            a[]={"a3_weapons_f"};
        };
        class Optics_Gunner_MBT_03 {
            a[]={"a3_weapons_f"};
        };
        class Optics_Gunner_APC_01 {
            a[]={"a3_weapons_f"};
        };
        class Optics_Gunner_APC_02 {
            a[]={"a3_weapons_f"};
        };
        class Optics_Gunner_APC_03 {
            a[]={"a3_weapons_f"};
        };
        class Optics_Gunner_AAA_01 {
            a[]={"a3_weapons_f"};
        };
        class UniformSlotInfo {
            a[]={"a3_characters_f"};
        };
        class CfgMovesFatigue {
            a[]={"a3_characters_f"};
        };
        class MaskFace_A3 {
            a[]={"a3_characters_f_heads"};
        };
        class MaskFaceWoman_A3 {
            a[]={"a3_characters_f_heads"};
        };
        class LipMask_A3 {
            a[]={"a3_characters_f_heads"};
        };
        class CfgSentences {
            a[]={"a3_missions_f","a3_missions_f_beta","a3_missions_f_gamma","a3_missions_f_epa","a3_missions_f_bootcamp","a3_missions_f_heli","a3_missions_f_mark","a3_missions_f_mp_mark","a3_missions_f_exp","a3_missions_f_jets","a3_missions_f_orange","a3_missions_f_tacops","a3_missions_f_tank"};
            m[]={"heli","mark","expansion","jets","orange","tacops","tank"};
        };
        class CfgSFX {
            a[]={"a3_sounds_f","a3_data_f_curator","a3_sounds_f_bootcamp"};
            m[]={"curator"};
        };
        class CfgAnimationSourceSounds {
            a[]={"a3_sounds_f","a3_sounds_f_orange"};
            m[]={"orange"};
        };
        class CfgSoundShapes {
            a[]={"a3_sounds_f"};
        };
        class CfgSoundCurves {
            a[]={"a3_sounds_f"};
        };
        class CfgSoundShaders {
            a[]={"a3_sounds_f","a3_sounds_f_mark","a3_sounds_f_mod","a3_sounds_f_exp","a3_sounds_f_jets","a3_sounds_f_orange","a3_sounds_f_tank"};
            m[]={"mark","expansion","jets","orange","tank"};
        };
        class CfgSoundSets {
            a[]={"a3_sounds_f","a3_sounds_f_mark","a3_sounds_f_mod","a3_sounds_f_exp","a3_sounds_f_jets","a3_sounds_f_orange","a3_sounds_f_tank"};
            m[]={"mark","expansion","jets","orange","tank"};
        };
        class CfgSound3DProcessors {
            a[]={"a3_sounds_f","a3_sounds_f_exp","a3_sounds_f_jets","a3_sounds_f_orange"};
            m[]={"expansion","jets","orange"};
        };
        class CfgDistanceFilters {
            a[]={"a3_sounds_f"};
        };
        class CfgSoundGlobals {
            a[]={"a3_sounds_f"};
        };
        class CfgSoundCategories {
            a[]={"a3_sounds_f","a3_sounds_f_orange"};
            m[]={"orange"};
        };
        class CfgMovesWomen {
            a[]={"a3_static_f"};
        };
        class CfgArmorSimulations {
            a[]={"a3_armor_f"};
        };
        class CfgORBAT {
            a[]={"a3_missions_f_epa"};
        };
        class CfgMovesMaleSdr_TC3 {};
        class CfgMovesMaleSdr_TC4 {};
        class NewTurret {};
        class collisionEffectSmall {
            a[]={"a3_data_f_kart_particleeffects"};
            m[]={"kart"};
        };
        class StarterPistolCloud1 {
            a[]={"a3_data_f_kart_particleeffects"};
            m[]={"kart"};
        };
        class StarterPistolCloud2 {
            a[]={"a3_data_f_kart_particleeffects"};
            m[]={"kart"};
        };
        class CfgTimeTrials {
            a[]={"a3_missions_f_kart","a3_modules_f_kart_timetrials","a3_missions_f_heli","a3_missions_f_orange","a3_missions_f_tank"};
            m[]={"kart","heli","orange","tank"};
        };
        class RscDisplayAttributesModuleObjectiveRaceFinish {
            a[]={"a3_ui_f_kart"};
            m[]={"kart"};
        };
        class RscDisplayAttributesModuleObjectiveRaceStart {
            a[]={"a3_ui_f_kart"};
            m[]={"kart"};
        };
        class RscDisplayAttributesModuleObjectiveRaceCP {
            a[]={"a3_ui_f_kart"};
            m[]={"kart"};
        };
        class CfgVRNoMipmapTextures {
            a[]={"a3_data_f_bootcamp"};
        };
        class CfgVRCourses {
            a[]={"a3_missions_f_bootcamp","a3_missions_f_heli","a3_missions_f_mark"};
            m[]={"heli","mark"};
        };
        class CfgRadio {
            a[]={"a3_missions_f_heli"};
            m[]={"heli"};
        };
        class CfgGroundSupportRequestTypes {
            a[]={"a3_missions_f_heli"};
            m[]={"heli"};
        };
        class CfgMarkNoMipmapTextures {
            a[]={"a3_data_f_mark"};
            m[]={"mark"};
        };
        class CfgRevive {
            a[]={"a3_functions_f_mp_mark"};
            m[]={"mark"};
        };
        class CfgHvtObjectives {
            a[]={"a3_modules_f_mp_mark_objectives"};
            m[]={"mark"};
        };
        class UnderBarrelSlot {
            a[]={"a3_weapons_f_mark","a3_weapons_f_exp"};
            m[]={"mark","expansion"};
        };
        class CfgExtendedAnimation {
            a[]={"a3_anims_f_mark_deployment","a3_anims_f_exp_revive"};
            m[]={"mark","expansion"};
        };
        class CfgRoles {
            a[]={"a3_data_f_exp_b"};
        };
        class ctrlDefault {
            a[]={"a3_3den"};
        };
        class ctrlDefaultText {
            a[]={"a3_3den"};
        };
        class ctrlDefaultButton {
            a[]={"a3_3den"};
        };
        class ctrlStaticPicture {
            a[]={"a3_3den"};
        };
        class ctrlStaticPictureKeepAspect {
            a[]={"a3_3den"};
        };
        class ctrlStaticPictureTile {
            a[]={"a3_3den"};
        };
        class ctrlStaticFrame {
            a[]={"a3_3den"};
        };
        class ctrlStaticLine {
            a[]={"a3_3den"};
        };
        class ctrlStaticMulti {
            a[]={"a3_3den"};
        };
        class ctrlStaticBackground {
            a[]={"a3_3den"};
        };
        class ctrlStaticOverlay {
            a[]={"a3_3den"};
        };
        class ctrlStaticTitle {
            a[]={"a3_3den"};
        };
        class ctrlStaticFooter {
            a[]={"a3_3den"};
        };
        class ctrlStaticBackgroundDisable {
            a[]={"a3_3den"};
        };
        class ctrlStaticBackgroundDisableTiles {
            a[]={"a3_3den"};
        };
        class ctrlButton {
            a[]={"a3_3den"};
        };
        class ctrlButtonPicture {
            a[]={"a3_3den"};
        };
        class ctrlButtonPictureKeepAspect {
            a[]={"a3_3den"};
        };
        class ctrlButtonOK {
            a[]={"a3_3den"};
        };
        class ctrlButtonCancel {
            a[]={"a3_3den"};
        };
        class ctrlButtonClose {
            a[]={"a3_3den"};
        };
        class ctrlButtonToolbar {
            a[]={"a3_3den"};
        };
        class ctrlButtonSearch {
            a[]={"a3_3den"};
        };
        class ctrlButtonExpandAll {
            a[]={"a3_3den"};
        };
        class ctrlButtonCollapseAll {
            a[]={"a3_3den"};
        };
        class ctrlButtonFilter {
            a[]={"a3_3den"};
        };
        class ctrlEdit {
            a[]={"a3_3den"};
        };
        class ctrlEditMulti {
            a[]={"a3_3den"};
        };
        class ctrlSliderV {
            a[]={"a3_3den"};
        };
        class ctrlSliderH {
            a[]={"a3_3den"};
        };
        class ctrlCombo {
            a[]={"a3_3den"};
        };
        class ctrlComboToolbar {
            a[]={"a3_3den"};
        };
        class ctrlListbox {
            a[]={"a3_3den"};
        };
        class ctrlToolbox {
            a[]={"a3_3den"};
        };
        class ctrlToolboxPicture {
            a[]={"a3_3den"};
        };
        class ctrlToolboxPictureKeepAspect {
            a[]={"a3_3den"};
        };
        class ctrlCheckboxes {
            a[]={"a3_3den"};
        };
        class ctrlCheckboxesCheckbox {
            a[]={"a3_3den"};
        };
        class ctrlProgress {
            a[]={"a3_3den"};
        };
        class ctrlHTML {
            a[]={"a3_3den"};
        };
        class ctrlActiveText {
            a[]={"a3_3den"};
        };
        class ctrlActivePictureKeepAspect {
            a[]={"a3_3den"};
        };
        class ctrlTree {
            a[]={"a3_3den"};
        };
        class ctrlControlsGroup {
            a[]={"a3_3den"};
        };
        class ctrlControlsGroupNoHScrollbars {
            a[]={"a3_3den"};
        };
        class ctrlControlsGroupNoVScrollbars {
            a[]={"a3_3den"};
        };
        class ctrlShortcutButton {
            a[]={"a3_3den"};
        };
        class ctrlShortcutButtonOK {
            a[]={"a3_3den"};
        };
        class ctrlShortcutButtonCancel {
            a[]={"a3_3den"};
        };
        class ctrlShortcutButtonSteam {
            a[]={"a3_3den"};
        };
        class ctrlXListbox {
            a[]={"a3_3den"};
        };
        class ctrlXSliderV {
            a[]={"a3_3den"};
        };
        class ctrlXSliderH {
            a[]={"a3_3den"};
        };
        class ctrlMenu {
            a[]={"a3_3den"};
        };
        class ctrlMenuStrip {
            a[]={"a3_3den"};
        };
        class ctrlObject {};
        class ctrlObjectContainer {};
        class ctrlObjectZoom {};
        class ctrlMap {
            a[]={"a3_3den"};
        };
        class ctrlMapEmpty {
            a[]={"a3_3den"};
        };
        class ctrlMapMain {};
        class ctrlListNBox {
            a[]={"a3_3den"};
        };
        class ctrlCheckboxToolbar {
            a[]={"a3_3den"};
        };
        class ctrlControlsGroupHighlight {
            a[]={"a3_3den"};
        };
        class ctrlControlsGroupTutorial {
            a[]={"a3_3den"};
        };
        class Display {
            a[]={"a3_3den"};
        };
        class DisplaySimulated {
            a[]={"a3_3den"};
        };
        class Display3DEN {
            a[]={"a3_3den"};
        };
        class Display3DENPlace {
            a[]={"a3_3den"};
        };
        class Display3DENNew {
            a[]={"a3_3den"};
        };
        class Display3DENSave {
            a[]={"a3_3den"};
        };
        class Display3DENRename {
            a[]={"a3_3den"};
        };
        class Display3DENEditComposition {
            a[]={"a3_3den"};
        };
        class Display3DENSaveComposition {
            a[]={"a3_3den"};
        };
        class Display3DENEditAttributes {
            a[]={"a3_3den"};
        };
        class Display3DENEditAttributesIntel {
            a[]={"a3_3den"};
        };
        class Display3DENEditAttributesPreview {
            a[]={"a3_3den"};
        };
        class Display3DENUpdates {
            a[]={"a3_3den"};
        };
        class Display3DENCopy {
            a[]={"a3_3den"};
        };
        class display3DENHostSettings {
            a[]={"a3_3den"};
        };
        class Display3DENTutorial {
            a[]={"a3_3den"};
        };
        class display3DENMsgBox {
            a[]={"a3_3den"};
        };
        class display3DENPublishMission {
            a[]={"a3_3den"};
        };
        class display3DENPublishMissionSelectImage {
            a[]={"a3_3den"};
        };
        class display3DENPublishMissionSelectTags {
            a[]={"a3_3den"};
        };
        class Display3DENRequiredAddons {
            a[]={"a3_3den"};
        };
        class DisplayTest {
            a[]={"a3_3den"};
        };
        class RFastWaterEffectsScooter {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class LFastWaterEffectsScooter {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class RWaterEffectsScooter {};
        class LWaterEffectsScooter {};
        class REngEffectsScooter {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class LEngEffectsScooter {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class ExhaustsEffectPlaneSmall {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class ExhaustsEffectPlaneSmallHP {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class ExhaustsEffectVTOL1 {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class ExhaustsEffectVTOL1HP {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class ExhaustsEffectVTOL2 {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class VTOLDust {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class VTOLDustBig {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class VTOLWater {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class VTOLWaterBig {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class LDustEffectsRed {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class RDustEffectsRed {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class LDustEffectsAirRed {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class RDustEffectsAirRed {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class LDustEffectsManRed {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class RDustEffectsManRed {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class RocketBackEffectsRPG7 {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class ImpactEffectsRed {
            a[]={"a3_data_f_exp_particleeffects"};
            m[]={"expansion"};
        };
        class RadioProtocolFRE {
            a[]={"a3_dubbing_radio_f_exp"};
            m[]={"expansion"};
        };
        class RadioProtocolCHI {
            a[]={"a3_dubbing_radio_f_exp"};
            m[]={"expansion"};
        };
        class EventHandlers {};
        class FX_FuselageVapour_FighterJet {
            a[]={"a3_data_f_jets"};
            m[]={"jets"};
        };
        class FX_WingVortices_FighterJet {
            a[]={"a3_data_f_jets"};
            m[]={"jets"};
        };
        class FX_Missile_AA {
            a[]={"a3_data_f_jets"};
            m[]={"jets"};
        };
        class FX_Missile_AG {
            a[]={"a3_data_f_jets"};
            m[]={"jets"};
        };
        class FX_Missile_SAM {
            a[]={"a3_data_f_jets"};
            m[]={"jets"};
        };
        class CfgArgoNoMipmapTextures {
            a[]={"a3_data_f_argo"};
            m[]={"argo"};
        };
        class VScrollbar {};
        class HScrollbar {};
        class RscDisplayRead {
            a[]={"a3_ui_f_orange"};
            m[]={"orange"};
        };
        class RscDisplayPhoneCallIncoming {
            a[]={"a3_ui_f_orange"};
            m[]={"orange"};
        };
        class RscDisplayOrangeChoice {
            a[]={"a3_ui_f_orange"};
            m[]={"orange"};
        };
        class RscDisplayAANArticle {
            a[]={"a3_ui_f_orange"};
            m[]={"orange"};
        };
        class CfgLeaflets {
            a[]={"a3_ui_f_orange"};
            m[]={"orange"};
        };
        class ClusterCraterEffects {};
        class ClusterCraterWaterEffects {
            a[]={"a3_weapons_f_orange"};
            m[]={"orange"};
        };
        class ClusterEffectFly {
            a[]={"a3_weapons_f_orange"};
            m[]={"orange"};
        };
        class ClusterExplosionEffects {
            a[]={"a3_weapons_f_orange"};
            m[]={"orange"};
        };
        class Leaflets {
            a[]={"a3_weapons_f_orange"};
            m[]={"orange"};
        };
        class TrainingMineEffect {
            a[]={"a3_weapons_f_orange"};
            m[]={"orange"};
        };
        class DeminingExplosiveTrials {
            a[]={"a3_weapons_f_orange"};
            m[]={"orange"};
        };
        class DeminingExplosiveTrials_Dummy {
            a[]={"a3_weapons_f_orange"};
            m[]={"orange"};
        };
        class DeminingExplosiveExplosion {
            a[]={"a3_weapons_f_orange"};
            m[]={"orange"};
        };
        class DeminingExplosiveCrater {
            a[]={"a3_weapons_f_orange"};
            m[]={"orange"};
        };
        class DeminingExplosiveCrater_Dummy {
            a[]={"a3_weapons_f_orange"};
            m[]={"orange"};
        };
        class EffectMOPMS {
            a[]={"a3_weapons_f_orange_explosives"};
            m[]={"orange"};
        };
        class RscDisplayDebriefingTacops {
            a[]={"a3_ui_f_tacops"};
            m[]={"tacops"};
        };
        class CfgWLRequisitionPresets {
            a[]={"a3_missions_f_warlords"};
        };
        class RscUnitInfo {};
        class FX_Missile_SAM_LongRange {
            a[]={"a3_data_f_sams"};
            m[]={"jets"};
        };
    };
    class OCSL {
        class CfgMods {
            a[]={"cau_discordrichpresence","cau_expansion_core"};
            m[]={"@discord rich presence","@connorau expansion mod"};
        };
        class CfgAmmo {
            a[]={"blastcore_maincore","jsrs_soundmod_bullethits","jsrs_soundmod_sonic_cracks"};
            m[]={"@blastcore edited (standalone version)","@jsrs soundmod"};
        };
        class CfgCloudlets {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactEffectsBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactEffectsSmall {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactEffectsBlood {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactEffectsWater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExplosionEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustsEffect {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustsEffectBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class LDustEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class RDustEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class LWaterEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class RWaterEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class LEngEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class REngEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class HeliDust {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class HeliWater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class DamageSmokeHeli {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class DamageSmokePlane {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ScudEffect {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class CfgLights {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class CfgCloudletShapes {
            a[]={"warfxpe"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class CfgPatches {
            a[]={"cau_discordrichpresence","jsrs_soundmod_snd_air_vehicles","jsrs_soundmod_snd_environment","jsrs_soundmod_snd_land_vehicles","jsrs_soundmod_snd_movement","jsrs_soundmod_snd_warfare","jsrs_soundmod_snd_weapons","cau_expansion_core","cau_expansion_markers__0","cau_expansion_markers__0_0","cau_expansion_textures__1","cau_expansion_textures__4","cau_expansion_textures__3","cau_expansion_textures__0","cau_expansion_textures__2","cau_expansion_textures__1_0","cau_expansion_textures__1_4","cau_expansion_textures__1_3","cau_expansion_textures__1_2","cau_expansion_textures__1_1","cau_expansion_textures__4_0","cau_expansion_textures__4_1","cau_expansion_textures__4_25","cau_expansion_textures__4_23","cau_expansion_textures__4_4","cau_expansion_textures__4_17","cau_expansion_textures__4_20","cau_expansion_textures__4_15","cau_expansion_textures__4_16","cau_expansion_textures__4_19","cau_expansion_textures__4_18","cau_expansion_textures__4_2","cau_expansion_textures__4_7","cau_expansion_textures__4_21","cau_expansion_textures__4_5","cau_expansion_textures__4_24","cau_expansion_textures__4_22","cau_expansion_textures__4_3","cau_expansion_textures__4_12","cau_expansion_textures__4_13","cau_expansion_textures__4_14","cau_expansion_textures__4_9","cau_expansion_textures__4_10","cau_expansion_textures__4_11","cau_expansion_textures__4_8","cau_expansion_textures__4_6","cau_expansion_textures__3_0","cau_expansion_textures__3_1","cau_expansion_textures__0_0","cau_expansion_textures__2_0","cau_expansion_textures__2_1","warfxpe","blastcore_maincore","jsrs_soundmod_bullethits","jsrs_soundmod_environment","jsrs_soundmod_framework","jsrs_soundmod_sonic_cracks","blastcore_vep","jsrs_soundmod_helicopters","jsrs_soundmod_landvehicles","jsrs_soundmod_movement","jsrs_soundmod_weapons","jsrs_soundmod_explosions"};
            m[]={"@[dev] private dev addon (al)","@discord rich presence","@jsrs soundmod","@connorau expansion mod","@blastcore edited (standalone version)"};
        };
        class CfgEnvSounds {
            a[]={"jsrs_soundmod_environment"};
            m[]={"@jsrs soundmod"};
        };
        class CfgMarkers {
            a[]={"cau_expansion_markers__0"};
            m[]={"@connorau expansion mod"};
        };
        class CfgFunctions {
            a[]={"cau_discordrichpresence","cau_expansion_core"};
            m[]={"@discord rich presence","@connorau expansion mod"};
        };
        class CounterMeasureChaff {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class AutoCannonFired {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ArtilleryFired1 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ArtilleryFiredL {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ArtilleryFiredR {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MLRSFired {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MortarFired {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Missile0 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Missile1 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Missile2 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Missile3 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Missile4 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Missile5 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SmokeTrailEffectMain1 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SmokeTrailEffectMain2 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class WPTrailEffectMain2 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactEffectsStandard {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactEffectsMedium {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class GrenadeCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class IEDMineBigExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class IEDMineBigGarbageCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class IEDMineFlame {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class IEDMineBigLandCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class IEDMineSmallExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class IEDMineSmallGarbageCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class IEDMineSmallLandCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MortarCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ATMissileCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class AAMissileCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class HEShellCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ArtyShellCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SecondaryCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExploAmmoCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ShotUnderwater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactEffectsHardGround {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactEffectsGroundSabot {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactEffectsSea {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactEffectsSeaMen {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactEffectsAir {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactEffectsWaterBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactEffectsWaterRocket {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactEffectsWaterHE {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactEffectsWaterExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactMetal {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactMetalSabotBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactMetalSabotSmall {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactGlass {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactGlassThin {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactWood {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactPlaster {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactPlastic {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactRubber {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactConcrete {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactConcreteSabot {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactConcreteSabotSmall {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactLeaves {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactLeavesGreen {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactLeavesDead {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactLeavesGreenBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactLeavesPalm {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactLeavesPine {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BombCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExplosionEffectsWater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class CannonFire {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class HeavyCaliber {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class RocketBackEffectsRPGNT {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class RocketBackEffectsStaticRPG {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SencondaryExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MineNondirectionalCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MineNondirectionalCraterSmall {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MineNondirectionalExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MineNondirectionalExplosionSmall {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MineUnderwaterExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MineUnderwaterABExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MineUnderwaterPDMExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class GrenadeExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MortarExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class WPExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BasicAmmoExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class AmmoBulletEffect {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ATMissileExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class AAMissileExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MineExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ATMineExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MineCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ATMineCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BoundingMineExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BoundingMineCrater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MineJumpEffect {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class DirectionalMineExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class DirectionalMineExplosionBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ATRocketExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class HERocketExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class HEShellExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ArtyShellExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BombExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class HelicopterExplosionEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class HelicopterExplosionEffects2 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExplosionShardsFire {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class VehicleExplosionEffectsBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class VehicleExplosionEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class RocketExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExploAmmoExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MGunSmoke {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustEffectOffroad {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustsEffectFBoat {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustsEffectAMV {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustEffectTractor {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustEffectHEMTT {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustEffectHTruck {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustEffectHeli {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustsEffectHeliMed {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustsEffectHeliBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustsEffectPlane {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustsEffectPlaneBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustEffectOnWater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustEffectBigOnWater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class RDustEffectsMan {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class LSandEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class RSandEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class LSandEffectsBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class RSandEffectsBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class LGrassEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class RGrassEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class LGrassEffectsBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class RGrassEffectsBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class LGrassDryEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class RGrassDryEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class LGrassEffectsDryBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class RGrassEffectsDryBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class LStonesEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class RStonesEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class LStonesEffectsBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class RStonesEffectsBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class PersonDust {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class RFastWaterEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class LFastWaterEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class REngEffectsSmall {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class LEngEffectsSmall {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SmallFire {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SmallFireBarrel {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SmokeShellWhiteEffect {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SmokeShellWhiteSmall {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class IncinerateShell {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ChemlightLight_green {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ChemlightLight_red {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ChemlightLight_yellow {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ChemlightLight_blue {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class AirDestructionEffects {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class collisionEffect {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class FireDamage {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ScubaEffect {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BulletBubbles {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactUnderwater {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class cau_expansion_Markers {
            a[]={"cau_expansion_markers__0"};
            m[]={"@connorau expansion mod"};
        };
        class cau_expansion_Textures {
            a[]={"cau_expansion_textures__1"};
            m[]={"@connorau expansion mod"};
        };
        class BIS_AddonInfo {
            a[]={"warfxpe"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class CfgSoundCurves {
            a[]={"jsrs_soundmod_framework"};
            m[]={"@jsrs soundmod"};
        };
        class CfgSoundShaders {
            a[]={"jsrs_soundmod_environment","jsrs_soundmod_sonic_cracks","jsrs_soundmod_helicopters","jsrs_soundmod_landvehicles","jsrs_soundmod_movement","jsrs_soundmod_weapons","jsrs_soundmod_explosions"};
            m[]={"@jsrs soundmod"};
        };
        class CfgSoundSets {
            a[]={"jsrs_soundmod_environment","jsrs_soundmod_sonic_cracks","jsrs_soundmod_helicopters","jsrs_soundmod_landvehicles","jsrs_soundmod_movement","jsrs_soundmod_weapons","jsrs_soundmod_explosions"};
            m[]={"@jsrs soundmod"};
        };
        class CfgSound3DProcessors {
            a[]={"jsrs_soundmod_framework"};
            m[]={"@jsrs soundmod"};
        };
        class CfgDistanceFilters {
            a[]={"jsrs_soundmod_framework"};
            m[]={"@jsrs soundmod"};
        };
        class FlareTest {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SmokeCS {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class 35mmFlakFlash {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class CannonFiredBC {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BCImpactEffectsSmall {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BCImpactEffectsHardGround {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BCImpactConcrete {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BCImpactConcrete_50cal {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BCImpactConcrete_20mm {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BCImpactConcrete_30mm {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BCImpactConcrete_30mmHE {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BCImpactDirt_50cal {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BCImpactDirt_20mm {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BCImpactDirt_30mm {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BCImpactDirt_30mmHE {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BCImpactConcrete_120mm {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BCImpactConcrete_120mmHE {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BCImpactDirt_120mm {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BCImpactDirt_120mmHE {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactMetal_HJ {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ImpactEffectsGroundSabotBig {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExplosionSparksLight {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Fireball_Glow {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SmokeTrail_SmokeCS {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class CannonMuzzleFlash {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SmokeTrail_Blastcore1 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SmokeTrail_Blastcore3 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Blastcore_Vehicle_Explosion_Emit {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Blastcore_Vehicle_Explosion_Sparks {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SmokeTrail_Blastcore2 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Smoke_Trail_TankRound_EmitterLink_Small {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Smoke_Trail_TankRound_EmitterLink_BaseSmoke {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Smoke_Trail_TankRound_EmitterLink {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Blastcore_Smoke_TankRound_01_Link {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Smoke_Trail_TankRound_EmitterLink_02 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Blastcore_TankRound_SmokeTrail {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Smoke_Trail_TankRoundConcrete_EmitterLink {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Blastcore_Smoke_TankRoundConcrete_01_Link {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Smoke_Trail_TankRoundConcrete_EmitterLink_02 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Blastcore_TankRoundConcrete_SmokeTrail {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SmokeTrail_BlastcoreBulletRound_Ground {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SmokeTrail_BlastcoreBulletRound_Ground2 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SmokeTrail_BlastcoreHeavyBulletRound_Ground {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SmokeTrail_BlastcoreHeavyBulletRound_Ground2 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class bullet_Concrete {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Smoke_Trail_Rocket_EmitterLink {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Blastcore_Smoke_Rocket_01_Link {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Smoke_Trail_Rocket_EmitterLink_02 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Blastcore_Rocket_SmokeTrail {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Blastcore_Artillery_Explosion_EmitterLink {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Blastcore_Artillery_ExplosionSmoke_EmitterLink {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Smoke_Trail_Artillery_EmitterLink {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Blastcore_Smoke_Artillery_01_Link {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Smoke_Trail_Artillery_EmitterLink_02 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Blastcore_Artillery_SmokeTrail {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Blastcore_Shockwave_Large_Dust {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Blastcore_Blood_01 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Blastcore_Blood_02 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class AA_Explode_Smoke {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class DirtTrail_Blastcore1 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class DirtTrail_Blastcore2 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class RockBackfireLight {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class CMeasuresFlareLight {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Flamelight {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Flamelight2 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Demo_Charge_Explode {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Demo_Charge_Smoke {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class M136_Explode {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class M136_Smoke {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class 40mm_HE_Explode {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class 80mm_Explode {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class 155mm_Explode {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustEffectStrider {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class ExhaustEffectIfrit {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class AircraftDebris {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class AircraftDebris2 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class 155mm_Smoke {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class 80mm_Smoke {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MK82_Smoke {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class AA_Explode {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class AA_Smoke {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Hellfire_Smoke {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Hellfire_Explode {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SABOT_Explode {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class SABOT_Smoke {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MK82_Explode {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class HERound_Emitter {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class hellfire_explosiontrail {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Hellfire_SmokeTrail_01 {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class Demo_Charge_Explosion_Emitter {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class mk82_explosiontrail {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class FuelTruck_ExplosionLink {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class FuelTruck_FireLight {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class AmmoTruck_ExplosionLink {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class MLRS_Explode {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class HERoundExplosion {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class 25mm_Explode {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class 30mmExplode {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class 120mm_HE {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
        class BlastcoreImpactEffectsBlood {
            a[]={"blastcore_vep"};
            m[]={"@blastcore edited (standalone version)"};
        };
    };
	/*
		// 0 - default arma, 1 - mods
		_mode = 0;
		_al=["3den","a3_3den","a3_3den_language","a3_air_f","a3_air_f_beta","a3_air_f_beta_heli_attack_01","a3_air_f_beta_heli_attack_02","a3_air_f_beta_heli_transport_01","a3_air_f_beta_heli_transport_02","a3_air_f_beta_parachute_01","a3_air_f_beta_parachute_02","a3_air_f_epb","a3_air_f_epb_heli_light_03","a3_air_f_epc","a3_air_f_epc_plane_cas_01","a3_air_f_epc_plane_cas_02","a3_air_f_epc_plane_fighter_03","a3_air_f_exp","a3_air_f_exp_heli_light_01","a3_air_f_exp_heli_transport_01","a3_air_f_exp_plane_civil_01","a3_air_f_exp_uav_03","a3_air_f_exp_uav_04","a3_air_f_exp_vtol_01","a3_air_f_exp_vtol_02","a3_air_f_gamma","a3_air_f_gamma_plane_fighter_03","a3_air_f_gamma_uav_01","a3_air_f_gamma_uav_02","a3_air_f_heli","a3_air_f_heli_heli_attack_01","a3_air_f_heli_heli_attack_02","a3_air_f_heli_heli_light_01","a3_air_f_heli_heli_light_02","a3_air_f_heli_heli_light_03","a3_air_f_heli_heli_transport_01","a3_air_f_heli_heli_transport_02","a3_air_f_heli_heli_transport_03","a3_air_f_heli_heli_transport_04","a3_air_f_heli_light_01","a3_air_f_heli_light_02","a3_air_f_jets","a3_air_f_jets_plane_fighter_01","a3_air_f_jets_plane_fighter_02","a3_air_f_jets_plane_fighter_04","a3_air_f_jets_uav_05","a3_air_f_orange","a3_air_f_orange_heli_transport_02","a3_air_f_orange_uav_01","a3_air_f_orange_uav_06","a3_animals_f","a3_animals_f_animconfig","a3_animals_f_beta","a3_animals_f_beta_chicken","a3_animals_f_beta_dog","a3_animals_f_beta_goat","a3_animals_f_beta_sheep","a3_animals_f_chicken","a3_animals_f_dog","a3_animals_f_fishes","a3_animals_f_goat","a3_animals_f_kestrel","a3_animals_f_rabbit","a3_animals_f_seagull","a3_animals_f_sheep","a3_animals_f_snakes","a3_animals_f_turtle","a3_anims_f","a3_anims_f_bootcamp","a3_anims_f_config_sdr","a3_anims_f_config_sdr_weaponswitching","a3_anims_f_data","a3_anims_f_epa","a3_anims_f_epc","a3_anims_f_exp","a3_anims_f_exp_a","a3_anims_f_exp_revive","a3_anims_f_heli","a3_anims_f_jets","a3_anims_f_kart","a3_anims_f_mark","a3_anims_f_mark_deployment","a3_anims_f_mod","a3_armor_f","a3_armor_f_amv","a3_armor_f_apc_wheeled_03","a3_armor_f_argo","a3_armor_f_argo_apc_tracked_01","a3_armor_f_argo_apc_wheeled_02","a3_armor_f_beta","a3_armor_f_beta_apc_tracked_01","a3_armor_f_beta_apc_tracked_02","a3_armor_f_beta_apc_wheeled_01","a3_armor_f_beta_apc_wheeled_02","a3_armor_f_epb","a3_armor_f_epb_apc_tracked_03","a3_armor_f_epb_mbt_03","a3_armor_f_epc","a3_armor_f_epc_mbt_01","a3_armor_f_exp","a3_armor_f_exp_apc_tracked_01","a3_armor_f_exp_apc_tracked_02","a3_armor_f_exp_apc_wheeled_01","a3_armor_f_exp_apc_wheeled_02","a3_armor_f_exp_mbt_01","a3_armor_f_exp_mbt_02","a3_armor_f_gamma","a3_armor_f_gamma_apc_wheeled_03","a3_armor_f_gamma_mbt_01","a3_armor_f_gamma_mbt_02","a3_armor_f_marid","a3_armor_f_panther","a3_armor_f_slammer","a3_armor_f_t100k","a3_armor_f_tank","a3_armor_f_tank_afv_wheeled_01","a3_armor_f_tank_lt_01","a3_armor_f_tank_mbt_04","a3_baseconfig_f","a3_boat_f","a3_boat_f_beta","a3_boat_f_beta_boat_armed_01","a3_boat_f_beta_boat_transport_01","a3_boat_f_beta_sdv_01","a3_boat_f_boat_armed_01","a3_boat_f_boat_transport_01","a3_boat_f_civilian_boat","a3_boat_f_destroyer","a3_boat_f_destroyer_destroyer_01","a3_boat_f_epc","a3_boat_f_epc_submarine_01","a3_boat_f_epc_submarine_01_f","a3_boat_f_exp","a3_boat_f_exp_boat_armed_01","a3_boat_f_exp_boat_transport_01","a3_boat_f_exp_boat_transport_02","a3_boat_f_exp_scooter_transport_01","a3_boat_f_gamma","a3_boat_f_gamma_boat_civil_01","a3_boat_f_gamma_boat_civil_04","a3_boat_f_gamma_boat_transport_01","a3_boat_f_heli","a3_boat_f_heli_boat_armed_01","a3_boat_f_heli_sdv_01","a3_boat_f_jets","a3_boat_f_jets_carrier_01","a3_boat_f_sdv_01","a3_boat_f_trawler","a3_cargoposes_f","a3_cargoposes_f_exp","a3_cargoposes_f_heli","a3_cargoposes_f_jets","a3_cargoposes_f_orange","a3_cargoposes_f_tank","a3_characters_f","a3_characters_f_beta","a3_characters_f_beta_indep","a3_characters_f_blufor","a3_characters_f_bootcamp","a3_characters_f_bootcamp_common","a3_characters_f_civil","a3_characters_f_common","a3_characters_f_epa","a3_characters_f_epb","a3_characters_f_epb_heads","a3_characters_f_epc","a3_characters_f_exp","a3_characters_f_exp_civil","a3_characters_f_exp_headgear","a3_characters_f_exp_vests","a3_characters_f_gamma","a3_characters_f_heads","a3_characters_f_indep","a3_characters_f_jets","a3_characters_f_jets_vests","a3_characters_f_kart","a3_characters_f_mark","a3_characters_f_opfor","a3_characters_f_orange","a3_characters_f_orange_facewear","a3_characters_f_orange_headgear","a3_characters_f_orange_uniforms","a3_characters_f_orange_vests","a3_characters_f_patrol","a3_characters_f_proxies","a3_characters_f_tacops","a3_characters_f_tank","a3_characters_f_tank_headgear","a3_characters_f_tank_uniforms","a3_data_f","a3_data_f_argo","a3_data_f_argo_loadorder","a3_data_f_bootcamp","a3_data_f_bootcamp_loadorder","a3_data_f_curator","a3_data_f_curator_characters","a3_data_f_curator_eagle","a3_data_f_curator_intel","a3_data_f_curator_loadorder","a3_data_f_curator_misc","a3_data_f_curator_music","a3_data_f_curator_respawn","a3_data_f_curator_virtual","a3_data_f_destroyer","a3_data_f_destroyer_loadorder","a3_data_f_exp","a3_data_f_exp_a","a3_data_f_exp_a_loadorder","a3_data_f_exp_a_virtual","a3_data_f_exp_b","a3_data_f_exp_b_loadorder","a3_data_f_exp_loadorder","a3_data_f_exp_particleeffects","a3_data_f_heli","a3_data_f_heli_loadorder","a3_data_f_hook","a3_data_f_jets","a3_data_f_jets_loadorder","a3_data_f_kart","a3_data_f_kart_loadorder","a3_data_f_kart_particleeffects","a3_data_f_loadorder","a3_data_f_mark","a3_data_f_mark_loadorder","a3_data_f_mod","a3_data_f_mod_loadorder","a3_data_f_orange","a3_data_f_orange_loadorder","a3_data_f_particleeffects","a3_data_f_patrol","a3_data_f_patrol_loadorder","a3_data_f_sams","a3_data_f_sams_loadorder","a3_data_f_tacops","a3_data_f_tacops_loadorder","a3_data_f_tank","a3_data_f_tank_loadorder","a3_data_f_warlords","a3_data_f_warlords_loadorder","a3_drones_f","a3_drones_f_air_f_gamma_uav_01","a3_drones_f_air_f_gamma_uav_02","a3_drones_f_characters_f_gamma","a3_drones_f_soft_f_gamma_ugv_01","a3_drones_f_weapons_f_gamma_ammoboxes","a3_drones_f_weapons_f_gamma_items","a3_dubbing_f","a3_dubbing_f_beta","a3_dubbing_f_bootcamp","a3_dubbing_f_epa","a3_dubbing_f_epb","a3_dubbing_f_epc","a3_dubbing_f_exp","a3_dubbing_f_gamma","a3_dubbing_f_heli","a3_dubbing_f_jets","a3_dubbing_f_mark","a3_dubbing_f_mp_mark","a3_dubbing_f_orange","a3_dubbing_f_tacops","a3_dubbing_f_tank","a3_dubbing_f_warlords","a3_dubbing_radio_f","a3_dubbing_radio_f_data_eng","a3_dubbing_radio_f_data_engb","a3_dubbing_radio_f_data_gre","a3_dubbing_radio_f_data_per","a3_dubbing_radio_f_data_vr","a3_dubbing_radio_f_exp","a3_dubbing_radio_f_exp_data_chi","a3_dubbing_radio_f_exp_data_engfre","a3_dubbing_radio_f_exp_data_fre","a3_editor_f","a3_editorpreviews_f","a3_editorpreviews_f_argo","a3_editorpreviews_f_destroyer","a3_editorpreviews_f_exp","a3_editorpreviews_f_jets","a3_editorpreviews_f_orange","a3_editorpreviews_f_sams","a3_editorpreviews_f_tank","a3_functions_f","a3_functions_f_bootcamp","a3_functions_f_curator","a3_functions_f_destroyer","a3_functions_f_epa","a3_functions_f_epc","a3_functions_f_exp","a3_functions_f_exp_a","a3_functions_f_heli","a3_functions_f_jets","a3_functions_f_mark","a3_functions_f_mp_mark","a3_functions_f_orange","a3_functions_f_patrol","a3_functions_f_tacops","a3_functions_f_tank","a3_functions_f_warlords","a3_language_f","a3_language_f_argo","a3_language_f_beta","a3_language_f_bootcamp","a3_language_f_curator","a3_language_f_destroyer","a3_language_f_epa","a3_language_f_epb","a3_language_f_epc","a3_language_f_exp","a3_language_f_exp_a","a3_language_f_exp_b","a3_language_f_gamma","a3_language_f_heli","a3_language_f_jets","a3_language_f_kart","a3_language_f_mark","a3_language_f_mod","a3_language_f_mp_mark","a3_language_f_orange","a3_language_f_patrol","a3_language_f_sams","a3_language_f_tacops","a3_language_f_tank","a3_language_f_warlords","a3_languagemissions_f","a3_languagemissions_f_beta","a3_languagemissions_f_bootcamp","a3_languagemissions_f_epa","a3_languagemissions_f_epb","a3_languagemissions_f_epc","a3_languagemissions_f_exp","a3_languagemissions_f_exp_a","a3_languagemissions_f_gamma","a3_languagemissions_f_heli","a3_languagemissions_f_jets","a3_languagemissions_f_kart","a3_languagemissions_f_mark","a3_languagemissions_f_mp_mark","a3_languagemissions_f_orange","a3_languagemissions_f_patrol","a3_languagemissions_f_tacops","a3_languagemissions_f_tank","a3_map_altis","a3_map_altis_data","a3_map_altis_data_layers","a3_map_altis_scenes","a3_map_altis_scenes_f","a3_map_data","a3_map_data_exp","a3_map_malden","a3_map_malden_data","a3_map_malden_data_layers","a3_map_malden_scenes_f","a3_map_stratis","a3_map_stratis_data","a3_map_stratis_data_layers","a3_map_stratis_scenes","a3_map_stratis_scenes_f","a3_map_tanoa_scenes_f","a3_map_tanoabuka","a3_map_tanoabuka_data","a3_map_tanoabuka_data_layers","a3_map_vr","a3_map_vr_scenes","a3_map_vr_scenes_f","a3_misc_f","a3_misc_f_helpers","a3_missions_f","a3_missions_f_beta","a3_missions_f_beta_data","a3_missions_f_beta_video","a3_missions_f_bootcamp","a3_missions_f_bootcamp_data","a3_missions_f_bootcamp_video","a3_missions_f_curator","a3_missions_f_data","a3_missions_f_epa","a3_missions_f_epa_data","a3_missions_f_epa_video","a3_missions_f_epb","a3_missions_f_epc","a3_missions_f_exp","a3_missions_f_exp_a","a3_missions_f_exp_a_data","a3_missions_f_exp_data","a3_missions_f_exp_video","a3_missions_f_gamma","a3_missions_f_gamma_data","a3_missions_f_gamma_video","a3_missions_f_heli","a3_missions_f_heli_data","a3_missions_f_heli_video","a3_missions_f_jets","a3_missions_f_kart","a3_missions_f_kart_data","a3_missions_f_mark","a3_missions_f_mark_data","a3_missions_f_mark_video","a3_missions_f_mp_mark","a3_missions_f_mp_mark_data","a3_missions_f_orange","a3_missions_f_patrol","a3_missions_f_tacops","a3_missions_f_tank","a3_missions_f_video","a3_missions_f_warlords","a3_missions_f_warlords_data","a3_modules_f","a3_modules_f_beta","a3_modules_f_beta_data","a3_modules_f_beta_firingdrills","a3_modules_f_bootcamp","a3_modules_f_bootcamp_misc","a3_modules_f_curator","a3_modules_f_curator_animals","a3_modules_f_curator_cas","a3_modules_f_curator_chemlights","a3_modules_f_curator_curator","a3_modules_f_curator_effects","a3_modules_f_curator_environment","a3_modules_f_curator_flares","a3_modules_f_curator_intel","a3_modules_f_curator_lightning","a3_modules_f_curator_mines","a3_modules_f_curator_misc","a3_modules_f_curator_multiplayer","a3_modules_f_curator_objectives","a3_modules_f_curator_ordnance","a3_modules_f_curator_respawn","a3_modules_f_curator_smokeshells","a3_modules_f_data","a3_modules_f_dyno","a3_modules_f_effects","a3_modules_f_epb","a3_modules_f_epb_misc","a3_modules_f_events","a3_modules_f_exp","a3_modules_f_exp_a","a3_modules_f_groupmodifiers","a3_modules_f_hc","a3_modules_f_heli","a3_modules_f_heli_misc","a3_modules_f_heli_spawnai","a3_modules_f_intel","a3_modules_f_jets","a3_modules_f_kart","a3_modules_f_kart_data","a3_modules_f_kart_timetrials","a3_modules_f_livefeed","a3_modules_f_mark","a3_modules_f_mark_firingdrills","a3_modules_f_mark_objectives","a3_modules_f_marta","a3_modules_f_misc","a3_modules_f_mp_mark","a3_modules_f_mp_mark_objectives","a3_modules_f_multiplayer","a3_modules_f_objectmodifiers","a3_modules_f_orange","a3_modules_f_patrol","a3_modules_f_sites","a3_modules_f_skirmish","a3_modules_f_strategicmap","a3_modules_f_supports","a3_modules_f_tacops","a3_modules_f_tank","a3_modules_f_uav","a3_modules_f_warlords","a3_music_f","a3_music_f_argo","a3_music_f_bootcamp","a3_music_f_bootcamp_music","a3_music_f_epa","a3_music_f_epa_music","a3_music_f_epb","a3_music_f_epb_music","a3_music_f_epc","a3_music_f_epc_music","a3_music_f_exp","a3_music_f_exp_music","a3_music_f_heli","a3_music_f_heli_music","a3_music_f_jets","a3_music_f_mark","a3_music_f_mark_music","a3_music_f_music","a3_music_f_orange","a3_music_f_tacops","a3_music_f_tank","a3_plants_f","a3_plants_f_bush","a3_props_f_argo","a3_props_f_argo_civilian","a3_props_f_argo_civilian_infoboards","a3_props_f_argo_items","a3_props_f_argo_items_documents","a3_props_f_argo_items_electronics","a3_props_f_destroyer","a3_props_f_destroyer_military_briefingroomdesk","a3_props_f_destroyer_military_briefingroomscreen","a3_props_f_exp","a3_props_f_exp_a","a3_props_f_exp_a_military","a3_props_f_exp_a_military_equipment","a3_props_f_exp_civilian","a3_props_f_exp_civilian_garbage","a3_props_f_exp_commercial","a3_props_f_exp_commercial_market","a3_props_f_exp_industrial","a3_props_f_exp_industrial_heavyequipment","a3_props_f_exp_infrastructure","a3_props_f_exp_infrastructure_railways","a3_props_f_exp_infrastructure_traffic","a3_props_f_exp_military","a3_props_f_exp_military_camps","a3_props_f_exp_military_oldplanewrecks","a3_props_f_exp_naval","a3_props_f_exp_naval_boats","a3_props_f_jets","a3_props_f_jets_military_tractor","a3_props_f_jets_military_trolley","a3_props_f_orange","a3_props_f_orange_civilian","a3_props_f_orange_civilian_constructions","a3_props_f_orange_civilian_infoboards","a3_props_f_orange_furniture","a3_props_f_orange_humanitarian","a3_props_f_orange_humanitarian_camps","a3_props_f_orange_humanitarian_garbage","a3_props_f_orange_humanitarian_supplies","a3_props_f_orange_items","a3_props_f_orange_items_decorative","a3_props_f_orange_items_documents","a3_props_f_orange_items_electronics","a3_props_f_orange_items_tools","a3_props_f_tank","a3_props_f_tank_military","a3_props_f_tank_military_tankacc","a3_props_f_tank_military_wrecks","a3_roads_f","a3_rocks_f","a3_rocks_f_argo","a3_rocks_f_argo_limestone","a3_rocks_f_blunt","a3_rocks_f_exp","a3_rocks_f_exp_cliff","a3_rocks_f_exp_lavastones","a3_rocks_f_sharp","a3_rocks_f_water","a3_signs_f","a3_signs_f_ad","a3_signs_f_signs_ad","a3_soft_f","a3_soft_f_beta","a3_soft_f_beta_mrap_03","a3_soft_f_beta_quadbike","a3_soft_f_beta_quadbike_01","a3_soft_f_beta_truck_01","a3_soft_f_beta_truck_02","a3_soft_f_bootcamp","a3_soft_f_bootcamp_offroad_01","a3_soft_f_bootcamp_quadbike","a3_soft_f_bootcamp_quadbike_01","a3_soft_f_bootcamp_truck","a3_soft_f_bootcamp_van_01","a3_soft_f_car","a3_soft_f_crusher_ugv","a3_soft_f_epc","a3_soft_f_epc_truck_03","a3_soft_f_exp","a3_soft_f_exp_lsv_01","a3_soft_f_exp_lsv_02","a3_soft_f_exp_mrap_01","a3_soft_f_exp_mrap_02","a3_soft_f_exp_offroad_01","a3_soft_f_exp_offroad_02","a3_soft_f_exp_quadbike_01","a3_soft_f_exp_truck_01","a3_soft_f_exp_truck_03","a3_soft_f_exp_ugv_01","a3_soft_f_exp_van_01","a3_soft_f_gamma","a3_soft_f_gamma_hatchback_01","a3_soft_f_gamma_hemtt","a3_soft_f_gamma_offroad","a3_soft_f_gamma_offroad_01","a3_soft_f_gamma_quadbike","a3_soft_f_gamma_quadbike_01","a3_soft_f_gamma_suv_01","a3_soft_f_gamma_truck_01","a3_soft_f_gamma_truck_02","a3_soft_f_gamma_truckheavy","a3_soft_f_gamma_van_01","a3_soft_f_heli","a3_soft_f_heli_car","a3_soft_f_heli_crusher_ugv","a3_soft_f_heli_hatchback_01","a3_soft_f_heli_mrap_01","a3_soft_f_heli_mrap_02","a3_soft_f_heli_mrap_03","a3_soft_f_heli_quadbike","a3_soft_f_heli_quadbike_01","a3_soft_f_heli_suv","a3_soft_f_heli_suv_01","a3_soft_f_heli_truck","a3_soft_f_heli_ugv_01","a3_soft_f_heli_van_01","a3_soft_f_hemtt","a3_soft_f_kart","a3_soft_f_kart_kart_01","a3_soft_f_mrap_01","a3_soft_f_mrap_02","a3_soft_f_mrap_03","a3_soft_f_offroad_01","a3_soft_f_orange","a3_soft_f_orange_offroad_01","a3_soft_f_orange_offroad_02","a3_soft_f_orange_truck_02","a3_soft_f_orange_ugv_01","a3_soft_f_orange_van_02","a3_soft_f_quadbike","a3_soft_f_quadbike_01","a3_soft_f_suv","a3_soft_f_truck","a3_soft_f_truckheavy","a3_sounds_f","a3_sounds_f_arsenal","a3_sounds_f_bootcamp","a3_sounds_f_characters","a3_sounds_f_environment","a3_sounds_f_epb","a3_sounds_f_epc","a3_sounds_f_exp","a3_sounds_f_exp_a","a3_sounds_f_heli","a3_sounds_f_jets","a3_sounds_f_kart","a3_sounds_f_mark","a3_sounds_f_mod","a3_sounds_f_orange","a3_sounds_f_patrol","a3_sounds_f_sfx","a3_sounds_f_tacops","a3_sounds_f_tank","a3_sounds_f_vehicles","a3_static_f","a3_static_f_aa_01","a3_static_f_at_01","a3_static_f_beta","a3_static_f_beta_mortar_01","a3_static_f_destroyer","a3_static_f_destroyer_boat_rack_01","a3_static_f_destroyer_ship_gun_01","a3_static_f_destroyer_ship_mrls_01","a3_static_f_exp","a3_static_f_exp_aa_01","a3_static_f_exp_at_01","a3_static_f_exp_gmg_01","a3_static_f_exp_hmg_01","a3_static_f_exp_mortar_01","a3_static_f_gamma","a3_static_f_gamma_aa","a3_static_f_gamma_at","a3_static_f_gamma_mortar_01","a3_static_f_jets","a3_static_f_jets_aaa_system_01","a3_static_f_jets_sam_system_01","a3_static_f_jets_sam_system_02","a3_static_f_mark","a3_static_f_mark_designator_01","a3_static_f_mark_designator_02","a3_static_f_mortar_01","a3_static_f_sams","a3_static_f_sams_radar_system_01","a3_static_f_sams_radar_system_02","a3_static_f_sams_sam_system_03","a3_static_f_sams_sam_system_04","a3_structures_f","a3_structures_f_argo","a3_structures_f_argo_civilian","a3_structures_f_argo_civilian_accessories","a3_structures_f_argo_civilian_addons","a3_structures_f_argo_civilian_garbage","a3_structures_f_argo_civilian_house_big01","a3_structures_f_argo_civilian_house_big02","a3_structures_f_argo_civilian_house_small01","a3_structures_f_argo_civilian_house_small02","a3_structures_f_argo_civilian_stone_house_big_01","a3_structures_f_argo_civilian_stone_shed_01","a3_structures_f_argo_civilian_unfinished_building_01","a3_structures_f_argo_commercial","a3_structures_f_argo_commercial_accessories","a3_structures_f_argo_commercial_billboards","a3_structures_f_argo_commercial_fuelstation_01","a3_structures_f_argo_commercial_shop_02","a3_structures_f_argo_commercial_supermarket_01","a3_structures_f_argo_cultural","a3_structures_f_argo_cultural_church","a3_structures_f_argo_cultural_statues","a3_structures_f_argo_decals","a3_structures_f_argo_decals_horizontal","a3_structures_f_argo_industrial","a3_structures_f_argo_industrial_agriculture","a3_structures_f_argo_industrial_materials","a3_structures_f_argo_infrastructure","a3_structures_f_argo_infrastructure_runways","a3_structures_f_argo_infrastructure_seaports","a3_structures_f_argo_infrastructure_watersupply","a3_structures_f_argo_military","a3_structures_f_argo_military_bunkers","a3_structures_f_argo_military_containerbases","a3_structures_f_argo_military_domes","a3_structures_f_argo_military_fortifications","a3_structures_f_argo_military_turrets","a3_structures_f_argo_signs","a3_structures_f_argo_signs_city","a3_structures_f_argo_signs_directions","a3_structures_f_argo_signs_warnings","a3_structures_f_argo_walls","a3_structures_f_argo_walls_city","a3_structures_f_argo_walls_concrete","a3_structures_f_argo_walls_military","a3_structures_f_argo_walls_net","a3_structures_f_argo_walls_pipe","a3_structures_f_argo_walls_tin","a3_structures_f_argo_walls_wooden","a3_structures_f_argo_wrecks","a3_structures_f_bootcamp","a3_structures_f_bootcamp_civ_camping","a3_structures_f_bootcamp_civ_sportsgrounds","a3_structures_f_bootcamp_ind_cargo","a3_structures_f_bootcamp_items_electronics","a3_structures_f_bootcamp_items_food","a3_structures_f_bootcamp_items_sport","a3_structures_f_bootcamp_system","a3_structures_f_bootcamp_training","a3_structures_f_bootcamp_vr_blocks","a3_structures_f_bootcamp_vr_coverobjects","a3_structures_f_bootcamp_vr_helpers","a3_structures_f_bridges","a3_structures_f_civ","a3_structures_f_civ_accessories","a3_structures_f_civ_ancient","a3_structures_f_civ_belltowers","a3_structures_f_civ_calvaries","a3_structures_f_civ_camping","a3_structures_f_civ_chapels","a3_structures_f_civ_constructions","a3_structures_f_civ_dead","a3_structures_f_civ_garbage","a3_structures_f_civ_graffiti","a3_structures_f_civ_infoboards","a3_structures_f_civ_kiosks","a3_structures_f_civ_lamps","a3_structures_f_civ_market","a3_structures_f_civ_offices","a3_structures_f_civ_pavements","a3_structures_f_civ_playground","a3_structures_f_civ_sportsgrounds","a3_structures_f_civ_statues","a3_structures_f_civ_tourism","a3_structures_f_data","a3_structures_f_dominants","a3_structures_f_dominants_amphitheater","a3_structures_f_dominants_castle","a3_structures_f_dominants_church","a3_structures_f_dominants_hospital","a3_structures_f_dominants_lighthouse","a3_structures_f_dominants_wip","a3_structures_f_epa","a3_structures_f_epa_civ_camping","a3_structures_f_epa_civ_constructions","a3_structures_f_epa_items_electronics","a3_structures_f_epa_items_food","a3_structures_f_epa_items_medical","a3_structures_f_epa_items_tools","a3_structures_f_epa_items_vessels","a3_structures_f_epa_mil_scrapyard","a3_structures_f_epa_walls","a3_structures_f_epb","a3_structures_f_epb_civ_accessories","a3_structures_f_epb_civ_camping","a3_structures_f_epb_civ_dead","a3_structures_f_epb_civ_garbage","a3_structures_f_epb_civ_graffiti","a3_structures_f_epb_civ_playground","a3_structures_f_epb_furniture","a3_structures_f_epb_items_documents","a3_structures_f_epb_items_luggage","a3_structures_f_epb_items_military","a3_structures_f_epb_items_vessels","a3_structures_f_epb_naval_fishing","a3_structures_f_epc","a3_structures_f_epc_civ_accessories","a3_structures_f_epc_civ_camping","a3_structures_f_epc_civ_garbage","a3_structures_f_epc_civ_infoboards","a3_structures_f_epc_civ_kiosks","a3_structures_f_epc_civ_playground","a3_structures_f_epc_civ_tourism","a3_structures_f_epc_dominants_ghosthotel","a3_structures_f_epc_dominants_stadium","a3_structures_f_epc_furniture","a3_structures_f_epc_items_documents","a3_structures_f_epc_items_electronics","a3_structures_f_epc_walls","a3_structures_f_exp","a3_structures_f_exp_a","a3_structures_f_exp_a_vr_blocks","a3_structures_f_exp_a_vr_helpers","a3_structures_f_exp_civilian","a3_structures_f_exp_civilian_accessories","a3_structures_f_exp_civilian_garages","a3_structures_f_exp_civilian_house_big_01","a3_structures_f_exp_civilian_house_big_02","a3_structures_f_exp_civilian_house_big_03","a3_structures_f_exp_civilian_house_big_04","a3_structures_f_exp_civilian_house_big_05","a3_structures_f_exp_civilian_house_native_01","a3_structures_f_exp_civilian_house_native_02","a3_structures_f_exp_civilian_house_small_01","a3_structures_f_exp_civilian_house_small_02","a3_structures_f_exp_civilian_house_small_03","a3_structures_f_exp_civilian_house_small_04","a3_structures_f_exp_civilian_house_small_05","a3_structures_f_exp_civilian_house_small_06","a3_structures_f_exp_civilian_school_01","a3_structures_f_exp_civilian_sheds","a3_structures_f_exp_civilian_slum_01","a3_structures_f_exp_civilian_slum_02","a3_structures_f_exp_civilian_slum_03","a3_structures_f_exp_civilian_slum_04","a3_structures_f_exp_civilian_slum_05","a3_structures_f_exp_civilian_sportsgrounds","a3_structures_f_exp_commercial","a3_structures_f_exp_commercial_addons","a3_structures_f_exp_commercial_advertisements","a3_structures_f_exp_commercial_fuelstation_01","a3_structures_f_exp_commercial_fuelstation_02","a3_structures_f_exp_commercial_hotel_01","a3_structures_f_exp_commercial_hotel_02","a3_structures_f_exp_commercial_market","a3_structures_f_exp_commercial_multistorybuilding_01","a3_structures_f_exp_commercial_multistorybuilding_03","a3_structures_f_exp_commercial_multistorybuilding_04","a3_structures_f_exp_commercial_shop_city_01","a3_structures_f_exp_commercial_shop_city_02","a3_structures_f_exp_commercial_shop_city_03","a3_structures_f_exp_commercial_shop_city_04","a3_structures_f_exp_commercial_shop_city_05","a3_structures_f_exp_commercial_shop_city_06","a3_structures_f_exp_commercial_shop_city_07","a3_structures_f_exp_commercial_shop_town_01","a3_structures_f_exp_commercial_shop_town_02","a3_structures_f_exp_commercial_shop_town_03","a3_structures_f_exp_commercial_shop_town_04","a3_structures_f_exp_commercial_shop_town_05","a3_structures_f_exp_commercial_supermarket_01","a3_structures_f_exp_commercial_warehouses","a3_structures_f_exp_cultural","a3_structures_f_exp_cultural_ancientrelics","a3_structures_f_exp_cultural_basaltruins","a3_structures_f_exp_cultural_cathedral_01","a3_structures_f_exp_cultural_cemeteries","a3_structures_f_exp_cultural_church_01","a3_structures_f_exp_cultural_church_02","a3_structures_f_exp_cultural_church_03","a3_structures_f_exp_cultural_fortress_01","a3_structures_f_exp_cultural_temple_native_01","a3_structures_f_exp_cultural_totems","a3_structures_f_exp_data","a3_structures_f_exp_industrial","a3_structures_f_exp_industrial_dieselpowerplant_01","a3_structures_f_exp_industrial_fields","a3_structures_f_exp_industrial_materials","a3_structures_f_exp_industrial_port","a3_structures_f_exp_industrial_stockyard_01","a3_structures_f_exp_industrial_sugarcanefactory_01","a3_structures_f_exp_industrial_surfacemine_01","a3_structures_f_exp_infrastructure","a3_structures_f_exp_infrastructure_airports","a3_structures_f_exp_infrastructure_bridges","a3_structures_f_exp_infrastructure_pavements","a3_structures_f_exp_infrastructure_powerlines","a3_structures_f_exp_infrastructure_railways","a3_structures_f_exp_infrastructure_roads","a3_structures_f_exp_infrastructure_runways","a3_structures_f_exp_infrastructure_watersupply","a3_structures_f_exp_military","a3_structures_f_exp_military_barracks_01","a3_structures_f_exp_military_camonets","a3_structures_f_exp_military_containerbases","a3_structures_f_exp_military_emplacements","a3_structures_f_exp_military_flags","a3_structures_f_exp_military_fortifications","a3_structures_f_exp_military_pillboxes","a3_structures_f_exp_military_trenches","a3_structures_f_exp_naval","a3_structures_f_exp_naval_canals","a3_structures_f_exp_naval_piers","a3_structures_f_exp_signs","a3_structures_f_exp_signs_companies","a3_structures_f_exp_signs_traffic","a3_structures_f_exp_walls","a3_structures_f_exp_walls_backalleys","a3_structures_f_exp_walls_bamboo","a3_structures_f_exp_walls_concrete","a3_structures_f_exp_walls_crashbarriers","a3_structures_f_exp_walls_hedges","a3_structures_f_exp_walls_net","a3_structures_f_exp_walls_pipe","a3_structures_f_exp_walls_polewalls","a3_structures_f_exp_walls_railings","a3_structures_f_exp_walls_slum","a3_structures_f_exp_walls_stone","a3_structures_f_exp_walls_tin","a3_structures_f_exp_walls_wired","a3_structures_f_exp_walls_wooden","a3_structures_f_furniture","a3_structures_f_heli","a3_structures_f_heli_civ_accessories","a3_structures_f_heli_civ_constructions","a3_structures_f_heli_civ_garbage","a3_structures_f_heli_civ_market","a3_structures_f_heli_furniture","a3_structures_f_heli_ind_airport","a3_structures_f_heli_ind_cargo","a3_structures_f_heli_ind_machines","a3_structures_f_heli_items_airport","a3_structures_f_heli_items_electronics","a3_structures_f_heli_items_food","a3_structures_f_heli_items_luggage","a3_structures_f_heli_items_sport","a3_structures_f_heli_items_tools","a3_structures_f_heli_vr_helpers","a3_structures_f_households","a3_structures_f_households_addons","a3_structures_f_households_house_big01","a3_structures_f_households_house_big02","a3_structures_f_households_house_shop01","a3_structures_f_households_house_shop02","a3_structures_f_households_house_small01","a3_structures_f_households_house_small02","a3_structures_f_households_house_small03","a3_structures_f_households_slum","a3_structures_f_households_stone_big","a3_structures_f_households_stone_shed","a3_structures_f_households_stone_small","a3_structures_f_households_wip","a3_structures_f_ind","a3_structures_f_ind_airport","a3_structures_f_ind_cargo","a3_structures_f_ind_carservice","a3_structures_f_ind_concretemixingplant","a3_structures_f_ind_crane","a3_structures_f_ind_dieselpowerplant","a3_structures_f_ind_factory","a3_structures_f_ind_fuelstation","a3_structures_f_ind_fuelstation_small","a3_structures_f_ind_pipes","a3_structures_f_ind_powerlines","a3_structures_f_ind_reservoirtank","a3_structures_f_ind_shed","a3_structures_f_ind_solarpowerplant","a3_structures_f_ind_tank","a3_structures_f_ind_transmitter_tower","a3_structures_f_ind_wavepowerplant","a3_structures_f_ind_windmill","a3_structures_f_ind_windpowerplant","a3_structures_f_items","a3_structures_f_items_cans","a3_structures_f_items_documents","a3_structures_f_items_electronics","a3_structures_f_items_food","a3_structures_f_items_gadgets","a3_structures_f_items_luggage","a3_structures_f_items_medical","a3_structures_f_items_military","a3_structures_f_items_stationery","a3_structures_f_items_tools","a3_structures_f_items_valuables","a3_structures_f_items_vessels","a3_structures_f_kart","a3_structures_f_kart_civ_sportsgrounds","a3_structures_f_kart_mil_flags","a3_structures_f_kart_signs_companies","a3_structures_f_mark","a3_structures_f_mark_items_military","a3_structures_f_mark_items_sport","a3_structures_f_mark_mil_flags","a3_structures_f_mark_training","a3_structures_f_mark_vr_helpers","a3_structures_f_mark_vr_shapes","a3_structures_f_mark_vr_targets","a3_structures_f_mil","a3_structures_f_mil_bagbunker","a3_structures_f_mil_bagfence","a3_structures_f_mil_barracks","a3_structures_f_mil_bunker","a3_structures_f_mil_cargo","a3_structures_f_mil_flags","a3_structures_f_mil_fortification","a3_structures_f_mil_helipads","a3_structures_f_mil_offices","a3_structures_f_mil_radar","a3_structures_f_mil_scrapyard","a3_structures_f_mil_shelters","a3_structures_f_mil_tenthangar","a3_structures_f_naval","a3_structures_f_naval_buoys","a3_structures_f_naval_fishing","a3_structures_f_naval_piers","a3_structures_f_naval_rowboats","a3_structures_f_orange","a3_structures_f_orange_humanitarian","a3_structures_f_orange_humanitarian_camps","a3_structures_f_orange_humanitarian_flags","a3_structures_f_orange_industrial","a3_structures_f_orange_industrial_cargo","a3_structures_f_orange_signs","a3_structures_f_orange_signs_mines","a3_structures_f_orange_signs_special","a3_structures_f_orange_vr_helpers","a3_structures_f_orange_walls","a3_structures_f_orange_walls_plastic","a3_structures_f_research","a3_structures_f_signs_companies","a3_structures_f_system","a3_structures_f_tank","a3_structures_f_tank_decals","a3_structures_f_tank_decals_horizontal","a3_structures_f_tank_military","a3_structures_f_tank_military_fortifications","a3_structures_f_tank_military_repairdepot","a3_structures_f_training","a3_structures_f_training_invisibletarget","a3_structures_f_walls","a3_structures_f_wrecks","a3_supplies_f_exp","a3_supplies_f_exp_ammoboxes","a3_supplies_f_heli","a3_supplies_f_heli_bladders","a3_supplies_f_heli_cargonets","a3_supplies_f_heli_fuel","a3_supplies_f_heli_slingload","a3_supplies_f_mark","a3_supplies_f_orange","a3_supplies_f_orange_ammoboxes","a3_supplies_f_orange_bags","a3_supplies_f_orange_cargonets","a3_uav_f_characters_f_gamma","a3_uav_f_weapons_f_gamma_ammoboxes","a3_ui_f","a3_ui_f_bootcamp","a3_ui_f_curator","a3_ui_f_data","a3_ui_f_exp","a3_ui_f_exp_a","a3_ui_f_heli","a3_ui_f_jets","a3_ui_f_kart","a3_ui_f_mark","a3_ui_f_mp_mark","a3_ui_f_orange","a3_ui_f_patrol","a3_ui_f_tacops","a3_ui_f_tank","a3_uifonts_f","a3_vegetation_f_argo","a3_vegetation_f_exp","a3_weapons_f","a3_weapons_f_aaf","a3_weapons_f_acc","a3_weapons_f_ammoboxes","a3_weapons_f_beta","a3_weapons_f_beta_acc","a3_weapons_f_beta_ammoboxes","a3_weapons_f_beta_ebr","a3_weapons_f_beta_longrangerifles_ebr","a3_weapons_f_beta_longrangerifles_gm6","a3_weapons_f_beta_longrangerifles_m320","a3_weapons_f_beta_rifles_khaybar","a3_weapons_f_beta_rifles_mx","a3_weapons_f_beta_rifles_trg20","a3_weapons_f_bootcamp","a3_weapons_f_bootcamp_ammoboxes","a3_weapons_f_bootcamp_longrangerifles_gm6","a3_weapons_f_bootcamp_longrangerifles_gm6_camo","a3_weapons_f_bootcamp_longrangerifles_m320","a3_weapons_f_bootcamp_longrangerifles_m320_camo","a3_weapons_f_csat","a3_weapons_f_destroyer","a3_weapons_f_dummyweapons","a3_weapons_f_ebr","a3_weapons_f_epa","a3_weapons_f_epa_acc","a3_weapons_f_epa_ammoboxes","a3_weapons_f_epa_ebr","a3_weapons_f_epa_longrangerifles_dmr_01","a3_weapons_f_epa_longrangerifles_gm6","a3_weapons_f_epa_rifles_mx","a3_weapons_f_epb","a3_weapons_f_epb_acc","a3_weapons_f_epb_ammoboxes","a3_weapons_f_epb_longrangerifles_gm3","a3_weapons_f_epb_longrangerifles_gm6","a3_weapons_f_epb_longrangerifles_m320","a3_weapons_f_epb_rifles_mx_black","a3_weapons_f_epc","a3_weapons_f_exp","a3_weapons_f_exp_launchers_rpg32","a3_weapons_f_exp_launchers_rpg7","a3_weapons_f_exp_launchers_titan","a3_weapons_f_exp_longrangerifles_dmr_07","a3_weapons_f_exp_machineguns_lmg_03","a3_weapons_f_exp_pistols_pistol_01","a3_weapons_f_exp_rifles_ak12","a3_weapons_f_exp_rifles_akm","a3_weapons_f_exp_rifles_aks","a3_weapons_f_exp_rifles_arx","a3_weapons_f_exp_rifles_ctar","a3_weapons_f_exp_rifles_ctars","a3_weapons_f_exp_rifles_spar_01","a3_weapons_f_exp_rifles_spar_02","a3_weapons_f_exp_rifles_spar_03","a3_weapons_f_exp_smgs_smg_05","a3_weapons_f_explosives","a3_weapons_f_fia","a3_weapons_f_gamma","a3_weapons_f_gamma_acc","a3_weapons_f_gamma_ammoboxes","a3_weapons_f_gamma_items","a3_weapons_f_gamma_longrangerifles_ebr","a3_weapons_f_gamma_rifles_mx","a3_weapons_f_headgear","a3_weapons_f_itemholders","a3_weapons_f_items","a3_weapons_f_jets","a3_weapons_f_kart","a3_weapons_f_kart_pistols_pistol_signal_f","a3_weapons_f_launchers_law","a3_weapons_f_launchers_nlaw","a3_weapons_f_launchers_rpg32","a3_weapons_f_launchers_titan","a3_weapons_f_longrangerifles_dmr_01","a3_weapons_f_longrangerifles_ebr","a3_weapons_f_longrangerifles_gm6","a3_weapons_f_longrangerifles_m320","a3_weapons_f_machineguns_m200","a3_weapons_f_machineguns_zafir","a3_weapons_f_mark","a3_weapons_f_mark_acc","a3_weapons_f_mark_ebr","a3_weapons_f_mark_longrangerifles_dmr_01","a3_weapons_f_mark_longrangerifles_dmr_02","a3_weapons_f_mark_longrangerifles_dmr_03","a3_weapons_f_mark_longrangerifles_dmr_04","a3_weapons_f_mark_longrangerifles_dmr_05","a3_weapons_f_mark_longrangerifles_dmr_06","a3_weapons_f_mark_longrangerifles_ebr","a3_weapons_f_mark_longrangerifles_gm6","a3_weapons_f_mark_longrangerifles_gm6_camo","a3_weapons_f_mark_longrangerifles_m320","a3_weapons_f_mark_longrangerifles_m320_camo","a3_weapons_f_mark_machineguns_m200","a3_weapons_f_mark_machineguns_mmg_01","a3_weapons_f_mark_machineguns_mmg_02","a3_weapons_f_mark_machineguns_zafir","a3_weapons_f_mark_rifles_khaybar","a3_weapons_f_mark_rifles_mk20","a3_weapons_f_mark_rifles_mx","a3_weapons_f_mark_rifles_sdar","a3_weapons_f_mark_rifles_trg20","a3_weapons_f_mod","a3_weapons_f_mod_smgs_smg_03","a3_weapons_f_nato","a3_weapons_f_orange","a3_weapons_f_orange_explosives","a3_weapons_f_orange_items","a3_weapons_f_patrol","a3_weapons_f_pistols_acpc2","a3_weapons_f_pistols_p07","a3_weapons_f_pistols_pdw2000","a3_weapons_f_pistols_pistol_heavy_01","a3_weapons_f_pistols_pistol_heavy_02","a3_weapons_f_pistols_rook40","a3_weapons_f_rifles_khaybar","a3_weapons_f_rifles_mk20","a3_weapons_f_rifles_mx","a3_weapons_f_rifles_mx_black","a3_weapons_f_rifles_sdar","a3_weapons_f_rifles_smg_02","a3_weapons_f_rifles_trg20","a3_weapons_f_rifles_vector","a3_weapons_f_sams","a3_weapons_f_smgs_pdw2000","a3_weapons_f_smgs_smg_01","a3_weapons_f_smgs_smg_02","a3_weapons_f_tank","a3_weapons_f_tank_bags","a3_weapons_f_tank_launchers_mraws","a3_weapons_f_tank_launchers_vorona","a3_weapons_f_uniforms","a3_weapons_f_vests","a3data","core","curatoronly_air_f_beta_heli_attack_01","curatoronly_air_f_beta_heli_attack_02","curatoronly_air_f_gamma_uav_01","curatoronly_armor_f_amv","curatoronly_armor_f_beta_apc_tracked_02","curatoronly_armor_f_marid","curatoronly_armor_f_panther","curatoronly_armor_f_slammer","curatoronly_armor_f_t100k","curatoronly_boat_f_boat_armed_01","curatoronly_characters_f_blufor","curatoronly_characters_f_common","curatoronly_characters_f_opfor","curatoronly_modules_f_curator_animals","curatoronly_modules_f_curator_chemlights","curatoronly_modules_f_curator_effects","curatoronly_modules_f_curator_environment","curatoronly_modules_f_curator_flares","curatoronly_modules_f_curator_lightning","curatoronly_modules_f_curator_mines","curatoronly_modules_f_curator_objectives","curatoronly_modules_f_curator_ordnance","curatoronly_modules_f_curator_smokeshells","curatoronly_signs_f","curatoronly_soft_f_crusher_ugv","curatoronly_soft_f_mrap_01","curatoronly_soft_f_mrap_02","curatoronly_soft_f_quadbike","curatoronly_static_f_gamma","curatoronly_static_f_mortar_01","curatoronly_structures_f_civ_ancient","curatoronly_structures_f_civ_camping","curatoronly_structures_f_civ_garbage","curatoronly_structures_f_epa_civ_constructions","curatoronly_structures_f_epb_civ_dead","curatoronly_structures_f_ind_cargo","curatoronly_structures_f_ind_crane","curatoronly_structures_f_ind_reservoirtank","curatoronly_structures_f_ind_transmitter_tower","curatoronly_structures_f_items_vessels","curatoronly_structures_f_mil_bagbunker","curatoronly_structures_f_mil_bagfence","curatoronly_structures_f_mil_cargo","curatoronly_structures_f_mil_fortification","curatoronly_structures_f_mil_radar","curatoronly_structures_f_mil_shelters","curatoronly_structures_f_research","curatoronly_structures_f_walls","curatoronly_structures_f_wrecks","map_vr"];
		_ml=["curator","kart","heli","mark","expansion","jets","argo","orange","tacops","tank"];
		_out = ['class ',(['GCSL','OCSL'] select _mode),' {',endl];
		{
		    _a = str(configSourceAddonList _x apply {tolower _x} select {(_x in _al) isequalto (_mode == 0)});
		    _m = str(configSourceModList _x apply {tolower _x} select {(_x in _ml) isequalto (_mode == 0)});
		    _i = false;
		    if (_mode == 0 OR (count _a > 2 OR count _m > 2)) then {
		        _out pushback format["    class %1 {",configname _x];
		        if (count _a > 2) then {
		            _out pushback ([endl,'        a[]={',_a select [1,count _a - 2],'};'] joinstring '');
		            _i = true;
		        };
		        if (count _m > 2) then {
		            _out pushback ([endl,'        m[]={',_m select [1,count _m - 2],'};'] joinstring '');
		            _i = true;
		        };
		        _out pushback (["};"+endl,endl+"    };"+endl] select _i);
		    };
		} foreach ('true' configclasses configfile);
		_out pushback '};';
		copytoclipboard(_out joinstring '');
	*/
};
